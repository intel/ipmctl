#
#  Copyright (c) 2006 - 2017, Intel Corporation. All rights reserved.<BR>
#  Portions copyright (c) 2008 - 2009, Apple Inc. All rights reserved.<BR>
#  Portions copyright (c) 2011 - 2014, ARM Ltd. All rights reserved.<BR>
#  Copyright (c) 2015, Hewlett-Packard Development Company, L.P.<BR>
#  (C) Copyright 2016 Hewlett Packard Enterprise Development LP<BR>
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#

IDENTIFIER = Default TOOL_CHAIN_CONF

# common path macros
DEFINE VS2003_BIN       = ENV(VS2003_PREFIX)Vc7\bin
DEFINE VS2003_DLL       = ENV(VS2003_PREFIX)Common7\IDE

DEFINE VS2005_BIN       = ENV(VS2005_PREFIX)Vc\bin
DEFINE VS2005_DLL       = ENV(VS2005_PREFIX)Common7\IDE;DEF(VS2005_BIN)
DEFINE VS2005_BINX64    = DEF(VS2005_BIN)\x86_amd64
DEFINE VS2005_BIN64     = DEF(VS2005_BIN)\x86_ia64

DEFINE VS2005x86_BIN    = ENV(VS2005_PREFIX)Vc\bin
DEFINE VS2005x86_DLL    = ENV(VS2005_PREFIX)Common7\IDE;DEF(VS2005x86_BIN)
DEFINE VS2005x86_BINX64 = DEF(VS2005x86_BIN)\x86_amd64
DEFINE VS2005x86_BIN64  = DEF(VS2005x86_BIN)\x86_ia64

DEFINE VS2008_BIN      = ENV(VS2008_PREFIX)Vc\bin
DEFINE VS2008_DLL      = ENV(VS2008_PREFIX)Common7\IDE;DEF(VS2008_BIN)
DEFINE VS2008_BINX64   = DEF(VS2008_BIN)\x86_amd64
DEFINE VS2008_BIN64    = DEF(VS2008_BIN)\x86_ia64

DEFINE VS2008x86_BIN    = ENV(VS2008_PREFIX)Vc\bin
DEFINE VS2008x86_DLL    = ENV(VS2008_PREFIX)Common7\IDE;DEF(VS2008x86_BIN)
DEFINE VS2008x86_BINX64 = DEF(VS2008x86_BIN)\x86_amd64
DEFINE VS2008x86_BIN64  = DEF(VS2008x86_BIN)\x86_ia64

DEFINE VS2010_BIN      = ENV(VS2010_PREFIX)Vc\bin
DEFINE VS2010_DLL      = ENV(VS2010_PREFIX)Common7\IDE;DEF(VS2010_BIN)
DEFINE VS2010_BINX64   = DEF(VS2010_BIN)\x86_amd64
DEFINE VS2010_BIN64    = DEF(VS2010_BIN)\x86_ia64

DEFINE VS2010x86_BIN    = ENV(VS2010_PREFIX)Vc\bin
DEFINE VS2010x86_DLL    = ENV(VS2010_PREFIX)Common7\IDE;DEF(VS2010x86_BIN)
DEFINE VS2010x86_BINX64 = DEF(VS2010x86_BIN)\x86_amd64
DEFINE VS2010x86_BIN64  = DEF(VS2010x86_BIN)\x86_ia64

DEFINE VS2012_BIN      = ENV(VS2012_PREFIX)Vc\bin
DEFINE VS2012_DLL      = ENV(VS2012_PREFIX)Common7\IDE;DEF(VS2012_BIN)
DEFINE VS2012_BINX64   = DEF(VS2012_BIN)\x86_amd64

DEFINE VS2012x86_BIN    = ENV(VS2012_PREFIX)Vc\bin
DEFINE VS2012x86_DLL    = ENV(VS2012_PREFIX)Common7\IDE;DEF(VS2012x86_BIN)
DEFINE VS2012x86_BINX64 = DEF(VS2012x86_BIN)\x86_amd64

DEFINE VS2013_BIN      = ENV(VS2013_PREFIX)Vc\bin
DEFINE VS2013_DLL      = ENV(VS2013_PREFIX)Common7\IDE;DEF(VS2013_BIN)
DEFINE VS2013_BINX64   = DEF(VS2013_BIN)\x86_amd64

DEFINE VS2013x86_BIN    = ENV(VS2013_PREFIX)Vc\bin
DEFINE VS2013x86_DLL    = ENV(VS2013_PREFIX)Common7\IDE;DEF(VS2013x86_BIN)
DEFINE VS2013x86_BINX64 = DEF(VS2013x86_BIN)\x86_amd64

DEFINE VS2015_BIN      = ENV(VS2015_PREFIX)Vc\bin
DEFINE VS2015_DLL      = ENV(VS2015_PREFIX)Common7\IDE;DEF(VS2015_BIN)
DEFINE VS2015_BINX64   = DEF(VS2015_BIN)\x86_amd64

DEFINE VS2015x86_BIN    = ENV(VS2015_PREFIX)Vc\bin
DEFINE VS2015x86_DLL    = ENV(VS2015_PREFIX)Common7\IDE;DEF(VS2015x86_BIN)
DEFINE VS2015x86_BINX64 = DEF(VS2015x86_BIN)\x86_amd64

DEFINE WINSDK_BIN       = ENV(WINSDK_PREFIX)
DEFINE WINSDKx86_BIN    = ENV(WINSDKx86_PREFIX)

# Microsoft Visual Studio 2010
DEFINE WINSDK7_BIN       = ENV(WINSDK7_PREFIX)
DEFINE WINSDK7x86_BIN    = ENV(WINSDK7x86_PREFIX)

# Microsoft Visual Studio 2012 Update 1 (required for rc.exe that was not included in the initial release)
DEFINE WINSDK71_BIN       = ENV(WINSDK71_PREFIX)
DEFINE WINSDK71x86_BIN    = ENV(WINSDK71x86_PREFIX)

# Microsoft Visual Studio 2013 Professional Edition
DEFINE WINSDK8_BIN       = ENV(WINSDK8_PREFIX)x86\
DEFINE WINSDK8x86_BIN    = ENV(WINSDK8x86_PREFIX)x64

# Microsoft Visual Studio 2015 Professional Edition
DEFINE WINSDK81_BIN       = ENV(WINSDK81_PREFIX)x86\
DEFINE WINSDK81x86_BIN    = ENV(WINSDK81x86_PREFIX)x64

# These defines are needed for certain Microsoft Visual Studio tools that
# are used by other toolchains.  An example is that ICC on Windows normally
# uses Microsoft's nmake.exe.

# Some MS_VS_BIN options: DEF(VS2003_BIN), DEF(VS2005_BIN), DEF(VS2005x86_BIN), DEF(VS2008_BIN), DEF(VS2008x86_BIN)
DEFINE MS_VS_BIN   = DEF(VS2005_BIN)
# Some MS_VS_DLL options: DEF(VS2003_DLL), DEF(VS2005_DLL), DEF(VS2005x86_DLL), DEF(VS2008_DLL), DEF(VS2008x86_DLL)
DEFINE MS_VS_DLL   = DEF(VS2005_DLL)

DEFINE WINDDK_BIN16     = ENV(WINDDK3790_PREFIX)bin16
DEFINE WINDDK_BIN32     = ENV(WINDDK3790_PREFIX)x86
DEFINE WINDDK_BINX64    = ENV(WINDDK3790_PREFIX)win64\x86\amd64
DEFINE WINDDK_BIN64     = ENV(WINDDK3790_PREFIX)win64\x86

# NOTE: The Intel C++ Compiler for Windows requires one of the Microsoft C compiler
#        tool chains for the linker and nmake commands.
#        This configuration assumes a Windows 2003 Server DDK installation.
DEFINE ICC_VERSION      = 9.1
#DEFINE ICC_VERSION     = 10.1.021
DEFINE ICC_BIN32        = C:\Program Files\Intel\Compiler\C++\DEF(ICC_VERSION)\IA32\Bin
DEFINE ICC_ASM32        = C:\Program Files\Intel\Compiler\C++\DEF(ICC_VERSION)\IA32\Bin
DEFINE ICC_BIN32x86     = C:\Program Files (x86)\Intel\Compiler\C++\DEF(ICC_VERSION)\IA32\Bin
DEFINE ICC_ASM32x86     = C:\Program Files (x86)\Intel\Compiler\C++\DEF(ICC_VERSION)\IA32\Bin

DEFINE ICC_BINX64       = C:\Program Files\Intel\Compiler\C++\DEF(ICC_VERSION)\EM64T\Bin
DEFINE ICC_ASMX64       = C:\Program Files\Intel\Compiler\C++\DEF(ICC_VERSION)\EM64T\Bin
DEFINE ICC_BINX64x86    = C:\Program Files (x86)\Intel\Compiler\C++\DEF(ICC_VERSION)\EM64T\Bin
DEFINE ICC_ASMX64x86    = C:\Program Files (x86)\Intel\Compiler\C++\DEF(ICC_VERSION)\EM64T\Bin

DEFINE ICC_BIN64        = C:\Program Files\Intel\Compiler\C++\DEF(ICC_VERSION)\Itanium\Bin
DEFINE ICC_BIN64x86     = C:\Program Files (x86)\Intel\Compiler\C++\DEF(ICC_VERSION)\Itanium\Bin


# Note: The Intel C++ Compiler 11.1 uses different installation path from previous versions
#       We use "ICC11" tag for ICC 11.1 while "ICC" tag is dedicated for eariler versions
#
DEFINE ICC11_VERSION      = 11.1
DEFINE ICC11_BUILD        = 072
DEFINE ICC11_BIN32        = C:\Program Files\Intel\Compiler\DEF(ICC11_VERSION)\DEF(ICC11_BUILD)\bin\ia32
DEFINE ICC11_ASM32        = C:\Program Files\Intel\Compiler\DEF(ICC11_VERSION)\DEF(ICC11_BUILD)\bin\ia32
DEFINE ICC11_BIN32x86     = C:\Program Files (x86)\Intel\Compiler\DEF(ICC11_VERSION)\DEF(ICC11_BUILD)\bin\ia32
DEFINE ICC11_ASM32x86     = C:\Program Files (x86)\Intel\Compiler\DEF(ICC11_VERSION)\DEF(ICC11_BUILD)\bin\ia32

DEFINE ICC11_BINX64       = C:\Program Files\Intel\Compiler\DEF(ICC11_VERSION)\DEF(ICC11_BUILD)\bin\ia32_intel64
DEFINE ICC11_ASMX64       = C:\Program Files\Intel\Compiler\DEF(ICC11_VERSION)\DEF(ICC11_BUILD)\bin\ia32_intel64
DEFINE ICC11_BINX64x86    = C:\Program Files (x86)\Intel\Compiler\DEF(ICC11_VERSION)\DEF(ICC11_BUILD)\bin\intel64
DEFINE ICC11_ASMX64x86    = C:\Program Files (x86)\Intel\Compiler\DEF(ICC11_VERSION)\DEF(ICC11_BUILD)\bin\intel64

DEFINE ICC11_BIN64        = C:\Program Files\Intel\Compiler\DEF(ICC11_VERSION)\DEF(ICC11_BUILD)\bin\ia32_ia64
DEFINE ICC11_BIN64x86     = C:\Program Files (x86)\Intel\Compiler\DEF(ICC11_VERSION)\DEF(ICC11_BUILD)\bin\ia32_ia64

DEFINE EBC_BIN          = C:\Program Files\Intel\EBC\Bin
DEFINE EBC_BINx86       = C:\Program Files (x86)\Intel\EBC\Bin

DEFINE ELFGCC_BIN       = /usr/bin

#
# Option 1: Hard coded full path to compiler suite
DEFINE UNIXGCC_IA32_PETOOLS_PREFIX = /opt/tiano/i386-tiano-pe/i386-tiano-pe/bin/
DEFINE UNIXGCC_X64_PETOOLS_PREFIX  = /opt/tiano/x86_64-pc-mingw64/x86_64-pc-mingw64/bin/
DEFINE UNIXGCC_IPF_PETOOLS_PREFIX  = /opt/tiano/ia64-pc-elf/ia64-pc-elf/bin/
#
# Option 2: Use an environment variable
#DEFINE UNIXGCC_IA32_PETOOLS_PREFIX = ENV(IA32_PETOOLS_PREFIX)
#DEFINE UNIXGCC_X64_PETOOLS_PREFIX  = ENV(X64_PETOOLS_PREFIX)
#
# Option 3: Install the compiler suite into your default paths
#DEFINE UNIXGCC_IA32_PETOOLS_PREFIX = i386-pc-mingw32-
#DEFINE UNIXGCC_X64_PETOOLS_PREFIX  = x86_64-pc-mingw32-
#
# Option 4: Create links under the BaseTools/Bin/gcc/ARCH directory
# Links needed: gcc, ar & ld
#DEFINE UNIXGCC_IA32_PETOOLS_PREFIX = ENV(WORKSPACE)/BaseTools/Bin/gcc/Ia32/
#DEFINE UNIXGCC_X64_PETOOLS_PREFIX  = ENV(WORKSPACE)/BaseTools/Bin/gcc/X64/
#
# Option 5: Install programs under user's home directory
#DEFINE UNIXGCC_IA32_PETOOLS_PREFIX = ENV(HOME)/programs/gcc/ia32/bin/i686-pc-mingw32-
#DEFINE UNIXGCC_X64_PETOOLS_PREFIX  = ENV(HOME)/programs/gcc/x64/bin/x86_64-pc-mingw32-
#

DEFINE CYGWIN_BIN              = c:/cygwin/bin
DEFINE CYGWIN_BINIA32          = c:/cygwin/opt/tiano/i386-tiano-pe/i386-tiano-pe/bin/
DEFINE CYGWIN_BINX64           = c:/cygwin/opt/tiano/x86_64-pc-mingw64/x86_64-pc-mingw64/bin/
DEFINE CYGWIN_BINIPF           = c:/cygwin/opt/tiano/gcc/ipf/bin/ia64-pc-elf-

DEFINE GCC44_IA32_PREFIX       = ENV(GCC44_BIN)
DEFINE GCC44_X64_PREFIX        = ENV(GCC44_BIN)

DEFINE GCC45_IA32_PREFIX       = ENV(GCC45_BIN)
DEFINE GCC45_X64_PREFIX        = ENV(GCC45_BIN)

DEFINE GCC46_IA32_PREFIX       = ENV(GCC46_BIN)
DEFINE GCC46_X64_PREFIX        = ENV(GCC46_BIN)

DEFINE GCC47_IA32_PREFIX       = ENV(GCC47_BIN)
DEFINE GCC47_X64_PREFIX        = ENV(GCC47_BIN)

DEFINE GCC48_IA32_PREFIX       = ENV(GCC48_BIN)
DEFINE GCC48_X64_PREFIX        = ENV(GCC48_BIN)

DEFINE GCC49_IA32_PREFIX       = ENV(GCC49_BIN)
DEFINE GCC49_X64_PREFIX        = ENV(GCC49_BIN)

DEFINE GCC5_IA32_PREFIX        = ENV(GCC5_BIN)
DEFINE GCC5_X64_PREFIX         = ENV(GCC5_BIN)

DEFINE UNIX_IASL_BIN           = ENV(IASL_PREFIX)iasl
DEFINE WIN_IASL_BIN            = ENV(IASL_PREFIX)iasl.exe
DEFINE WIN_ASL_BIN             = ENV(IASL_PREFIX)asl.exe

DEFINE IASL_FLAGS              =
DEFINE IASL_OUTFLAGS           = -p
DEFINE MS_ASL_OUTFLAGS         = /Fo=
DEFINE MS_ASL_FLAGS            =

DEFINE DEFAULT_WIN_ASL_BIN      = DEF(WIN_IASL_BIN)
DEFINE DEFAULT_WIN_ASL_FLAGS    = DEF(IASL_FLAGS)
DEFINE DEFAULT_WIN_ASL_OUTFLAGS = DEF(IASL_OUTFLAGS)
#DEFINE DEFAULT_WIN_ASL_BIN      = DEF(WIN_ASL_BIN)
#DEFINE DEFAULT_WIN_ASL_FLAGS    = DEF(MS_ASL_FLAGS)
#DEFINE DEFAULT_WIN_ASL_OUTFLAGS = DEF(MS_ASL_OUTFLAGS)

DEFINE MSFT_ASLPP_FLAGS        = /nologo /E /C /FIAutoGen.h
DEFINE MSFT_ASLCC_FLAGS        = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable
DEFINE MSFT_ASLDLINK_FLAGS     = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE

DEFINE ICC_WIN_ASLPP_FLAGS     = /nologo /E /C /FIAutoGen.h
DEFINE ICC_WIN_ASLCC_FLAGS     = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable
DEFINE ICC_WIN_ASLDLINK_FLAGS  = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE /NODEFAULTLIB:libmmt /NODEFAULTLIB:libirc

DEFINE IPHONE_TOOLS            = /Developer/Platforms/iPhoneOS.platform/Developer

DEFINE SOURCERY_CYGWIN_TOOLS = /cygdrive/c/Program Files/CodeSourcery/Sourcery G++ Lite/bin

####################################################################################
#
# format: TARGET_TOOLCHAIN_ARCH_COMMANDTYPE_ATTRIBUTE = <string>
# priority:
#         TARGET_TOOLCHAIN_ARCH_COMMANDTYPE_ATTRIBUTE (Highest)
#         ******_TOOLCHAIN_ARCH_COMMANDTYPE_ATTRIBUTE
#         TARGET_*********_ARCH_COMMANDTYPE_ATTRIBUTE
#         ******_*********_ARCH_COMMANDTYPE_ATTRIBUTE
#         TARGET_TOOLCHAIN_****_COMMANDTYPE_ATTRIBUTE
#         ******_TOOLCHAIN_****_COMMANDTYPE_ATTRIBUTE
#         TARGET_*********_****_COMMANDTYPE_ATTRIBUTE
#         ******_*********_****_COMMANDTYPE_ATTRIBUTE
#         TARGET_TOOLCHAIN_ARCH_***********_ATTRIBUTE
#         ******_TOOLCHAIN_ARCH_***********_ATTRIBUTE
#         TARGET_*********_ARCH_***********_ATTRIBUTE
#         ******_*********_ARCH_***********_ATTRIBUTE
#         TARGET_TOOLCHAIN_****_***********_ATTRIBUTE
#         ******_TOOLCHAIN_****_***********_ATTRIBUTE
#         TARGET_*********_****_***********_ATTRIBUTE
#         ******_*********_****_***********_ATTRIBUTE (Lowest)
#
####################################################################################
####################################################################################
#
# Supported Tool Chains
# =====================
#   VS2003      -win32-  Requires:
#                             Microsoft Visual Studio .NET 2003
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2005      -win32-  Requires:
#                             Microsoft Visual Studio 2005 Team Suite Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2008      -win32-  Requires:
#                             Microsoft Visual Studio 2008 Team Suite Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2010      -win32-  Requires:
#                             Microsoft Visual Studio 2010 Premium Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2012      -win32-  Requires:
#                             Microsoft Visual Studio 2012 Professional Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2013      -win32-  Requires:
#                             Microsoft Visual Studio 2013 Professional Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2015      -win32-  Requires:
#                             Microsoft Visual Studio 2015 Professional Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   DDK3790     -win32-  Requires:
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   UNIXGCC     -UNIX-   Requires:
#                             GCC 4.3.0
#                             binutils 2.20.51.0.5
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   GCC44       -Linux,Windows-  Requires:
#                             GCC 4.4 targeting x86_64-linux-gnu
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   GCC45       -Linux,Windows-  Requires:
#                             GCC 4.5 targeting x86_64-linux-gnu
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   GCC46       -Linux,Windows-  Requires:
#                             GCC 4.6 targeting x86_64-linux-gnu or arm-linux-gnueabi
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   GCC47       -Linux,Windows-  Requires:
#                             GCC 4.7 targeting x86_64-linux-gnu, aarch64-linux-gnu, or arm-linux-gnueabi
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   GCC48       -Linux,Windows-  Requires:
#                             GCC 4.8 targeting x86_64-linux-gnu, aarch64-linux-gnu, or arm-linux-gnueabi
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   GCC49       -Linux,Windows-  Requires:
#                             GCC 4.9 targeting x86_64-linux-gnu, aarch64-linux-gnu, or arm-linux-gnueabi
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   GCC5        -Linux,Windows-  Requires:
#                             GCC 5 with LTO support, targeting x86_64-linux-gnu, aarch64-linux-gnu, or arm-linux-gnueabi
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   CLANG35     -Linux,Windows-  Requires:
#                             Clang v3.5 or later, and GNU binutils targeting aarch64-linux-gnu or arm-linux-gnueabi
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   CLANG38  -Linux-  Requires:
#                             Clang v3.8 or later, LLVMgold plugin and GNU binutils 2.26 targeting x86_64-linux-gnu
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   ELFGCC      -Linux-  Requires:
#                             GCC(this tool chain uses whatever version of gcc and binutils that is installed in /usr/bin)
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   CYGGCC      -win32-  Requires:
#                             CygWin, GCC 4.3.0, binutils 2.20.51.0.5
#                             Microsoft Visual Studio 2005 or 2008
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   ICC         -win32-  Requires:
#                             Intel C Compiler V9.1
#                        Dependencies:
#                             Microsoft Visual Studio 2003 or 2005
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) 
#                             version 3790.1830 for X64 target architectures
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   ICC11       -win32-  Requires:
#                             Intel C Compiler V11.1
#                        Dependencies:
#                             Microsoft Visual Studio 2005 or 2008
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) 
#                             version 3790.1830 for X64 target architectures
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   MYTOOLS     -win32-  Requires:
#                             Microsoft Visual Studio 2008 for IA32/X64
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830 for IPF
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2003xASL  -win32-  Requires:
#                             Microsoft Visual Studio .NET 2003
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   VS2005xASL  -win32-  Requires:
#                             Microsoft Visual Studio 2005 Team Suite Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   VS2008xASL  -win32-  Requires:
#                             Microsoft Visual Studio 2008 Team Suite
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   VS2010xASL  -win32-  Requires:
#                             Microsoft Visual Studio 2010 Premium Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   VS2012xASL  -win32-  Requires:
#                             Microsoft Visual Studio 2012 Professional Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   VS2013xASL  -win32-  Requires:
#                             Microsoft Visual Studio 2013 Professional Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   VS2015xASL  -win32-  Requires:
#                             Microsoft Visual Studio 2015 Professional Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   DDK3790xASL -win32-  Requires:
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   CYGGCCxASL  -win32-  Requires:
#                             CygWin, GCC 4.3.0, binutils 2.20.51.0.5
#                             Microsoft Visual Studio 2005 or 2008
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   ICCxASL     -win32-  Requires:
#                             Intel C Compiler V9.1
#                        Dependencies:
#                             Microsoft Visual Studio 2003 or 2005
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) 
#                             version 3790.1830 for X64 target architectures
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   ICC11xASL   -win32-  Requires:
#                             Intel C Compiler V11.1
#                        Dependencies:
#                             Microsoft Visual Studio 2005 or 2008
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) 
#                             version 3790.1830 for X64 target architectures
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   VS2005x86   -win64-  Requires:
#                             Microsoft Visual Studio 2005 Team Suite Edition (x86)
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads 
#   VS2008x86   -win64-  Requires:
#                             Microsoft Visual Studio 2008 (x86)
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads 
#   VS2010x86   -win64-  Requires:
#                             Microsoft Visual Studio 2010 (x86) Premium Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads 
#   VS2012x86   -win64-  Requires:
#                             Microsoft Visual Studio 2012 (x86) Professional Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2013x86   -win64-  Requires:
#                             Microsoft Visual Studio 2013 (x86) Professional Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2015x86   -win64-  Requires:
#                             Microsoft Visual Studio 2015 (x86) Professional Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   ICCx86      -win64-  Requires:
#                             Intel C Compiler V9.1(x86)
#                        Dependencies:
#                             Microsoft Visual Studio 2003 or 2005
#                             Microsoft Windows Server 2003 Driver Development Kit 
#                             (Microsoft WINDDK) version 3790.1830 for X64 target architectures
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads 
#   ICC11x86    -win64-  Requires:
#                             Intel C Compiler V11.1(x86)
#                        Dependencies:
#                             Microsoft Visual Studio 2005 or 2008
#                             Microsoft Windows Server 2003 Driver Development Kit 
#                             (Microsoft WINDDK) version 3790.1830 for X64 target architectures
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads 
#  VS2005x86xASL -win64- Requires:
#                             Microsoft Visual Studio 2005 Team Suite Edition (x86)
#                             Microsoft Windows Server 2003 Driver Development Kit(Microsoft WINDDK) version 3790.1830 
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#  VS2008x86xASL -win64- Requires:
#                             Microsoft Visual Studio 2008 (x86)
#                             Microsoft Windows Server 2003 Driver Development Kit(Microsoft WINDDK) version 3790.1830 
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#  VS2010x86xASL -win64- Requires:
#                             Microsoft Visual Studio 2010 (x86) Premium Edition
#                             Microsoft Windows Server 2003 Driver Development Kit(Microsoft WINDDK) version 3790.1830 
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#  VS2012x86xASL -win64- Requires:
#                             Microsoft Visual Studio 2012 (x86) Professional Edition
#                             Microsoft Windows Server 2003 Driver Development Kit(Microsoft WINDDK) version 3790.1830 
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#  VS2013x86xASL -win64- Requires:
#                             Microsoft Visual Studio 2013 (x86) Professional
#                             Microsoft Windows Server 2003 Driver Development Kit(Microsoft WINDDK) version 3790.1830 
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#  VS2015x86xASL -win64- Requires:
#                             Microsoft Visual Studio 2015 (x86) Professional
#                             Microsoft Windows Server 2003 Driver Development Kit(Microsoft WINDDK) version 3790.1830 
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   ICCx86xASL  -win64-  Requires:
#                             Intel C Compiler V9.1 (x86)
#                        Dependencies:
#                             Microsoft Visual Studio 2003 or 2005
#                             Microsoft Windows Server 2003 Driver Development Kit
#                             (Microsoft WINDDK) version 3790.1830 for X64 target architectures
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   ICC11x86xASL -win64- Requires:
#                             Intel C Compiler V11.1 (x86)
#                        Dependencies:
#                             Microsoft Visual Studio 2005 or 2008
#                             Microsoft Windows Server 2003 Driver Development Kit
#                             (Microsoft WINDDK) version 3790.1830 for X64 target architectures
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   CYGGCCx86   -win64-  Requires:
#                             CygWin, GCC 4.3.0, binutils 2.20.51.0.5
#                             Microsoft Visual Studio 2005 or 2008
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads 
#  CYGGCCx86xASL -win64- Requires:
#                             CygWin, GCC 4.3.0, binutils 2.20.51.0.5
#                             Microsoft Visual Studio 2005 or 2008
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   RVCT        -win-   Requires:
#                             ARM C/C++ Compiler, 5.00
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   RVCTLINUX   -unix-   Requires:
#                             ARM C/C++ Compiler, 5.00
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
# * Commented out - All versions of VS2005 use the same standard install directory
#
####################################################################################
####################################################################################
#
# Supported Tool Chain Family
# ===========================
#   MSFT           - Microsoft
#   GCC            - GNU GCC
#   INTEL          - INTEL
#   RVCT           - ARM RealView Toolchain
####################################################################################
####################################################################################
#
# Other Supported Tools
# =====================
#   NASM -- http://www.nasm.us/
#   - NASM 2.10 or later for use with the GCC toolchain family
#   - NASM 2.12.01 or later for use with all other toolchain families
#
####################################################################################
####################################################################################
#
# Intel EFI Byte Code Compiler (Template)
#
####################################################################################
# *_*_EBC_*_FAMILY                   = INTEL
#
# *_*_EBC_PP_PATH                    = C:\Program Files\Intel\EBC\Bin\iec.exe
# *_*_EBC_CC_PATH                    = C:\Program Files\Intel\EBC\Bin\iec.exe
# *_*_EBC_SLINK_PATH                 = C:\Program Files\Intel\EBC\Bin\link.exe
#
# *_*_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
# *_*_EBC_PP_FLAGS                   = /nologo /E /TC /FI$(DEST_DIR_DEBUG)/AutoGen.h
# *_*_EBC_CC_FLAGS                   = /nologo /FAcs /c /W3 /WX /FI$(DEST_DIR_DEBUG)/AutoGen.h
# *_*_EBC_DLINK_FLAGS                = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /MACHINE:EBC /OPT:REF /NODEFAULTLIB /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /ALIGN:32 /DRIVER
#
####################################################################################
#
# Intel ACPI Source Language Compiler (Template)
#
####################################################################################
# *_*_*_ASL_FAMILY                   = INTEL
#
# *_*_*_ASL_PATH                     = C:\ASL\iasl.exe
#
####################################################################################
#
# Microsoft ACPI Source Language Compiler (Template)
#
####################################################################################
# *_*_*_ASL_FAMILY                   = MSFT
#
# *_*_*_ASL_PATH                     = C:\ASL\asl.exe
#
####################################################################################


####################################################################################
#
# Microsoft Visual Studio .NET 2003 (IA-32 only, with Link Time Code Generation)
# And Intel ACPI Compiler
#
####################################################################################
#   VS2003           - Microsoft Visual Studio .NET 2003 and Intel ACPI Source Language Compiler (iasl.exe)
*_VS2003_*_*_FAMILY                 = MSFT

##################
# ASL definitions
##################
*_VS2003_*_ASL_PATH                 = DEF(DEFAULT_WIN_ASL_BIN)
*_VS2003_*_ASL_FLAGS                = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2003_*_ASL_OUTFLAGS             = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2003_*_ASLCC_FLAGS              = DEF(MSFT_ASLCC_FLAGS)
*_VS2003_*_ASLPP_FLAGS              = DEF(MSFT_ASLPP_FLAGS)
*_VS2003_*_ASLDLINK_FLAGS           = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2003_IA32_*_DLL                 = DEF(VS2003_DLL)

*_VS2003_IA32_MAKE_PATH             = DEF(VS2003_BIN)\nmake.exe
*_VS2003_IA32_CC_PATH               = DEF(VS2003_BIN)\cl.exe
*_VS2003_IA32_VFRPP_PATH            = DEF(VS2003_BIN)\cl.exe
*_VS2003_IA32_SLINK_PATH            = DEF(VS2003_BIN)\lib.exe
*_VS2003_IA32_DLINK_PATH            = DEF(VS2003_BIN)\link.exe
*_VS2003_IA32_APP_PATH              = DEF(VS2003_BIN)\cl.exe
*_VS2003_IA32_PP_PATH               = DEF(VS2003_BIN)\cl.exe
*_VS2003_IA32_ASM_PATH              = DEF(VS2003_BIN)\ml.exe
*_VS2003_IA32_ASM16_PATH            = DEF(VS2003_BIN)\ml.exe
*_VS2003_IA32_ASLCC_PATH            = DEF(VS2003_BIN)\cl.exe
*_VS2003_IA32_ASLPP_PATH            = DEF(VS2003_BIN)\cl.exe
*_VS2003_IA32_ASLDLINK_PATH         = DEF(VS2003_BIN)\link.exe
*_VS2003_IA32_RC_PATH               = DEF(VS2003_BIN)\rc.exe

      *_VS2003_IA32_MAKE_FLAGS      = /nologo
      *_VS2003_IA32_APP_FLAGS       = /nologo /E /TC
      *_VS2003_IA32_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
      *_VS2003_IA32_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
  DEBUG_VS2003_IA32_CC_FLAGS        = /nologo /c /WX /W4 /Gs32768 /Gy /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /GX- /Zi /Gm
RELEASE_VS2003_IA32_CC_FLAGS        = /nologo /c /WX /W4 /Gs32768 /Gy /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /GX-
NOOPT_VS2003_IA32_CC_FLAGS          = /nologo /c /WX /W4 /Gs32768 /Gy /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /GX- /Zi /Gm /Od

  DEBUG_VS2003_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /coff /Cx /Zd /Zi
RELEASE_VS2003_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /coff /Cx /Zd
NOOPT_VS2003_IA32_ASM_FLAGS         = /nologo /c /WX /W3 /coff /Cx /Zd /Zi

  DEBUG_VS2003_IA32_NASM_FLAGS      = -Ox -f win32 -g
RELEASE_VS2003_IA32_NASM_FLAGS      = -Ox -f win32
NOOPT_VS2003_IA32_NASM_FLAGS        = -O0 -f win32 -g

      *_VS2003_IA32_SLINK_FLAGS     = /nologo /LTCG
  DEBUG_VS2003_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2003_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4078 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2003_IA32_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2003_EBC_*_FAMILY               = INTEL

*_VS2003_EBC_MAKE_PATH              = DEF(VS2003_BIN)\nmake.exe
*_VS2003_EBC_PP_PATH                = DEF(EBC_BIN)\iec.exe
*_VS2003_EBC_VFRPP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2003_EBC_CC_PATH                = DEF(EBC_BIN)\iec.exe
*_VS2003_EBC_SLINK_PATH             = DEF(EBC_BIN)\link.exe
*_VS2003_EBC_DLINK_PATH             = DEF(EBC_BIN)\link.exe
*_VS2003_EBC_RC_PATH                = DEF(VS2003_BIN)\rc.exe

*_VS2003_EBC_MAKE_FLAGS             = /nologo
*_VS2003_EBC_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2003_EBC_CC_FLAGS               = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2003_EBC_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2003_EBC_SLINK_FLAGS            = /lib /NOLOGO /MACHINE:EBC
*_VS2003_EBC_DLINK_FLAGS            = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER

####################################################################################
#
#   Microsoft Visual Studio .NET 2003 and Microsoft ACPI compiler
#
####################################################################################
#   VS2003xASL           - Microsoft Visual Studio .NET 2003 and Microsoft ACPI Source Language Compiler (asl.exe)
*_VS2003xASL_*_*_FAMILY                 = MSFT

##################
# ASL definitions
##################
*_VS2003xASL_*_ASL_PATH                 = DEF(WIN_ASL_BIN)
*_VS2003xASL_*_ASL_FLAGS                =
*_VS2003xASL_*_ASL_OUTFLAGS             = DEF(MS_ASL_OUTFLAGS)
*_VS2003xASL_*_ASLCC_FLAGS              = DEF(MSFT_ASLCC_FLAGS)
*_VS2003xASL_*_ASLPP_FLAGS              = DEF(MSFT_ASLPP_FLAGS)
*_VS2003xASL_*_ASLDLINK_FLAGS           = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2003xASL_IA32_*_DLL                 = DEF(VS2003_DLL)

*_VS2003xASL_IA32_MAKE_PATH             = DEF(VS2003_BIN)\nmake.exe
*_VS2003xASL_IA32_CC_PATH               = DEF(VS2003_BIN)\cl.exe
*_VS2003xASL_IA32_VFRPP_PATH            = DEF(VS2003_BIN)\cl.exe
*_VS2003xASL_IA32_SLINK_PATH            = DEF(VS2003_BIN)\lib.exe
*_VS2003xASL_IA32_DLINK_PATH            = DEF(VS2003_BIN)\link.exe
*_VS2003xASL_IA32_APP_PATH              = DEF(VS2003_BIN)\cl.exe
*_VS2003xASL_IA32_PP_PATH               = DEF(VS2003_BIN)\cl.exe
*_VS2003xASL_IA32_ASM_PATH              = DEF(VS2003_BIN)\ml.exe
*_VS2003xASL_IA32_ASLCC_PATH            = DEF(VS2003_BIN)\cl.exe
*_VS2003xASL_IA32_ASLPP_PATH            = DEF(VS2003_BIN)\cl.exe
*_VS2003xASL_IA32_ASLDLINK_PATH         = DEF(VS2003_BIN)\link.exe
*_VS2003xASL_IA32_RC_PATH               = DEF(VS2003_BIN)\rc.exe


      *_VS2003xASL_IA32_MAKE_FLAGS      = /nologo
      *_VS2003xASL_IA32_APP_FLAGS       = /nologo /E /TC
      *_VS2003xASL_IA32_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
      *_VS2003xASL_IA32_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
  DEBUG_VS2003xASL_IA32_CC_FLAGS        = /nologo /c /WX /W4 /Gs32768 /Gy /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /GX- /Zi /Gm
RELEASE_VS2003xASL_IA32_CC_FLAGS        = /nologo /c /WX /W4 /Gs32768 /Gy /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /GX-
NOOPT_VS2003xASL_IA32_CC_FLAGS          = /nologo /c /WX /W4 /Gs32768 /Gy /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /GX- /Zi /Gm /Od

  DEBUG_VS2003xASL_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /coff /Cx /Zd /Zi
RELEASE_VS2003xASL_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /coff /Cx /Zd
NOOPT_VS2003xASL_IA32_ASM_FLAGS         = /nologo /c /WX /W3 /coff /Cx /Zd /Zi

  DEBUG_VS2003xASL_IA32_NASM_FLAGS      = -Ox -f win32 -g
RELEASE_VS2003xASL_IA32_NASM_FLAGS      = -Ox -f win32
NOOPT_VS2003xASL_IA32_NASM_FLAGS        = -O0 -f win32 -g

      *_VS2003xASL_IA32_SLINK_FLAGS     = /nologo /LTCG
  DEBUG_VS2003xASL_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2003xASL_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4078 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2003xASL_IA32_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2003xASL_EBC_*_FAMILY               = INTEL

*_VS2003xASL_EBC_MAKE_PATH              = DEF(VS2003_BIN)\nmake.exe
*_VS2003xASL_EBC_PP_PATH                = DEF(EBC_BIN)\iec.exe
*_VS2003xASL_EBC_VFRPP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2003xASL_EBC_CC_PATH                = DEF(EBC_BIN)\iec.exe
*_VS2003xASL_EBC_SLINK_PATH             = DEF(EBC_BIN)\link.exe
*_VS2003xASL_EBC_DLINK_PATH             = DEF(EBC_BIN)\link.exe
*_VS2003xASL_EBC_RC_PATH                = DEF(VS2003_BIN)\rc.exe

*_VS2003xASL_EBC_MAKE_FLAGS             = /nologo
*_VS2003xASL_EBC_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2003xASL_EBC_CC_FLAGS               = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2003xASL_EBC_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2003xASL_EBC_SLINK_FLAGS            = /lib /NOLOGO /MACHINE:EBC
*_VS2003xASL_EBC_DLINK_FLAGS            = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER

####################################################################################
# Microsoft Visual Studio 2005
#
#   VS2005  - Microsoft Visual Studio 2005 All Edition, including Standard, Professional, Express, TeamSuite
#   ASL     - Intel ACPI Source Language Compiler
####################################################################################
#   VS2005           - Microsoft Visual Studio 2005 ALL Edition, including Standard, Professional, Express, TeamSuite
*_VS2005_*_*_FAMILY               = MSFT

*_VS2005_*_MAKE_PATH              = DEF(VS2005_BIN)\nmake.exe
*_VS2005_*_MAKE_FLAGS             = /nologo
*_VS2005_*_RC_PATH                = DEF(VS2005_BIN)\rc.exe

*_VS2005_*_SLINK_FLAGS            = /NOLOGO /LTCG
*_VS2005_*_APP_FLAGS              = /nologo /E /TC
*_VS2005_*_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2005_*_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2005_*_ASM16_PATH             = DEF(VS2005_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2005_*_ASL_PATH               = DEF(DEFAULT_WIN_ASL_BIN)
*_VS2005_*_ASL_FLAGS              = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2005_*_ASL_OUTFLAGS           = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2005_*_ASLCC_FLAGS            = DEF(MSFT_ASLCC_FLAGS)
*_VS2005_*_ASLPP_FLAGS            = DEF(MSFT_ASLPP_FLAGS)
*_VS2005_*_ASLDLINK_FLAGS         = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2005_IA32_*_DLL               = DEF(VS2005_DLL)

*_VS2005_IA32_MAKE_PATH           = DEF(VS2005_BIN)\nmake.exe
*_VS2005_IA32_CC_PATH             = DEF(VS2005_BIN)\cl.exe
*_VS2005_IA32_VFRPP_PATH          = DEF(VS2005_BIN)\cl.exe
*_VS2005_IA32_SLINK_PATH          = DEF(VS2005_BIN)\lib.exe
*_VS2005_IA32_DLINK_PATH          = DEF(VS2005_BIN)\link.exe
*_VS2005_IA32_APP_PATH            = DEF(VS2005_BIN)\cl.exe
*_VS2005_IA32_PP_PATH             = DEF(VS2005_BIN)\cl.exe
*_VS2005_IA32_ASM_PATH            = DEF(VS2005_BIN)\ml.exe
*_VS2005_IA32_ASLCC_PATH          = DEF(VS2005_BIN)\cl.exe
*_VS2005_IA32_ASLPP_PATH          = DEF(VS2005_BIN)\cl.exe
*_VS2005_IA32_ASLDLINK_PATH       = DEF(VS2005_BIN)\link.exe

      *_VS2005_IA32_MAKE_FLAGS    = /nologo
  DEBUG_VS2005_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2005_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2005_IA32_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2005_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2005_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2005_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2005_IA32_NASM_FLAGS    = -Ox -f win32 -g
RELEASE_VS2005_IA32_NASM_FLAGS    = -Ox -f win32
NOOPT_VS2005_IA32_NASM_FLAGS      = -O0 -f win32 -g

  DEBUG_VS2005_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2005_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2005_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2005_X64_*_DLL         = DEF(VS2005_DLL)

*_VS2005_X64_CC_PATH       = DEF(VS2005_BINX64)\cl.exe
*_VS2005_X64_PP_PATH       = DEF(VS2005_BINX64)\cl.exe
*_VS2005_X64_APP_PATH      = DEF(VS2005_BINX64)\cl.exe
*_VS2005_X64_VFRPP_PATH    = DEF(VS2005_BINX64)\cl.exe
*_VS2005_X64_ASM_PATH      = DEF(VS2005_BINX64)\ml64.exe
*_VS2005_X64_SLINK_PATH    = DEF(VS2005_BINX64)\lib.exe
*_VS2005_X64_DLINK_PATH    = DEF(VS2005_BINX64)\link.exe
*_VS2005_X64_ASLCC_PATH    = DEF(VS2005_BINX64)\cl.exe
*_VS2005_X64_ASLPP_PATH    = DEF(VS2005_BINX64)\cl.exe
*_VS2005_X64_ASLDLINK_PATH = DEF(VS2005_BINX64)\link.exe

  DEBUG_VS2005_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2005_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2005_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2005_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2005_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2005_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2005_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2005_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2005_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2005_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2005_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2005_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2005_IPF_*_DLL         = DEF(VS2005_DLL)

*_VS2005_IPF_PP_PATH       = DEF(VS2005_BIN64)\cl.exe
*_VS2005_IPF_APP_PATH      = DEF(VS2005_BIN64)\cl.exe
*_VS2005_IPF_VFRPP_PATH    = DEF(VS2005_BIN64)\cl.exe
*_VS2005_IPF_CC_PATH       = DEF(VS2005_BIN64)\cl.exe
*_VS2005_IPF_ASM_PATH      = DEF(VS2005_BIN64)\ias.exe
*_VS2005_IPF_SLINK_PATH    = DEF(VS2005_BIN64)\lib.exe
*_VS2005_IPF_DLINK_PATH    = DEF(VS2005_BIN64)\link.exe
*_VS2005_IPF_ASLCC_PATH    = DEF(VS2005_BIN64)\cl.exe
*_VS2005_IPF_ASLPP_PATH    = DEF(VS2005_BIN64)\cl.exe
*_VS2005_IPF_ASLDLINK_PATH = DEF(VS2005_BIN64)\link.exe

  DEBUG_VS2005_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2005_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2005_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2005_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2005_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2005_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2005_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2005_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2005_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2005_EBC_*_FAMILY            = INTEL

*_VS2005_EBC_MAKE_PATH           = DEF(VS2005_BIN)\nmake.exe
*_VS2005_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2005_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2005_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2005_EBC_SLINK_PATH          = DEF(EBC_BIN)\link.exe
*_VS2005_EBC_DLINK_PATH          = DEF(EBC_BIN)\link.exe

*_VS2005_EBC_MAKE_FLAGS          = /nologo
*_VS2005_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2005_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2005_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2005_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2005_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER

####################################################################################
#
# Microsoft Visual Studio 2005
#
#   VS2005  - Microsoft Visual Studio 2005 All Edition, including Standard, Professional, Express, TeamSuite
#   ASL     - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
#   VS2005xASL           - Microsoft Visual Studio 2005 ALL Edition, including Standard, Professional, Express, TeamSuite
*_VS2005xASL_*_*_FAMILY        = MSFT

*_VS2005xASL_*_MAKE_PATH       = DEF(VS2005_BIN)\nmake.exe
*_VS2005xASL_*_MAKE_FLAG       = /nologo
*_VS2005xASL_*_RC_PATH         = DEF(VS2005_BIN)\rc.exe

*_VS2005xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2005xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2005xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2005xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2005xASL_*_ASM16_PATH      = DEF(VS2005_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2005xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2005xASL_*_ASL_FLAGS       =
*_VS2005xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2005xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2005xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2005xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2005xASL_IA32_*_DLL        = DEF(VS2005_DLL)

*_VS2005xASL_IA32_MAKE_PATH    = DEF(VS2005_BIN)\nmake.exe
*_VS2005xASL_IA32_CC_PATH      = DEF(VS2005_BIN)\cl.exe
*_VS2005xASL_IA32_VFRPP_PATH   = DEF(VS2005_BIN)\cl.exe
*_VS2005xASL_IA32_SLINK_PATH   = DEF(VS2005_BIN)\lib.exe
*_VS2005xASL_IA32_DLINK_PATH   = DEF(VS2005_BIN)\link.exe
*_VS2005xASL_IA32_APP_PATH     = DEF(VS2005_BIN)\cl.exe
*_VS2005xASL_IA32_PP_PATH      = DEF(VS2005_BIN)\cl.exe
*_VS2005xASL_IA32_ASM_PATH     = DEF(VS2005_BIN)\ml.exe
*_VS2005xASL_IA32_ASLCC_PATH    = DEF(VS2005_BIN)\cl.exe
*_VS2005xASL_IA32_ASLPP_PATH    = DEF(VS2005_BIN)\cl.exe
*_VS2005xASL_IA32_ASLDLINK_PATH = DEF(VS2005_BIN)\link.exe

      *_VS2005xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2005xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2005xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2005xASL_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2005xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2005xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2005xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2005xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2005xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2005xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2005xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2005xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2005xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2005xASL_X64_*_DLL         = DEF(VS2005_DLL)

*_VS2005xASL_X64_CC_PATH       = DEF(VS2005_BINX64)\cl.exe
*_VS2005xASL_X64_PP_PATH       = DEF(VS2005_BINX64)\cl.exe
*_VS2005xASL_X64_APP_PATH      = DEF(VS2005_BINX64)\cl.exe
*_VS2005xASL_X64_VFRPP_PATH    = DEF(VS2005_BINX64)\cl.exe
*_VS2005xASL_X64_ASM_PATH      = DEF(VS2005_BINX64)\ml64.exe
*_VS2005xASL_X64_SLINK_PATH    = DEF(VS2005_BINX64)\lib.exe
*_VS2005xASL_X64_DLINK_PATH    = DEF(VS2005_BINX64)\link.exe
*_VS2005xASL_X64_ASLCC_PATH    = DEF(VS2005_BINX64)\cl.exe
*_VS2005xASL_X64_ASLPP_PATH    = DEF(VS2005_BINX64)\cl.exe
*_VS2005xASL_X64_ASLDLINK_PATH = DEF(VS2005_BINX64)\link.exe

  DEBUG_VS2005xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2005xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2005xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2005xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2005xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2005xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2005xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2005xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2005xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2005xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2005xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2005xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2005xASL_IPF_*_DLL         = DEF(VS2005_DLL)

*_VS2005xASL_IPF_PP_PATH       = DEF(VS2005_BIN64)\cl.exe
*_VS2005xASL_IPF_APP_PATH      = DEF(VS2005_BIN64)\cl.exe
*_VS2005xASL_IPF_VFRPP_PATH    = DEF(VS2005_BIN64)\cl.exe
*_VS2005xASL_IPF_CC_PATH       = DEF(VS2005_BIN64)\cl.exe
*_VS2005xASL_IPF_ASM_PATH      = DEF(VS2005_BIN64)\ias.exe
*_VS2005xASL_IPF_SLINK_PATH    = DEF(VS2005_BIN64)\lib.exe
*_VS2005xASL_IPF_DLINK_PATH    = DEF(VS2005_BIN64)\link.exe
*_VS2005xASL_IPF_ASLCC_PATH    = DEF(VS2005_BIN64)\cl.exe
*_VS2005xASL_IPF_ASLPP_PATH    = DEF(VS2005_BIN64)\cl.exe
*_VS2005xASL_IPF_ASLDLINK_PATH = DEF(VS2005_BIN64)\link.exe

  DEBUG_VS2005xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2005xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2005xASL_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2005xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2005xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2005xASL_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2005xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2005xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2005xASL_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2005xASL_EBC_*_FAMILY            = INTEL

*_VS2005xASL_EBC_MAKE_PATH           = DEF(VS2005_BIN)\nmake.exe
*_VS2005xASL_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2005xASL_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2005xASL_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2005xASL_EBC_SLINK_PATH          = DEF(EBC_BIN)\link.exe
*_VS2005xASL_EBC_DLINK_PATH          = DEF(EBC_BIN)\link.exe

*_VS2005xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2005xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2005xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2005xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2005xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2005xASL_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER

####################################################################################
#
# Microsoft Visual Studio 2005 (x86)
#
#   VS2005  - Microsoft Visual Studio 2005 All Edition, including Standard, Professional, Express, TeamSuite
#   ASL     - Intel ACPI Source Language Compiler
####################################################################################
#   VS2005x86           - Microsoft Visual Studio 2005 ALL Edition, including Standard, Professional, Express, TeamSuite
*_VS2005x86_*_*_FAMILY        = MSFT

*_VS2005x86_*_MAKE_PATH       = DEF(VS2005x86_BIN)\nmake.exe
*_VS2005x86_*_MAKE_FLAGS      = /nologo
*_VS2005x86_*_RC_PATH         = DEF(VS2005x86_BIN)\rc.exe

*_VS2005x86_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2005x86_*_APP_FLAGS       = /nologo /E /TC
*_VS2005x86_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2005x86_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2005x86_*_ASM16_PATH      = DEF(VS2005x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2005x86_*_ASL_PATH        = DEF(DEFAULT_WIN_ASL_BIN)
*_VS2005x86_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2005x86_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2005x86_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2005x86_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2005x86_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2005x86_IA32_*_DLL        = DEF(VS2005x86_DLL)

*_VS2005x86_IA32_MAKE_PATH    = DEF(VS2005x86_BIN)\nmake.exe
*_VS2005x86_IA32_CC_PATH      = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86_IA32_VFRPP_PATH   = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86_IA32_SLINK_PATH   = DEF(VS2005x86_BIN)\lib.exe
*_VS2005x86_IA32_DLINK_PATH   = DEF(VS2005x86_BIN)\link.exe
*_VS2005x86_IA32_APP_PATH     = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86_IA32_PP_PATH      = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86_IA32_ASM_PATH     = DEF(VS2005x86_BIN)\ml.exe
*_VS2005x86_IA32_ASLCC_PATH    = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86_IA32_ASLPP_PATH    = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86_IA32_ASLDLINK_PATH = DEF(VS2005x86_BIN)\link.exe

      *_VS2005x86_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2005x86_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2005x86_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2005x86_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2005x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2005x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2005x86_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2005x86_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2005x86_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2005x86_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2005x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2005x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2005x86_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2005x86_X64_*_DLL         = DEF(VS2005x86_DLL)

*_VS2005x86_X64_CC_PATH       = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86_X64_PP_PATH       = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86_X64_APP_PATH      = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86_X64_VFRPP_PATH    = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86_X64_ASM_PATH      = DEF(VS2005x86_BINX64)\ml64.exe
*_VS2005x86_X64_SLINK_PATH    = DEF(VS2005x86_BINX64)\lib.exe
*_VS2005x86_X64_DLINK_PATH    = DEF(VS2005x86_BINX64)\link.exe
*_VS2005x86_X64_ASLCC_PATH    = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86_X64_ASLPP_PATH    = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86_X64_ASLDLINK_PATH = DEF(VS2005x86_BINX64)\link.exe

  DEBUG_VS2005x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2005x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2005x86_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2005x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2005x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2005x86_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2005x86_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2005x86_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2005x86_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2005x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2005x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2005x86_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2005x86_IPF_*_DLL         = DEF(VS2005x86_DLL)

*_VS2005x86_IPF_PP_PATH       = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86_IPF_APP_PATH      = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86_IPF_VFRPP_PATH    = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86_IPF_CC_PATH       = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86_IPF_ASM_PATH      = DEF(VS2005x86_BIN64)\ias.exe
*_VS2005x86_IPF_SLINK_PATH    = DEF(VS2005x86_BIN64)\lib.exe
*_VS2005x86_IPF_DLINK_PATH    = DEF(VS2005x86_BIN64)\link.exe
*_VS2005x86_IPF_ASLCC_PATH    = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86_IPF_ASLPP_PATH    = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86_IPF_ASLDLINK_PATH = DEF(VS2005x86_BIN64)\link.exe

  DEBUG_VS2005x86_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2005x86_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2005x86_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2005x86_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2005x86_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2005x86_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2005x86_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2005x86_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2005x86_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
 
##################
# EBC definitions
##################
*_VS2005x86_EBC_*_FAMILY            = INTEL

*_VS2005x86_EBC_MAKE_PATH           = DEF(VS2005x86_BIN)\nmake.exe
*_VS2005x86_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2005x86_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2005x86_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2005x86_EBC_SLINK_PATH          = DEF(EBC_BINx86)\link.exe
*_VS2005x86_EBC_DLINK_PATH          = DEF(EBC_BINx86)\link.exe

*_VS2005x86_EBC_MAKE_FLAGS          = /nologo
*_VS2005x86_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2005x86_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2005x86_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2005x86_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2005x86_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER

####################################################################################
#
# Microsoft Visual Studio 2005 (x86)
#
#   VS2005  - Microsoft Visual Studio 2005 All Edition, including Standard, Professional, Express, TeamSuite
#   ASL     - Microsoft ACPI Source Language Compiler
####################################################################################
#   VS2005x86xASL           - Microsoft Visual Studio 2005 ALL Edition, including Standard, Professional, Express, TeamSuite
*_VS2005x86xASL_*_*_FAMILY        = MSFT

*_VS2005x86xASL_*_MAKE_PATH       = DEF(VS2005x86_BIN)\nmake.exe
*_VS2005x86xASL_*_MAKE_FLAGS      = /nologo
*_VS2005x86xASL_*_RC_PATH         = DEF(VS2005x86_BIN)\rc.exe

*_VS2005x86xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2005x86xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2005x86xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2005x86xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2005x86xASL_*_ASM16_PATH      = DEF(VS2005x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2005x86xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2005x86xASL_*_ASL_FLAGS       =
*_VS2005x86xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2005x86xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2005x86xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2005x86xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2005x86xASL_IA32_*_DLL        = DEF(VS2005x86_DLL)

*_VS2005x86xASL_IA32_MAKE_PATH    = DEF(VS2005x86_BIN)\nmake.exe
*_VS2005x86xASL_IA32_CC_PATH      = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86xASL_IA32_VFRPP_PATH   = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86xASL_IA32_SLINK_PATH   = DEF(VS2005x86_BIN)\lib.exe
*_VS2005x86xASL_IA32_DLINK_PATH   = DEF(VS2005x86_BIN)\link.exe
*_VS2005x86xASL_IA32_APP_PATH     = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86xASL_IA32_PP_PATH      = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86xASL_IA32_ASM_PATH     = DEF(VS2005x86_BIN)\ml.exe
*_VS2005x86xASL_IA32_ASLCC_PATH    = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86xASL_IA32_ASLPP_PATH    = DEF(VS2005x86_BIN)\cl.exe
*_VS2005x86xASL_IA32_ASLDLINK_PATH = DEF(VS2005x86_BIN)\link.exe

      *_VS2005x86xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2005x86xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2005x86xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2005x86xASL_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2005x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2005x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2005x86xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2005x86xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2005x86xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2005x86xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2005x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2005x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2005x86xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2005x86xASL_X64_*_DLL         = DEF(VS2005x86_DLL)

*_VS2005x86xASL_X64_CC_PATH       = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86xASL_X64_PP_PATH       = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86xASL_X64_APP_PATH      = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86xASL_X64_VFRPP_PATH    = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86xASL_X64_ASM_PATH      = DEF(VS2005x86_BINX64)\ml64.exe
*_VS2005x86xASL_X64_SLINK_PATH    = DEF(VS2005x86_BINX64)\lib.exe
*_VS2005x86xASL_X64_DLINK_PATH    = DEF(VS2005x86_BINX64)\link.exe
*_VS2005x86xASL_X64_ASLCC_PATH    = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86xASL_X64_ASLPP_PATH    = DEF(VS2005x86_BINX64)\cl.exe
*_VS2005x86xASL_X64_ASLDLINK_PATH = DEF(VS2005x86_BINX64)\link.exe

  DEBUG_VS2005x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2005x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2005x86xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2005x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2005x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2005x86xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2005x86xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2005x86xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2005x86xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2005x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2005x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2005x86xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2005x86xASL_IPF_*_DLL         = DEF(VS2005x86_DLL)

*_VS2005x86xASL_IPF_PP_PATH       = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86xASL_IPF_APP_PATH      = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86xASL_IPF_VFRPP_PATH    = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86xASL_IPF_CC_PATH       = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86xASL_IPF_ASM_PATH      = DEF(VS2005x86_BIN64)\ias.exe
*_VS2005x86xASL_IPF_SLINK_PATH    = DEF(VS2005x86_BIN64)\lib.exe
*_VS2005x86xASL_IPF_DLINK_PATH    = DEF(VS2005x86_BIN64)\link.exe
*_VS2005x86xASL_IPF_ASLCC_PATH    = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86xASL_IPF_ASLPP_PATH    = DEF(VS2005x86_BIN64)\cl.exe
*_VS2005x86xASL_IPF_ASLDLINK_PATH = DEF(VS2005x86_BIN64)\link.exe

  DEBUG_VS2005x86xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2005x86xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2005x86xASL_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2005x86xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2005x86xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2005x86xASL_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2005x86xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2005x86xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2005x86xASL_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2005x86xASL_EBC_*_FAMILY            = INTEL

*_VS2005x86xASL_EBC_MAKE_PATH           = DEF(VS2005x86_BIN)\nmake.exe
*_VS2005x86xASL_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2005x86xASL_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2005x86xASL_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2005x86xASL_EBC_SLINK_PATH          = DEF(EBC_BINx86)\link.exe
*_VS2005x86xASL_EBC_DLINK_PATH          = DEF(EBC_BINx86)\link.exe

*_VS2005x86xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2005x86xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2005x86xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2005x86xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2005x86xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2005x86xASL_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2008
#
#   VS2008  - Microsoft Visual Studio 2005 All Edition, including Standard, Professional, Express, TeamSuite
#   ASL     - Intel ACPI Source Language Compiler
####################################################################################
#   VS2008           - Microsoft Visual Studio 2008 ALL Edition, including Standard, Professional, Express, TeamSuite
*_VS2008_*_*_FAMILY               = MSFT

*_VS2008_*_MAKE_PATH              = DEF(VS2008_BIN)\nmake.exe
*_VS2008_*_MAKE_FLAGS             = /nologo
*_VS2008_*_RC_PATH                = DEF(WINSDK_BIN)\rc.exe

*_VS2008_*_SLINK_FLAGS            = /NOLOGO /LTCG
*_VS2008_*_APP_FLAGS              = /nologo /E /TC
*_VS2008_*_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2008_*_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2008_*_ASM16_PATH             = DEF(VS2008_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2008_*_ASL_PATH               = DEF(DEFAULT_WIN_ASL_BIN)
*_VS2008_*_ASL_FLAGS              = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2008_*_ASL_OUTFLAGS           = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2008_*_ASLCC_FLAGS            = DEF(MSFT_ASLCC_FLAGS)
*_VS2008_*_ASLPP_FLAGS            = DEF(MSFT_ASLPP_FLAGS)
*_VS2008_*_ASLDLINK_FLAGS         = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2008_IA32_*_DLL               = DEF(VS2008_DLL)

*_VS2008_IA32_MAKE_PATH           = DEF(VS2008_BIN)\nmake.exe
*_VS2008_IA32_CC_PATH             = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_VFRPP_PATH          = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_SLINK_PATH          = DEF(VS2008_BIN)\lib.exe
*_VS2008_IA32_DLINK_PATH          = DEF(VS2008_BIN)\link.exe
*_VS2008_IA32_APP_PATH            = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_PP_PATH             = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_ASM_PATH            = DEF(VS2008_BIN)\ml.exe
*_VS2008_IA32_ASLCC_PATH          = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_ASLPP_PATH          = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_ASLDLINK_PATH       = DEF(VS2008_BIN)\link.exe

      *_VS2008_IA32_MAKE_FLAGS    = /nologo
  DEBUG_VS2008_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2008_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2008_IA32_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2008_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2008_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2008_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2008_IA32_NASM_FLAGS    = -Ox -f win32 -g
RELEASE_VS2008_IA32_NASM_FLAGS    = -Ox -f win32
NOOPT_VS2008_IA32_NASM_FLAGS      = -O0 -f win32 -g

  DEBUG_VS2008_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2008_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2008_X64_*_DLL         = DEF(VS2008_DLL)

*_VS2008_X64_CC_PATH       = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_PP_PATH       = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_APP_PATH      = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_VFRPP_PATH    = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_ASM_PATH      = DEF(VS2008_BINX64)\ml64.exe
*_VS2008_X64_SLINK_PATH    = DEF(VS2008_BINX64)\lib.exe
*_VS2008_X64_DLINK_PATH    = DEF(VS2008_BINX64)\link.exe
*_VS2008_X64_ASLCC_PATH    = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_ASLPP_PATH    = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_ASLDLINK_PATH = DEF(VS2008_BINX64)\link.exe

  DEBUG_VS2008_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2008_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2008_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2008_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2008_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2008_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2008_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2008_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2008_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2008_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2008_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2008_IPF_*_DLL         = DEF(VS2008_DLL)

*_VS2008_IPF_PP_PATH       = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_APP_PATH      = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_VFRPP_PATH    = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_CC_PATH       = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_ASM_PATH      = DEF(VS2008_BIN64)\ias.exe
*_VS2008_IPF_SLINK_PATH    = DEF(VS2008_BIN64)\lib.exe
*_VS2008_IPF_DLINK_PATH    = DEF(VS2008_BIN64)\link.exe
*_VS2008_IPF_ASLCC_PATH    = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_ASLPP_PATH    = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_ASLDLINK_PATH = DEF(VS2008_BIN64)\link.exe

  DEBUG_VS2008_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2008_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2008_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2008_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2008_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2008_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2008_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2008_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2008_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2008_EBC_*_FAMILY            = INTEL
*_VS2008_EBC_*_DLL               = DEF(VS2008_DLL)

*_VS2008_EBC_MAKE_PATH           = DEF(VS2008_BIN)\nmake.exe
*_VS2008_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2008_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2008_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2008_EBC_SLINK_PATH          = DEF(VS2008_BIN)\link.exe
*_VS2008_EBC_DLINK_PATH          = DEF(VS2008_BIN)\link.exe

*_VS2008_EBC_MAKE_FLAGS          = /nologo
*_VS2008_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2008_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2008_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2008_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2008_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2008
#
#   VS2008  - Microsoft Visual Studio 2008 All Edition, including Standard, Professional, Express, TeamSuite
#   ASL     - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
#   VS2008xASL           - Microsoft Visual Studio 2008 ALL Edition, including Standard, Professional, Express, TeamSuite
*_VS2008xASL_*_*_FAMILY        = MSFT

*_VS2008xASL_*_MAKE_PATH       = DEF(VS2008_BIN)\nmake.exe
*_VS2008xASL_*_MAKE_FLAG       = /nologo
*_VS2008xASL_*_RC_PATH         = DEF(WINSDK_BIN)\rc.exe

*_VS2008xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2008xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2008xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2008xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2008xASL_*_ASM16_PATH      = DEF(VS2008_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2008xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2008xASL_*_ASL_FLAGS       =
*_VS2008xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2008xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2008xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2008xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2008xASL_IA32_*_DLL        = DEF(VS2008_DLL)

*_VS2008xASL_IA32_MAKE_PATH    = DEF(VS2008_BIN)\nmake.exe
*_VS2008xASL_IA32_CC_PATH      = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_VFRPP_PATH   = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_SLINK_PATH   = DEF(VS2008_BIN)\lib.exe
*_VS2008xASL_IA32_DLINK_PATH   = DEF(VS2008_BIN)\link.exe
*_VS2008xASL_IA32_APP_PATH     = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_PP_PATH      = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_ASM_PATH     = DEF(VS2008_BIN)\ml.exe
*_VS2008xASL_IA32_ASLCC_PATH    = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_ASLPP_PATH    = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_ASLDLINK_PATH = DEF(VS2008_BIN)\link.exe

      *_VS2008xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2008xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2008xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2008xASL_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2008xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2008xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2008xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2008xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2008xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2008xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2008xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2008xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2008xASL_X64_*_DLL         = DEF(VS2008_DLL)

*_VS2008xASL_X64_CC_PATH       = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_PP_PATH       = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_APP_PATH      = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_VFRPP_PATH    = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_ASM_PATH      = DEF(VS2008_BINX64)\ml64.exe
*_VS2008xASL_X64_SLINK_PATH    = DEF(VS2008_BINX64)\lib.exe
*_VS2008xASL_X64_DLINK_PATH    = DEF(VS2008_BINX64)\link.exe
*_VS2008xASL_X64_ASLCC_PATH    = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_ASLPP_PATH    = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_ASLDLINK_PATH = DEF(VS2008_BINX64)\link.exe

  DEBUG_VS2008xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2008xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2008xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2008xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2008xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2008xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2008xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2008xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2008xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2008xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2008xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2008xASL_IPF_*_DLL         = DEF(VS2008_DLL)

*_VS2008xASL_IPF_PP_PATH       = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_APP_PATH      = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_VFRPP_PATH    = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_CC_PATH       = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_ASM_PATH      = DEF(VS2008_BIN64)\ias.exe
*_VS2008xASL_IPF_SLINK_PATH    = DEF(VS2008_BIN64)\lib.exe
*_VS2008xASL_IPF_DLINK_PATH    = DEF(VS2008_BIN64)\link.exe
*_VS2008xASL_IPF_ASLCC_PATH    = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_ASLPP_PATH    = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_ASLDLINK_PATH = DEF(VS2008_BIN64)\link.exe

  DEBUG_VS2008xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2008xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2008xASL_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2008xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2008xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2008xASL_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2008xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2008xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2008xASL_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2008xASL_EBC_*_FAMILY            = INTEL
*_VS2008xASL_EBC_*_DLL               = DEF(VS2008_DLL)

*_VS2008xASL_EBC_MAKE_PATH           = DEF(VS2008_BIN)\nmake.exe
*_VS2008xASL_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2008xASL_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2008xASL_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2008xASL_EBC_SLINK_PATH          = DEF(VS2008_BIN)\link.exe
*_VS2008xASL_EBC_DLINK_PATH          = DEF(VS2008_BIN)\link.exe

*_VS2008xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2008xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2008xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2008xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2008xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2008xASL_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2008x86       - Microsoft Visual Studio 2008 (x86) with Intel ASL
#   ASL  - Intel ACPI Source Language Compiler (iasl.exe)
####################################################################################
#   VS2008x86           - Microsoft Visual Studio 2008 (x86) ALL Edition with Intel ASL
*_VS2008x86_*_*_FAMILY        = MSFT

*_VS2008x86_*_MAKE_PATH       = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86_*_MAKE_FLAG       = /nologo
*_VS2008x86_*_RC_PATH         = DEF(WINSDK_BIN)\rc.exe

*_VS2008x86_*_MAKE_FLAGS      = /nologo
*_VS2008x86_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2008x86_*_APP_FLAGS       = /nologo /E /TC
*_VS2008x86_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2008x86_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2008x86_*_ASM16_PATH      = DEF(VS2008x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2008x86_*_ASL_PATH        = DEF(WIN_IASL_BIN)
*_VS2008x86_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2008x86_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2008x86_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2008x86_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2008x86_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2008x86_IA32_*_DLL        = DEF(VS2008x86_DLL)

*_VS2008x86_IA32_MAKE_PATH    = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86_IA32_CC_PATH      = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_VFRPP_PATH   = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_ASLCC_PATH   = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_ASLPP_PATH   = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_SLINK_PATH   = DEF(VS2008x86_BIN)\lib.exe
*_VS2008x86_IA32_DLINK_PATH   = DEF(VS2008x86_BIN)\link.exe
*_VS2008x86_IA32_ASLDLINK_PATH= DEF(VS2008x86_BIN)\link.exe
*_VS2008x86_IA32_APP_PATH     = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_PP_PATH      = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_ASM_PATH     = DEF(VS2008x86_BIN)\ml.exe

      *_VS2008x86_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2008x86_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2008x86_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2008x86_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2008x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2008x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2008x86_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2008x86_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2008x86_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2008x86_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2008x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2008x86_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2008x86_X64_*_DLL         = DEF(VS2008x86_DLL)

*_VS2008x86_X64_CC_PATH       = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_PP_PATH       = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_APP_PATH      = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_VFRPP_PATH    = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_ASLCC_PATH    = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_ASLPP_PATH    = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_ASM_PATH      = DEF(VS2008x86_BINX64)\ml64.exe
*_VS2008x86_X64_SLINK_PATH    = DEF(VS2008x86_BINX64)\lib.exe
*_VS2008x86_X64_DLINK_PATH    = DEF(VS2008x86_BINX64)\link.exe
*_VS2008x86_X64_ASLDLINK_PATH = DEF(VS2008x86_BINX64)\link.exe

  DEBUG_VS2008x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2008x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2008x86_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2008x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2008x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2008x86_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2008x86_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2008x86_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2008x86_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2008x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2008x86_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2008x86_IPF_*_DLL         = DEF(VS2008x86_DLL)

*_VS2008x86_IPF_PP_PATH       = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_APP_PATH      = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_VFRPP_PATH    = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_ASLCC_PATH    = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_ASLPP_PATH    = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_CC_PATH       = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_ASM_PATH      = DEF(VS2008x86_BIN64)\ias.exe
*_VS2008x86_IPF_SLINK_PATH    = DEF(VS2008x86_BIN64)\lib.exe
*_VS2008x86_IPF_DLINK_PATH    = DEF(VS2008x86_BIN64)\link.exe
*_VS2008x86_IPF_ASLDLINK_PATH = DEF(VS2008x86_BIN64)\link.exe

  DEBUG_VS2008x86_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2008x86_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2008x86_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2008x86_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2008x86_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2008x86_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2008x86_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2008x86_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2008x86_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2008x86_EBC_*_FAMILY            = INTEL
*_VS2008x86_EBC_*_DLL               = DEF(VS2008x86_DLL)

*_VS2008x86_EBC_MAKE_PATH           = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2008x86_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2008x86_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2008x86_EBC_SLINK_PATH          = DEF(VS2008x86_BIN)\link.exe
*_VS2008x86_EBC_DLINK_PATH          = DEF(VS2008x86_BIN)\link.exe

*_VS2008x86_EBC_MAKE_FLAGS          = /nologo
*_VS2008x86_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2008x86_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2008x86_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2008x86_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2008x86_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2008x86xASL     - Microsoft Visual Studio 2008 with Microsoft ASL
#   ASL  - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
*_VS2008x86xASL_*_*_FAMILY        = MSFT

*_VS2008x86xASL_*_MAKE_PATH       = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86xASL_*_MAKE_FLAG       = /nologo
*_VS2008x86xASL_*_RC_PATH         = DEF(WINSDK_BIN)\rc.exe

*_VS2008x86xASL_*_MAKE_FLAGS      = /nologo
*_VS2008x86xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2008x86xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2008x86xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2008x86xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2008x86xASL_*_ASM16_PATH      = DEF(VS2008x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2008x86xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2008x86xASL_*_ASL_FLAGS       = DEF(MS_ASL_FLAGS)
*_VS2008x86xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2008x86xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2008x86xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2008x86xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2008x86xASL_IA32_*_DLL        = DEF(VS2008x86_DLL)

*_VS2008x86xASL_IA32_MAKE_PATH    = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86xASL_IA32_CC_PATH      = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_VFRPP_PATH   = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_ASLCC_PATH   = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_ASLPP_PATH   = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_SLINK_PATH   = DEF(VS2008x86_BIN)\lib.exe
*_VS2008x86xASL_IA32_DLINK_PATH   = DEF(VS2008x86_BIN)\link.exe
*_VS2008x86xASL_IA32_ASLDLINK_PATH= DEF(VS2008x86_BIN)\link.exe
*_VS2008x86xASL_IA32_APP_PATH     = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_PP_PATH      = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_ASM_PATH     = DEF(VS2008x86_BIN)\ml.exe

      *_VS2008x86xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2008x86xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2008x86xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2008x86xASL_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2008x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2008x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2008x86xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2008xASL_IA32_NASM_FLAGS     = -Ox -f win32 -g
RELEASE_VS2008xASL_IA32_NASM_FLAGS     = -Ox -f win32
NOOPT_VS2008xASL_IA32_NASM_FLAGS       = -O0 -f win32 -g

  DEBUG_VS2008x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2008x86xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2008x86xASL_X64_*_DLL         = DEF(VS2008x86_DLL)

*_VS2008x86xASL_X64_CC_PATH       = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_PP_PATH       = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_APP_PATH      = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_VFRPP_PATH    = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_ASLCC_PATH    = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_ASLPP_PATH    = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_ASM_PATH      = DEF(VS2008x86_BINX64)\ml64.exe
*_VS2008x86xASL_X64_SLINK_PATH    = DEF(VS2008x86_BINX64)\lib.exe
*_VS2008x86xASL_X64_DLINK_PATH    = DEF(VS2008x86_BINX64)\link.exe
*_VS2008x86xASL_X64_ASLDLINK_PATH = DEF(VS2008x86_BINX64)\link.exe

  DEBUG_VS2008x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2008x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2008x86xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2008x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2008x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2008x86xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2008xASL_X64_NASM_FLAGS      = -Ox -f win64 -g
RELEASE_VS2008xASL_X64_NASM_FLAGS      = -Ox -f win64
NOOPT_VS2008xASL_X64_NASM_FLAGS        = -O0 -f win64 -g

  DEBUG_VS2008x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2008x86xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2008x86xASL_IPF_*_DLL         = DEF(VS2008x86_DLL)

*_VS2008x86xASL_IPF_PP_PATH       = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_APP_PATH      = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_VFRPP_PATH    = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_ASLCC_PATH    = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_ASLPP_PATH    = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_CC_PATH       = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_ASM_PATH      = DEF(VS2008x86_BIN64)\ias.exe
*_VS2008x86xASL_IPF_SLINK_PATH    = DEF(VS2008x86_BIN64)\lib.exe
*_VS2008x86xASL_IPF_DLINK_PATH    = DEF(VS2008x86_BIN64)\link.exe
*_VS2008x86xASL_IPF_ASLDLINK_PATH = DEF(VS2008x86_BIN64)\link.exe

  DEBUG_VS2008x86xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2008x86xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2008x86xASL_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2008x86xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2008x86xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2008x86xASL_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2008x86xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2008x86xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2008x86xASL_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2008x86xASL_EBC_*_FAMILY            = INTEL
*_VS2008x86xASL_EBC_*_DLL               = DEF(VS2008x86_DLL)

*_VS2008x86xASL_EBC_MAKE_PATH           = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86xASL_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2008x86xASL_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2008x86xASL_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2008x86xASL_EBC_SLINK_PATH          = DEF(VS2008x86_BIN)\link.exe
*_VS2008x86xASL_EBC_DLINK_PATH          = DEF(VS2008x86_BIN)\link.exe

*_VS2008x86xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2008x86xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2008x86xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2008x86xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2008x86xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2008x86xASL_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2010
#
#   VS2010  - Microsoft Visual Studio 2010 Premium Edition with Intel ASL
#   ASL     - Intel ACPI Source Language Compiler
####################################################################################
#   VS2010           - Microsoft Visual Studio 2010 Premium Edition
*_VS2010_*_*_FAMILY               = MSFT

*_VS2010_*_MAKE_PATH              = DEF(VS2010_BIN)\nmake.exe
*_VS2010_*_MAKE_FLAGS             = /nologo
*_VS2010_*_RC_PATH                = DEF(WINSDK7_BIN)\rc.exe

*_VS2010_*_SLINK_FLAGS            = /NOLOGO /LTCG
*_VS2010_*_APP_FLAGS              = /nologo /E /TC
*_VS2010_*_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2010_*_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2010_*_ASM16_PATH             = DEF(VS2010_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2010_*_ASL_PATH               = DEF(DEFAULT_WIN_ASL_BIN)
*_VS2010_*_ASL_FLAGS              = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2010_*_ASL_OUTFLAGS           = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2010_*_ASLCC_FLAGS            = DEF(MSFT_ASLCC_FLAGS)
*_VS2010_*_ASLPP_FLAGS            = DEF(MSFT_ASLPP_FLAGS)
*_VS2010_*_ASLDLINK_FLAGS         = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2010_IA32_*_DLL               = DEF(VS2010_DLL)

*_VS2010_IA32_MAKE_PATH           = DEF(VS2010_BIN)\nmake.exe
*_VS2010_IA32_CC_PATH             = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_VFRPP_PATH          = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_SLINK_PATH          = DEF(VS2010_BIN)\lib.exe
*_VS2010_IA32_DLINK_PATH          = DEF(VS2010_BIN)\link.exe
*_VS2010_IA32_APP_PATH            = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_PP_PATH             = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_ASM_PATH            = DEF(VS2010_BIN)\ml.exe
*_VS2010_IA32_ASLCC_PATH          = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_ASLPP_PATH          = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_ASLDLINK_PATH       = DEF(VS2010_BIN)\link.exe

      *_VS2010_IA32_MAKE_FLAGS    = /nologo
  DEBUG_VS2010_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2010_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2010_IA32_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2010_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2010_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2010_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2010_IA32_NASM_FLAGS    = -Ox -f win32 -g
RELEASE_VS2010_IA32_NASM_FLAGS    = -Ox -f win32
NOOPT_VS2010_IA32_NASM_FLAGS      = -O0 -f win32 -g

  DEBUG_VS2010_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2010_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2010_X64_*_DLL         = DEF(VS2010_DLL)

*_VS2010_X64_CC_PATH       = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_PP_PATH       = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_APP_PATH      = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_VFRPP_PATH    = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_ASM_PATH      = DEF(VS2010_BINX64)\ml64.exe
*_VS2010_X64_SLINK_PATH    = DEF(VS2010_BINX64)\lib.exe
*_VS2010_X64_DLINK_PATH    = DEF(VS2010_BINX64)\link.exe
*_VS2010_X64_ASLCC_PATH    = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_ASLPP_PATH    = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_ASLDLINK_PATH = DEF(VS2010_BINX64)\link.exe

  DEBUG_VS2010_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2010_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2010_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2010_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2010_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2010_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2010_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2010_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2010_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2010_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2010_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2010_IPF_*_DLL         = DEF(VS2010_DLL)

*_VS2010_IPF_PP_PATH       = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_APP_PATH      = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_VFRPP_PATH    = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_CC_PATH       = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_ASM_PATH      = DEF(VS2010_BIN64)\ias.exe
*_VS2010_IPF_SLINK_PATH    = DEF(VS2010_BIN64)\lib.exe
*_VS2010_IPF_DLINK_PATH    = DEF(VS2010_BIN64)\link.exe
*_VS2010_IPF_ASLCC_PATH    = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_ASLPP_PATH    = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_ASLDLINK_PATH = DEF(VS2010_BIN64)\link.exe

  DEBUG_VS2010_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2010_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2010_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2010_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2010_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2010_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2010_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2010_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2010_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2010_EBC_*_FAMILY            = INTEL
*_VS2010_EBC_*_DLL               = DEF(VS2010_DLL)

*_VS2010_EBC_MAKE_PATH           = DEF(VS2010_BIN)\nmake.exe
*_VS2010_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2010_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2010_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2010_EBC_SLINK_PATH          = DEF(VS2010_BIN)\link.exe
*_VS2010_EBC_DLINK_PATH          = DEF(VS2010_BIN)\link.exe

*_VS2010_EBC_MAKE_FLAGS          = /nologo
*_VS2010_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2010_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2010_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2010_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2010_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2010
#
#   VS2010xASL  - Microsoft Visual Studio 2010 Premium Edition with Microsoft ASL
#   ASL     - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
#   VS2010xASL           - Microsoft Visual Studio 2010 Premium Edition
*_VS2010xASL_*_*_FAMILY        = MSFT

*_VS2010xASL_*_MAKE_PATH       = DEF(VS2010_BIN)\nmake.exe
*_VS2010xASL_*_MAKE_FLAG       = /nologo
*_VS2010xASL_*_RC_PATH         = DEF(WINSDK7_BIN)\rc.exe

*_VS2010xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2010xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2010xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2010xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2010xASL_*_ASM16_PATH      = DEF(VS2010_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2010xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2010xASL_*_ASL_FLAGS       =
*_VS2010xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2010xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2010xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2010xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2010xASL_IA32_*_DLL        = DEF(VS2010_DLL)

*_VS2010xASL_IA32_MAKE_PATH    = DEF(VS2010_BIN)\nmake.exe
*_VS2010xASL_IA32_CC_PATH      = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_VFRPP_PATH   = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_SLINK_PATH   = DEF(VS2010_BIN)\lib.exe
*_VS2010xASL_IA32_DLINK_PATH   = DEF(VS2010_BIN)\link.exe
*_VS2010xASL_IA32_APP_PATH     = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_PP_PATH      = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_ASM_PATH     = DEF(VS2010_BIN)\ml.exe
*_VS2010xASL_IA32_ASLCC_PATH    = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_ASLPP_PATH    = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_ASLDLINK_PATH = DEF(VS2010_BIN)\link.exe

      *_VS2010xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2010xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2010xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2010xASL_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2010xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2010xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2010xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2010xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2010xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2010xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2010xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2010xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2010xASL_X64_*_DLL         = DEF(VS2010_DLL)

*_VS2010xASL_X64_CC_PATH       = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_PP_PATH       = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_APP_PATH      = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_VFRPP_PATH    = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_ASM_PATH      = DEF(VS2010_BINX64)\ml64.exe
*_VS2010xASL_X64_SLINK_PATH    = DEF(VS2010_BINX64)\lib.exe
*_VS2010xASL_X64_DLINK_PATH    = DEF(VS2010_BINX64)\link.exe
*_VS2010xASL_X64_ASLCC_PATH    = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_ASLPP_PATH    = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_ASLDLINK_PATH = DEF(VS2010_BINX64)\link.exe

  DEBUG_VS2010xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2010xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2010xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2010xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2010xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2010xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2010xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2010xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2010xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2010xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2010xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2010xASL_IPF_*_DLL         = DEF(VS2010_DLL)

*_VS2010xASL_IPF_PP_PATH       = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_APP_PATH      = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_VFRPP_PATH    = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_CC_PATH       = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_ASM_PATH      = DEF(VS2010_BIN64)\ias.exe
*_VS2010xASL_IPF_SLINK_PATH    = DEF(VS2010_BIN64)\lib.exe
*_VS2010xASL_IPF_DLINK_PATH    = DEF(VS2010_BIN64)\link.exe
*_VS2010xASL_IPF_ASLCC_PATH    = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_ASLPP_PATH    = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_ASLDLINK_PATH = DEF(VS2010_BIN64)\link.exe

  DEBUG_VS2010xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2010xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2010xASL_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2010xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2010xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2010xASL_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2010xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2010xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2010xASL_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2010xASL_EBC_*_FAMILY            = INTEL
*_VS2010xASL_EBC_*_DLL               = DEF(VS2010_DLL)

*_VS2010xASL_EBC_MAKE_PATH           = DEF(VS2010_BIN)\nmake.exe
*_VS2010xASL_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2010xASL_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2010xASL_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2010xASL_EBC_SLINK_PATH          = DEF(VS2010_BIN)\link.exe
*_VS2010xASL_EBC_DLINK_PATH          = DEF(VS2010_BIN)\link.exe

*_VS2010xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2010xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2010xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2010xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2010xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2010xASL_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2010x86       - Microsoft Visual Studio 2010 (x86) with Intel ASL
#   ASL  - Intel ACPI Source Language Compiler (iasl.exe)
####################################################################################
#   VS2010x86           - Microsoft Visual Studio 2010 (x86) ALL Edition with Intel ASL
*_VS2010x86_*_*_FAMILY        = MSFT

*_VS2010x86_*_MAKE_PATH       = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86_*_MAKE_FLAG       = /nologo
*_VS2010x86_*_RC_PATH         = DEF(WINSDK7x86_BIN)\rc.exe

*_VS2010x86_*_MAKE_FLAGS      = /nologo
*_VS2010x86_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2010x86_*_APP_FLAGS       = /nologo /E /TC
*_VS2010x86_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2010x86_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2010x86_*_ASM16_PATH      = DEF(VS2010x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2010x86_*_ASL_PATH        = DEF(WIN_IASL_BIN)
*_VS2010x86_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2010x86_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2010x86_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2010x86_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2010x86_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2010x86_IA32_*_DLL        = DEF(VS2010x86_DLL)

*_VS2010x86_IA32_MAKE_PATH    = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86_IA32_CC_PATH      = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_VFRPP_PATH   = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_ASLCC_PATH   = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_ASLPP_PATH   = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_SLINK_PATH   = DEF(VS2010x86_BIN)\lib.exe
*_VS2010x86_IA32_DLINK_PATH   = DEF(VS2010x86_BIN)\link.exe
*_VS2010x86_IA32_ASLDLINK_PATH= DEF(VS2010x86_BIN)\link.exe
*_VS2010x86_IA32_APP_PATH     = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_PP_PATH      = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_ASM_PATH     = DEF(VS2010x86_BIN)\ml.exe

      *_VS2010x86_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2010x86_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2010x86_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2010x86_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2010x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2010x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2010x86_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2010x86_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2010x86_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2010x86_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2010x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2010x86_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2010x86_X64_*_DLL         = DEF(VS2010x86_DLL)

*_VS2010x86_X64_CC_PATH       = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_PP_PATH       = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_APP_PATH      = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_VFRPP_PATH    = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_ASLCC_PATH    = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_ASLPP_PATH    = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_ASM_PATH      = DEF(VS2010x86_BINX64)\ml64.exe
*_VS2010x86_X64_SLINK_PATH    = DEF(VS2010x86_BINX64)\lib.exe
*_VS2010x86_X64_DLINK_PATH    = DEF(VS2010x86_BINX64)\link.exe
*_VS2010x86_X64_ASLDLINK_PATH = DEF(VS2010x86_BINX64)\link.exe

  DEBUG_VS2010x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2010x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2010x86_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2010x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2010x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2010x86_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2010x86_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2010x86_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2010x86_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2010x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2010x86_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2010x86_IPF_*_DLL         = DEF(VS2010x86_DLL)

*_VS2010x86_IPF_PP_PATH       = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_APP_PATH      = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_VFRPP_PATH    = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_ASLCC_PATH    = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_ASLPP_PATH    = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_CC_PATH       = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_ASM_PATH      = DEF(VS2010x86_BIN64)\ias.exe
*_VS2010x86_IPF_SLINK_PATH    = DEF(VS2010x86_BIN64)\lib.exe
*_VS2010x86_IPF_DLINK_PATH    = DEF(VS2010x86_BIN64)\link.exe
*_VS2010x86_IPF_ASLDLINK_PATH = DEF(VS2010x86_BIN64)\link.exe

  DEBUG_VS2010x86_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2010x86_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2010x86_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2010x86_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2010x86_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2010x86_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2010x86_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2010x86_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2010x86_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2010x86_EBC_*_FAMILY            = INTEL
*_VS2010x86_EBC_*_DLL               = DEF(VS2010x86_DLL)

*_VS2010x86_EBC_MAKE_PATH           = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2010x86_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2010x86_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2010x86_EBC_SLINK_PATH          = DEF(VS2010x86_BIN)\link.exe
*_VS2010x86_EBC_DLINK_PATH          = DEF(VS2010x86_BIN)\link.exe

*_VS2010x86_EBC_MAKE_FLAGS          = /nologo
*_VS2010x86_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2010x86_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2010x86_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2010x86_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2010x86_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2010x86xASL     - Microsoft Visual Studio 2010 with Microsoft ASL
#   ASL  - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
*_VS2010x86xASL_*_*_FAMILY        = MSFT

*_VS2010x86xASL_*_MAKE_PATH       = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86xASL_*_MAKE_FLAG       = /nologo
*_VS2010x86xASL_*_RC_PATH         = DEF(WINSDK7x86_BIN)\rc.exe

*_VS2010x86xASL_*_MAKE_FLAGS      = /nologo
*_VS2010x86xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2010x86xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2010x86xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2010x86xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2010x86xASL_*_ASM16_PATH      = DEF(VS2010x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2010x86xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2010x86xASL_*_ASL_FLAGS       = DEF(MS_ASL_FLAGS)
*_VS2010x86xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2010x86xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2010x86xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2010x86xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2010x86xASL_IA32_*_DLL        = DEF(VS2010x86_DLL)

*_VS2010x86xASL_IA32_MAKE_PATH    = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86xASL_IA32_CC_PATH      = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_VFRPP_PATH   = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_ASLCC_PATH   = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_ASLPP_PATH   = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_SLINK_PATH   = DEF(VS2010x86_BIN)\lib.exe
*_VS2010x86xASL_IA32_DLINK_PATH   = DEF(VS2010x86_BIN)\link.exe
*_VS2010x86xASL_IA32_ASLDLINK_PATH= DEF(VS2010x86_BIN)\link.exe
*_VS2010x86xASL_IA32_APP_PATH     = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_PP_PATH      = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_ASM_PATH     = DEF(VS2010x86_BIN)\ml.exe

      *_VS2010x86xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2010x86xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2010x86xASL_IA32_CC_FLAGS    = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2010x86xASL_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2010x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2010x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2010x86xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2010x86xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2010x86xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2010x86xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2010x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2010x86xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2010x86xASL_X64_*_DLL         = DEF(VS2010x86_DLL)

*_VS2010x86xASL_X64_CC_PATH       = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_PP_PATH       = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_APP_PATH      = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_VFRPP_PATH    = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_ASLCC_PATH    = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_ASLPP_PATH    = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_ASM_PATH      = DEF(VS2010x86_BINX64)\ml64.exe
*_VS2010x86xASL_X64_SLINK_PATH    = DEF(VS2010x86_BINX64)\lib.exe
*_VS2010x86xASL_X64_DLINK_PATH    = DEF(VS2010x86_BINX64)\link.exe
*_VS2010x86xASL_X64_ASLDLINK_PATH = DEF(VS2010x86_BINX64)\link.exe

  DEBUG_VS2010x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2010x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2010x86xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2010x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2010x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2010x86xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2010x86xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2010x86xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2010x86xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2010x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2010x86xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2010x86xASL_IPF_*_DLL         = DEF(VS2010x86_DLL)

*_VS2010x86xASL_IPF_PP_PATH       = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_APP_PATH      = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_VFRPP_PATH    = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_ASLCC_PATH    = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_ASLPP_PATH    = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_CC_PATH       = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_ASM_PATH      = DEF(VS2010x86_BIN64)\ias.exe
*_VS2010x86xASL_IPF_SLINK_PATH    = DEF(VS2010x86_BIN64)\lib.exe
*_VS2010x86xASL_IPF_DLINK_PATH    = DEF(VS2010x86_BIN64)\link.exe
*_VS2010x86xASL_IPF_ASLDLINK_PATH = DEF(VS2010x86_BIN64)\link.exe

  DEBUG_VS2010x86xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2010x86xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2010x86xASL_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2010x86xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2010x86xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2010x86xASL_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2010x86xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2010x86xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2010x86xASL_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2010x86xASL_EBC_*_FAMILY            = INTEL
*_VS2010x86xASL_EBC_*_DLL               = DEF(VS2010x86_DLL)

*_VS2010x86xASL_EBC_MAKE_PATH           = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86xASL_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2010x86xASL_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2010x86xASL_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2010x86xASL_EBC_SLINK_PATH          = DEF(VS2010x86_BIN)\link.exe
*_VS2010x86xASL_EBC_DLINK_PATH          = DEF(VS2010x86_BIN)\link.exe

*_VS2010x86xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2010x86xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2010x86xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2010x86xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2010x86xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2010x86xASL_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2012
#
#   VS2012  - Microsoft Visual Studio 2012 Professional Edition with Intel ASL
#   ASL     - Intel ACPI Source Language Compiler
####################################################################################
#   VS2012           - Microsoft Visual Studio 2012 Professional Edition
*_VS2012_*_*_FAMILY               = MSFT

*_VS2012_*_MAKE_PATH              = DEF(VS2012_BIN)\nmake.exe
*_VS2012_*_MAKE_FLAGS             = /nologo
*_VS2012_*_RC_PATH                = DEF(WINSDK71_BIN)\rc.exe

*_VS2012_*_SLINK_FLAGS            = /NOLOGO /LTCG
*_VS2012_*_APP_FLAGS              = /nologo /E /TC
*_VS2012_*_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2012_*_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2012_*_ASM16_PATH             = DEF(VS2012_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2012_*_ASL_PATH               = DEF(DEFAULT_WIN_ASL_BIN)
*_VS2012_*_ASL_FLAGS              = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2012_*_ASL_OUTFLAGS           = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2012_*_ASLCC_FLAGS            = DEF(MSFT_ASLCC_FLAGS)
*_VS2012_*_ASLPP_FLAGS            = DEF(MSFT_ASLPP_FLAGS)
*_VS2012_*_ASLDLINK_FLAGS         = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2012_IA32_*_DLL               = DEF(VS2012_DLL)

*_VS2012_IA32_MAKE_PATH           = DEF(VS2012_BIN)\nmake.exe
*_VS2012_IA32_CC_PATH             = DEF(VS2012_BIN)\cl.exe
*_VS2012_IA32_VFRPP_PATH          = DEF(VS2012_BIN)\cl.exe
*_VS2012_IA32_SLINK_PATH          = DEF(VS2012_BIN)\lib.exe
*_VS2012_IA32_DLINK_PATH          = DEF(VS2012_BIN)\link.exe
*_VS2012_IA32_APP_PATH            = DEF(VS2012_BIN)\cl.exe
*_VS2012_IA32_PP_PATH             = DEF(VS2012_BIN)\cl.exe
*_VS2012_IA32_ASM_PATH            = DEF(VS2012_BIN)\ml.exe
*_VS2012_IA32_ASLCC_PATH          = DEF(VS2012_BIN)\cl.exe
*_VS2012_IA32_ASLPP_PATH          = DEF(VS2012_BIN)\cl.exe
*_VS2012_IA32_ASLDLINK_PATH       = DEF(VS2012_BIN)\link.exe

      *_VS2012_IA32_MAKE_FLAGS    = /nologo
  DEBUG_VS2012_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2012_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2012_IA32_CC_FLAGS        = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2012_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2012_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2012_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2012_IA32_NASM_FLAGS    = -Ox -f win32 -g
RELEASE_VS2012_IA32_NASM_FLAGS    = -Ox -f win32
NOOPT_VS2012_IA32_NASM_FLAGS      = -O0 -f win32 -g

  DEBUG_VS2012_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2012_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2012_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2012_X64_*_DLL         = DEF(VS2012_DLL)

*_VS2012_X64_CC_PATH       = DEF(VS2012_BINX64)\cl.exe
*_VS2012_X64_PP_PATH       = DEF(VS2012_BINX64)\cl.exe
*_VS2012_X64_APP_PATH      = DEF(VS2012_BINX64)\cl.exe
*_VS2012_X64_VFRPP_PATH    = DEF(VS2012_BINX64)\cl.exe
*_VS2012_X64_ASM_PATH      = DEF(VS2012_BINX64)\ml64.exe
*_VS2012_X64_SLINK_PATH    = DEF(VS2012_BINX64)\lib.exe
*_VS2012_X64_DLINK_PATH    = DEF(VS2012_BINX64)\link.exe
*_VS2012_X64_ASLCC_PATH    = DEF(VS2012_BINX64)\cl.exe
*_VS2012_X64_ASLPP_PATH    = DEF(VS2012_BINX64)\cl.exe
*_VS2012_X64_ASLDLINK_PATH = DEF(VS2012_BINX64)\link.exe

  DEBUG_VS2012_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2012_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2012_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2012_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2012_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2012_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2012_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2012_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2012_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2012_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2012_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2012_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2012_EBC_*_FAMILY            = INTEL
*_VS2012_EBC_*_DLL               = DEF(VS2012_DLL)

*_VS2012_EBC_MAKE_PATH           = DEF(VS2012_BIN)\nmake.exe
*_VS2012_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2012_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2012_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2012_EBC_SLINK_PATH          = DEF(VS2012_BIN)\link.exe
*_VS2012_EBC_DLINK_PATH          = DEF(VS2012_BIN)\link.exe

*_VS2012_EBC_MAKE_FLAGS          = /nologo
*_VS2012_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2012_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2012_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2012_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2012_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2012
#
#   VS2012  - Microsoft Visual Studio 2012 Professional Edition with Microsoft ASL
#   ASL     - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
#   VS2012xASL           - Microsoft Visual Studio 2012 Professional Edition
*_VS2012xASL_*_*_FAMILY        = MSFT

*_VS2012xASL_*_MAKE_PATH       = DEF(VS2012_BIN)\nmake.exe
*_VS2012xASL_*_MAKE_FLAG       = /nologo
*_VS2012xASL_*_RC_PATH         = DEF(WINSDK71_BIN)\rc.exe

*_VS2012xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2012xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2012xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2012xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2012xASL_*_ASM16_PATH      = DEF(VS2012_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2012xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2012xASL_*_ASL_FLAGS       =
*_VS2012xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2012xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2012xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2012xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2012xASL_IA32_*_DLL        = DEF(VS2012_DLL)

*_VS2012xASL_IA32_MAKE_PATH    = DEF(VS2012_BIN)\nmake.exe
*_VS2012xASL_IA32_CC_PATH      = DEF(VS2012_BIN)\cl.exe
*_VS2012xASL_IA32_VFRPP_PATH   = DEF(VS2012_BIN)\cl.exe
*_VS2012xASL_IA32_SLINK_PATH   = DEF(VS2012_BIN)\lib.exe
*_VS2012xASL_IA32_DLINK_PATH   = DEF(VS2012_BIN)\link.exe
*_VS2012xASL_IA32_APP_PATH     = DEF(VS2012_BIN)\cl.exe
*_VS2012xASL_IA32_PP_PATH      = DEF(VS2012_BIN)\cl.exe
*_VS2012xASL_IA32_ASM_PATH     = DEF(VS2012_BIN)\ml.exe
*_VS2012xASL_IA32_ASLCC_PATH    = DEF(VS2012_BIN)\cl.exe
*_VS2012xASL_IA32_ASLPP_PATH    = DEF(VS2012_BIN)\cl.exe
*_VS2012xASL_IA32_ASLDLINK_PATH = DEF(VS2012_BIN)\link.exe

      *_VS2012xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2012xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2012xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2012xASL_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2012xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2012xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2012xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2012xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2012xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2012xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2012xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2012xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2012xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2012xASL_X64_*_DLL         = DEF(VS2012_DLL)

*_VS2012xASL_X64_CC_PATH       = DEF(VS2012_BINX64)\cl.exe
*_VS2012xASL_X64_PP_PATH       = DEF(VS2012_BINX64)\cl.exe
*_VS2012xASL_X64_APP_PATH      = DEF(VS2012_BINX64)\cl.exe
*_VS2012xASL_X64_VFRPP_PATH    = DEF(VS2012_BINX64)\cl.exe
*_VS2012xASL_X64_ASM_PATH      = DEF(VS2012_BINX64)\ml64.exe
*_VS2012xASL_X64_SLINK_PATH    = DEF(VS2012_BINX64)\lib.exe
*_VS2012xASL_X64_DLINK_PATH    = DEF(VS2012_BINX64)\link.exe
*_VS2012xASL_X64_ASLCC_PATH    = DEF(VS2012_BINX64)\cl.exe
*_VS2012xASL_X64_ASLPP_PATH    = DEF(VS2012_BINX64)\cl.exe
*_VS2012xASL_X64_ASLDLINK_PATH = DEF(VS2012_BINX64)\link.exe

  DEBUG_VS2012xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2012xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2012xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2012xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2012xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2012xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2012xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2012xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2012xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2012xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2012xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2012xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2012xASL_EBC_*_FAMILY            = INTEL
*_VS2012xASL_EBC_*_DLL               = DEF(VS2012_DLL)

*_VS2012xASL_EBC_MAKE_PATH           = DEF(VS2012_BIN)\nmake.exe
*_VS2012xASL_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2012xASL_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2012xASL_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2012xASL_EBC_SLINK_PATH          = DEF(VS2012_BIN)\link.exe
*_VS2012xASL_EBC_DLINK_PATH          = DEF(VS2012_BIN)\link.exe

*_VS2012xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2012xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2012xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2012xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2012xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2012xASL_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2012x86       - Microsoft Visual Studio 2012 (x86) professional with Intel ASL
#   ASL  - Intel ACPI Source Language Compiler (iasl.exe)
####################################################################################
#   VS2012x86           - Microsoft Visual Studio 2012 (x86) professional Edition with Intel ASL
*_VS2012x86_*_*_FAMILY        = MSFT

*_VS2012x86_*_MAKE_PATH       = DEF(VS2012x86_BIN)\nmake.exe
*_VS2012x86_*_MAKE_FLAG       = /nologo
*_VS2012x86_*_RC_PATH         = DEF(WINSDK71x86_BIN)\rc.exe

*_VS2012x86_*_MAKE_FLAGS      = /nologo
*_VS2012x86_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2012x86_*_APP_FLAGS       = /nologo /E /TC
*_VS2012x86_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2012x86_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2012x86_*_ASM16_PATH      = DEF(VS2012x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2012x86_*_ASL_PATH        = DEF(WIN_IASL_BIN)
*_VS2012x86_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2012x86_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2012x86_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2012x86_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2012x86_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2012x86_IA32_*_DLL        = DEF(VS2012x86_DLL)

*_VS2012x86_IA32_MAKE_PATH    = DEF(VS2012x86_BIN)\nmake.exe
*_VS2012x86_IA32_CC_PATH      = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86_IA32_VFRPP_PATH   = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86_IA32_ASLCC_PATH   = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86_IA32_ASLPP_PATH   = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86_IA32_SLINK_PATH   = DEF(VS2012x86_BIN)\lib.exe
*_VS2012x86_IA32_DLINK_PATH   = DEF(VS2012x86_BIN)\link.exe
*_VS2012x86_IA32_ASLDLINK_PATH= DEF(VS2012x86_BIN)\link.exe
*_VS2012x86_IA32_APP_PATH     = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86_IA32_PP_PATH      = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86_IA32_ASM_PATH     = DEF(VS2012x86_BIN)\ml.exe

      *_VS2012x86_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2012x86_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2012x86_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2012x86_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2012x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2012x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2012x86_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2012x86_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2012x86_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2012x86_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2012x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2012x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2012x86_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2012x86_X64_*_DLL         = DEF(VS2012x86_DLL)

*_VS2012x86_X64_CC_PATH       = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86_X64_PP_PATH       = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86_X64_APP_PATH      = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86_X64_VFRPP_PATH    = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86_X64_ASLCC_PATH    = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86_X64_ASLPP_PATH    = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86_X64_ASM_PATH      = DEF(VS2012x86_BINX64)\ml64.exe
*_VS2012x86_X64_SLINK_PATH    = DEF(VS2012x86_BINX64)\lib.exe
*_VS2012x86_X64_DLINK_PATH    = DEF(VS2012x86_BINX64)\link.exe
*_VS2012x86_X64_ASLDLINK_PATH = DEF(VS2012x86_BINX64)\link.exe

  DEBUG_VS2012x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2012x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2012x86_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2012x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2012x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2012x86_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2012x86_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2012x86_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2012x86_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2012x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2012x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2012x86_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2012x86_EBC_*_FAMILY            = INTEL
*_VS2012x86_EBC_*_DLL               = DEF(VS2012x86_DLL)

*_VS2012x86_EBC_MAKE_PATH           = DEF(VS2012x86_BIN)\nmake.exe
*_VS2012x86_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2012x86_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2012x86_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2012x86_EBC_SLINK_PATH          = DEF(VS2012x86_BIN)\link.exe
*_VS2012x86_EBC_DLINK_PATH          = DEF(VS2012x86_BIN)\link.exe

*_VS2012x86_EBC_MAKE_FLAGS          = /nologo
*_VS2012x86_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2012x86_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2012x86_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2012x86_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2012x86_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2012x86xASL     - Microsoft Visual Studio 2012 (x86) professional with Microsoft ASL
#   ASL  - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
*_VS2012x86xASL_*_*_FAMILY        = MSFT

*_VS2012x86xASL_*_MAKE_PATH       = DEF(VS2012x86_BIN)\nmake.exe
*_VS2012x86xASL_*_MAKE_FLAG       = /nologo
*_VS2012x86xASL_*_RC_PATH         = DEF(WINSDK71x86_BIN)\rc.exe

*_VS2012x86xASL_*_MAKE_FLAGS      = /nologo
*_VS2012x86xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2012x86xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2012x86xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2012x86xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2012x86xASL_*_ASM16_PATH      = DEF(VS2012x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2012x86xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2012x86xASL_*_ASL_FLAGS       = DEF(MS_ASL_FLAGS)
*_VS2012x86xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2012x86xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2012x86xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2012x86xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2012x86xASL_IA32_*_DLL        = DEF(VS2012x86_DLL)

*_VS2012x86xASL_IA32_MAKE_PATH    = DEF(VS2012x86_BIN)\nmake.exe
*_VS2012x86xASL_IA32_CC_PATH      = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86xASL_IA32_VFRPP_PATH   = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86xASL_IA32_ASLCC_PATH   = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86xASL_IA32_ASLPP_PATH   = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86xASL_IA32_SLINK_PATH   = DEF(VS2012x86_BIN)\lib.exe
*_VS2012x86xASL_IA32_DLINK_PATH   = DEF(VS2012x86_BIN)\link.exe
*_VS2012x86xASL_IA32_ASLDLINK_PATH= DEF(VS2012x86_BIN)\link.exe
*_VS2012x86xASL_IA32_APP_PATH     = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86xASL_IA32_PP_PATH      = DEF(VS2012x86_BIN)\cl.exe
*_VS2012x86xASL_IA32_ASM_PATH     = DEF(VS2012x86_BIN)\ml.exe

      *_VS2012x86xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2012x86xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2012x86xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2012x86xASL_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2012x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2012x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2012x86xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2012x86xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2012x86xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2012x86xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2012x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2012x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2012x86xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2012x86xASL_X64_*_DLL         = DEF(VS2012x86_DLL)

*_VS2012x86xASL_X64_CC_PATH       = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86xASL_X64_PP_PATH       = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86xASL_X64_APP_PATH      = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86xASL_X64_VFRPP_PATH    = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86xASL_X64_ASLCC_PATH    = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86xASL_X64_ASLPP_PATH    = DEF(VS2012x86_BINX64)\cl.exe
*_VS2012x86xASL_X64_ASM_PATH      = DEF(VS2012x86_BINX64)\ml64.exe
*_VS2012x86xASL_X64_SLINK_PATH    = DEF(VS2012x86_BINX64)\lib.exe
*_VS2012x86xASL_X64_DLINK_PATH    = DEF(VS2012x86_BINX64)\link.exe
*_VS2012x86xASL_X64_ASLDLINK_PATH = DEF(VS2012x86_BINX64)\link.exe

  DEBUG_VS2012x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2012x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2012x86xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2012x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2012x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2012x86xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2012x86xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2012x86xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2012x86xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2012x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2012x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2012x86xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2012x86xASL_EBC_*_FAMILY            = INTEL
*_VS2012x86xASL_EBC_*_DLL               = DEF(VS2012x86_DLL)

*_VS2012x86xASL_EBC_MAKE_PATH           = DEF(VS2012x86_BIN)\nmake.exe
*_VS2012x86xASL_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2012x86xASL_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2012x86xASL_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2012x86xASL_EBC_SLINK_PATH          = DEF(VS2012x86_BIN)\link.exe
*_VS2012x86xASL_EBC_DLINK_PATH          = DEF(VS2012x86_BIN)\link.exe

*_VS2012x86xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2012x86xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2012x86xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2012x86xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2012x86xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2012x86xASL_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER

####################################################################################
#
# Microsoft Visual Studio 2013
#
#   VS2013  - Microsoft Visual Studio 2013 Professional Edition with Intel ASL
#   ASL     - Intel ACPI Source Language Compiler
####################################################################################
#   VS2013           - Microsoft Visual Studio 2013 Professional Edition
*_VS2013_*_*_FAMILY               = MSFT

*_VS2013_*_MAKE_PATH              = DEF(VS2013_BIN)\nmake.exe
*_VS2013_*_MAKE_FLAGS             = /nologo
*_VS2013_*_RC_PATH                = DEF(WINSDK8_BIN)\rc.exe

*_VS2013_*_SLINK_FLAGS            = /NOLOGO /LTCG
*_VS2013_*_APP_FLAGS              = /nologo /E /TC
*_VS2013_*_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2013_*_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2013_*_ASM16_PATH             = DEF(VS2013_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2013_*_ASL_PATH               = DEF(DEFAULT_WIN_ASL_BIN)
*_VS2013_*_ASL_FLAGS              = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2013_*_ASL_OUTFLAGS           = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2013_*_ASLCC_FLAGS            = DEF(MSFT_ASLCC_FLAGS)
*_VS2013_*_ASLPP_FLAGS            = DEF(MSFT_ASLPP_FLAGS)
*_VS2013_*_ASLDLINK_FLAGS         = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2013_IA32_*_DLL               = DEF(VS2013_DLL)

*_VS2013_IA32_MAKE_PATH           = DEF(VS2013_BIN)\nmake.exe
*_VS2013_IA32_CC_PATH             = DEF(VS2013_BIN)\cl.exe
*_VS2013_IA32_VFRPP_PATH          = DEF(VS2013_BIN)\cl.exe
*_VS2013_IA32_SLINK_PATH          = DEF(VS2013_BIN)\lib.exe
*_VS2013_IA32_DLINK_PATH          = DEF(VS2013_BIN)\link.exe
*_VS2013_IA32_APP_PATH            = DEF(VS2013_BIN)\cl.exe
*_VS2013_IA32_PP_PATH             = DEF(VS2013_BIN)\cl.exe
*_VS2013_IA32_ASM_PATH            = DEF(VS2013_BIN)\ml.exe
*_VS2013_IA32_ASLCC_PATH          = DEF(VS2013_BIN)\cl.exe
*_VS2013_IA32_ASLPP_PATH          = DEF(VS2013_BIN)\cl.exe
*_VS2013_IA32_ASLDLINK_PATH       = DEF(VS2013_BIN)\link.exe

      *_VS2013_IA32_MAKE_FLAGS    = /nologo
  DEBUG_VS2013_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2013_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2013_IA32_CC_FLAGS        = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2013_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2013_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2013_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2013_IA32_NASM_FLAGS    = -Ox -f win32 -g
RELEASE_VS2013_IA32_NASM_FLAGS    = -Ox -f win32
NOOPT_VS2013_IA32_NASM_FLAGS      = -O0 -f win32 -g

  DEBUG_VS2013_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2013_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2013_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2013_X64_*_DLL         = DEF(VS2013_DLL)

*_VS2013_X64_CC_PATH       = DEF(VS2013_BINX64)\cl.exe
*_VS2013_X64_PP_PATH       = DEF(VS2013_BINX64)\cl.exe
*_VS2013_X64_APP_PATH      = DEF(VS2013_BINX64)\cl.exe
*_VS2013_X64_VFRPP_PATH    = DEF(VS2013_BINX64)\cl.exe
*_VS2013_X64_ASM_PATH      = DEF(VS2013_BINX64)\ml64.exe
*_VS2013_X64_SLINK_PATH    = DEF(VS2013_BINX64)\lib.exe
*_VS2013_X64_DLINK_PATH    = DEF(VS2013_BINX64)\link.exe
*_VS2013_X64_ASLCC_PATH    = DEF(VS2013_BINX64)\cl.exe
*_VS2013_X64_ASLPP_PATH    = DEF(VS2013_BINX64)\cl.exe
*_VS2013_X64_ASLDLINK_PATH = DEF(VS2013_BINX64)\link.exe

  DEBUG_VS2013_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2013_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2013_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2013_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2013_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2013_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2013_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2013_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2013_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2013_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2013_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2013_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2013_EBC_*_FAMILY            = INTEL
*_VS2013_EBC_*_DLL               = DEF(VS2013_DLL)

*_VS2013_EBC_MAKE_PATH           = DEF(VS2013_BIN)\nmake.exe
*_VS2013_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2013_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2013_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2013_EBC_SLINK_PATH          = DEF(VS2013_BIN)\link.exe
*_VS2013_EBC_DLINK_PATH          = DEF(VS2013_BIN)\link.exe

*_VS2013_EBC_MAKE_FLAGS          = /nologo
*_VS2013_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2013_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2013_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2013_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2013_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2013
#
#   VS2013  - Microsoft Visual Studio 2013 Professional Edition with Microsoft ASL
#   ASL     - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
#   VS2013xASL           - Microsoft Visual Studio 2013 Professional Edition
*_VS2013xASL_*_*_FAMILY        = MSFT

*_VS2013xASL_*_MAKE_PATH       = DEF(VS2013_BIN)\nmake.exe
*_VS2013xASL_*_MAKE_FLAG       = /nologo
*_VS2013xASL_*_RC_PATH         = DEF(WINSDK8_BIN)\rc.exe

*_VS2013xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2013xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2013xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2013xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2013xASL_*_ASM16_PATH      = DEF(VS2013_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2013xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2013xASL_*_ASL_FLAGS       =
*_VS2013xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2013xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2013xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2013xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2013xASL_IA32_*_DLL        = DEF(VS2013_DLL)

*_VS2013xASL_IA32_MAKE_PATH    = DEF(VS2013_BIN)\nmake.exe
*_VS2013xASL_IA32_CC_PATH      = DEF(VS2013_BIN)\cl.exe
*_VS2013xASL_IA32_VFRPP_PATH   = DEF(VS2013_BIN)\cl.exe
*_VS2013xASL_IA32_SLINK_PATH   = DEF(VS2013_BIN)\lib.exe
*_VS2013xASL_IA32_DLINK_PATH   = DEF(VS2013_BIN)\link.exe
*_VS2013xASL_IA32_APP_PATH     = DEF(VS2013_BIN)\cl.exe
*_VS2013xASL_IA32_PP_PATH      = DEF(VS2013_BIN)\cl.exe
*_VS2013xASL_IA32_ASM_PATH     = DEF(VS2013_BIN)\ml.exe
*_VS2013xASL_IA32_ASLCC_PATH    = DEF(VS2013_BIN)\cl.exe
*_VS2013xASL_IA32_ASLPP_PATH    = DEF(VS2013_BIN)\cl.exe
*_VS2013xASL_IA32_ASLDLINK_PATH = DEF(VS2013_BIN)\link.exe

      *_VS2013xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2013xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2013xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2013xASL_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2013xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2013xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2013xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2013xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2013xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2013xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2013xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2013xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2013xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2013xASL_X64_*_DLL         = DEF(VS2013_DLL)

*_VS2013xASL_X64_CC_PATH       = DEF(VS2013_BINX64)\cl.exe
*_VS2013xASL_X64_PP_PATH       = DEF(VS2013_BINX64)\cl.exe
*_VS2013xASL_X64_APP_PATH      = DEF(VS2013_BINX64)\cl.exe
*_VS2013xASL_X64_VFRPP_PATH    = DEF(VS2013_BINX64)\cl.exe
*_VS2013xASL_X64_ASM_PATH      = DEF(VS2013_BINX64)\ml64.exe
*_VS2013xASL_X64_SLINK_PATH    = DEF(VS2013_BINX64)\lib.exe
*_VS2013xASL_X64_DLINK_PATH    = DEF(VS2013_BINX64)\link.exe
*_VS2013xASL_X64_ASLCC_PATH    = DEF(VS2013_BINX64)\cl.exe
*_VS2013xASL_X64_ASLPP_PATH    = DEF(VS2013_BINX64)\cl.exe
*_VS2013xASL_X64_ASLDLINK_PATH = DEF(VS2013_BINX64)\link.exe

  DEBUG_VS2013xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2013xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2013xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2013xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2013xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2013xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2013xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2013xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2013xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2013xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2013xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2013xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2013xASL_EBC_*_FAMILY            = INTEL
*_VS2013xASL_EBC_*_DLL               = DEF(VS2013_DLL)

*_VS2013xASL_EBC_MAKE_PATH           = DEF(VS2013_BIN)\nmake.exe
*_VS2013xASL_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2013xASL_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2013xASL_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2013xASL_EBC_SLINK_PATH          = DEF(VS2013_BIN)\link.exe
*_VS2013xASL_EBC_DLINK_PATH          = DEF(VS2013_BIN)\link.exe

*_VS2013xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2013xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2013xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2013xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2013xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2013xASL_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2013x86       - Microsoft Visual Studio 2013 (x86) professional with Intel ASL
#   ASL  - Intel ACPI Source Language Compiler (iasl.exe)
####################################################################################
#   VS2013x86           - Microsoft Visual Studio 2013 (x86) professional Edition with Intel ASL
*_VS2013x86_*_*_FAMILY        = MSFT

*_VS2013x86_*_MAKE_PATH       = DEF(VS2013x86_BIN)\nmake.exe
*_VS2013x86_*_MAKE_FLAG       = /nologo
*_VS2013x86_*_RC_PATH         = DEF(WINSDK8x86_BIN)\rc.exe

*_VS2013x86_*_MAKE_FLAGS      = /nologo
*_VS2013x86_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2013x86_*_APP_FLAGS       = /nologo /E /TC
*_VS2013x86_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2013x86_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2013x86_*_ASM16_PATH      = DEF(VS2013x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2013x86_*_ASL_PATH        = DEF(WIN_IASL_BIN)
*_VS2013x86_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2013x86_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2013x86_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2013x86_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2013x86_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2013x86_IA32_*_DLL        = DEF(VS2013x86_DLL)

*_VS2013x86_IA32_MAKE_PATH    = DEF(VS2013x86_BIN)\nmake.exe
*_VS2013x86_IA32_CC_PATH      = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86_IA32_VFRPP_PATH   = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86_IA32_ASLCC_PATH   = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86_IA32_ASLPP_PATH   = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86_IA32_SLINK_PATH   = DEF(VS2013x86_BIN)\lib.exe
*_VS2013x86_IA32_DLINK_PATH   = DEF(VS2013x86_BIN)\link.exe
*_VS2013x86_IA32_ASLDLINK_PATH= DEF(VS2013x86_BIN)\link.exe
*_VS2013x86_IA32_APP_PATH     = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86_IA32_PP_PATH      = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86_IA32_ASM_PATH     = DEF(VS2013x86_BIN)\ml.exe

      *_VS2013x86_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2013x86_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2013x86_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2013x86_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2013x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2013x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2013x86_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2013x86_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2013x86_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2013x86_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2013x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2013x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2013x86_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2013x86_X64_*_DLL         = DEF(VS2013x86_DLL)

*_VS2013x86_X64_CC_PATH       = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86_X64_PP_PATH       = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86_X64_APP_PATH      = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86_X64_VFRPP_PATH    = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86_X64_ASLCC_PATH    = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86_X64_ASLPP_PATH    = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86_X64_ASM_PATH      = DEF(VS2013x86_BINX64)\ml64.exe
*_VS2013x86_X64_SLINK_PATH    = DEF(VS2013x86_BINX64)\lib.exe
*_VS2013x86_X64_DLINK_PATH    = DEF(VS2013x86_BINX64)\link.exe
*_VS2013x86_X64_ASLDLINK_PATH = DEF(VS2013x86_BINX64)\link.exe

  DEBUG_VS2013x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2013x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2013x86_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2013x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2013x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2013x86_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2013x86_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2013x86_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2013x86_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2013x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2013x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2013x86_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2013x86_EBC_*_FAMILY            = INTEL
*_VS2013x86_EBC_*_DLL               = DEF(VS2013x86_DLL)

*_VS2013x86_EBC_MAKE_PATH           = DEF(VS2013x86_BIN)\nmake.exe
*_VS2013x86_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2013x86_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2013x86_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2013x86_EBC_SLINK_PATH          = DEF(VS2013x86_BIN)\link.exe
*_VS2013x86_EBC_DLINK_PATH          = DEF(VS2013x86_BIN)\link.exe

*_VS2013x86_EBC_MAKE_FLAGS          = /nologo
*_VS2013x86_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2013x86_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2013x86_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2013x86_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2013x86_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2013x86xASL     - Microsoft Visual Studio 2013 (x86) professional with Microsoft ASL
#   ASL  - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
*_VS2013x86xASL_*_*_FAMILY        = MSFT

*_VS2013x86xASL_*_MAKE_PATH       = DEF(VS2013x86_BIN)\nmake.exe
*_VS2013x86xASL_*_MAKE_FLAG       = /nologo
*_VS2013x86xASL_*_RC_PATH         = DEF(WINSDK8x86_BIN)\rc.exe

*_VS2013x86xASL_*_MAKE_FLAGS      = /nologo
*_VS2013x86xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2013x86xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2013x86xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2013x86xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2013x86xASL_*_ASM16_PATH      = DEF(VS2013x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2013x86xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2013x86xASL_*_ASL_FLAGS       = DEF(MS_ASL_FLAGS)
*_VS2013x86xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2013x86xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2013x86xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2013x86xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2013x86xASL_IA32_*_DLL        = DEF(VS2013x86_DLL)

*_VS2013x86xASL_IA32_MAKE_PATH    = DEF(VS2013x86_BIN)\nmake.exe
*_VS2013x86xASL_IA32_CC_PATH      = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86xASL_IA32_VFRPP_PATH   = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86xASL_IA32_ASLCC_PATH   = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86xASL_IA32_ASLPP_PATH   = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86xASL_IA32_SLINK_PATH   = DEF(VS2013x86_BIN)\lib.exe
*_VS2013x86xASL_IA32_DLINK_PATH   = DEF(VS2013x86_BIN)\link.exe
*_VS2013x86xASL_IA32_ASLDLINK_PATH= DEF(VS2013x86_BIN)\link.exe
*_VS2013x86xASL_IA32_APP_PATH     = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86xASL_IA32_PP_PATH      = DEF(VS2013x86_BIN)\cl.exe
*_VS2013x86xASL_IA32_ASM_PATH     = DEF(VS2013x86_BIN)\ml.exe

      *_VS2013x86xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2013x86xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2013x86xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2013x86xASL_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2013x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2013x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2013x86xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2013x86xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2013x86xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2013x86xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2013x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2013x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2013x86xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2013x86xASL_X64_*_DLL         = DEF(VS2013x86_DLL)

*_VS2013x86xASL_X64_CC_PATH       = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86xASL_X64_PP_PATH       = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86xASL_X64_APP_PATH      = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86xASL_X64_VFRPP_PATH    = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86xASL_X64_ASLCC_PATH    = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86xASL_X64_ASLPP_PATH    = DEF(VS2013x86_BINX64)\cl.exe
*_VS2013x86xASL_X64_ASM_PATH      = DEF(VS2013x86_BINX64)\ml64.exe
*_VS2013x86xASL_X64_SLINK_PATH    = DEF(VS2013x86_BINX64)\lib.exe
*_VS2013x86xASL_X64_DLINK_PATH    = DEF(VS2013x86_BINX64)\link.exe
*_VS2013x86xASL_X64_ASLDLINK_PATH = DEF(VS2013x86_BINX64)\link.exe

  DEBUG_VS2013x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2013x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2013x86xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2013x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2013x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2013x86xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2013x86xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2013x86xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2013x86xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2013x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2013x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2013x86xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2013x86xASL_EBC_*_FAMILY            = INTEL
*_VS2013x86xASL_EBC_*_DLL               = DEF(VS2013x86_DLL)

*_VS2013x86xASL_EBC_MAKE_PATH           = DEF(VS2013x86_BIN)\nmake.exe
*_VS2013x86xASL_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2013x86xASL_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2013x86xASL_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2013x86xASL_EBC_SLINK_PATH          = DEF(VS2013x86_BIN)\link.exe
*_VS2013x86xASL_EBC_DLINK_PATH          = DEF(VS2013x86_BIN)\link.exe

*_VS2013x86xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2013x86xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2013x86xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2013x86xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2013x86xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2013x86xASL_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2015
#
#   VS2015  - Microsoft Visual Studio 2015 Professional Edition with Intel ASL
#   ASL     - Intel ACPI Source Language Compiler
####################################################################################
#   VS2015           - Microsoft Visual Studio 2015 Professional Edition
*_VS2015_*_*_FAMILY               = MSFT

*_VS2015_*_MAKE_PATH              = DEF(VS2015_BIN)\nmake.exe
*_VS2015_*_MAKE_FLAGS             = /nologo
*_VS2015_*_RC_PATH                = DEF(WINSDK81_BIN)\rc.exe

*_VS2015_*_SLINK_FLAGS            = /NOLOGO /LTCG
*_VS2015_*_APP_FLAGS              = /nologo /E /TC
*_VS2015_*_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2015_*_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2015_*_ASM16_PATH             = DEF(VS2015_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2015_*_ASL_PATH               = DEF(DEFAULT_WIN_ASL_BIN)
*_VS2015_*_ASL_FLAGS              = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2015_*_ASL_OUTFLAGS           = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2015_*_ASLCC_FLAGS            = DEF(MSFT_ASLCC_FLAGS)
*_VS2015_*_ASLPP_FLAGS            = DEF(MSFT_ASLPP_FLAGS)
*_VS2015_*_ASLDLINK_FLAGS         = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2015_IA32_*_DLL               = DEF(VS2015_DLL)

*_VS2015_IA32_MAKE_PATH           = DEF(VS2015_BIN)\nmake.exe
*_VS2015_IA32_CC_PATH             = DEF(VS2015_BIN)\cl.exe
*_VS2015_IA32_VFRPP_PATH          = DEF(VS2015_BIN)\cl.exe
*_VS2015_IA32_SLINK_PATH          = DEF(VS2015_BIN)\lib.exe
*_VS2015_IA32_DLINK_PATH          = DEF(VS2015_BIN)\link.exe
*_VS2015_IA32_APP_PATH            = DEF(VS2015_BIN)\cl.exe
*_VS2015_IA32_PP_PATH             = DEF(VS2015_BIN)\cl.exe
*_VS2015_IA32_ASM_PATH            = DEF(VS2015_BIN)\ml.exe
*_VS2015_IA32_ASLCC_PATH          = DEF(VS2015_BIN)\cl.exe
*_VS2015_IA32_ASLPP_PATH          = DEF(VS2015_BIN)\cl.exe
*_VS2015_IA32_ASLDLINK_PATH       = DEF(VS2015_BIN)\link.exe

      *_VS2015_IA32_MAKE_FLAGS    = /nologo
  DEBUG_VS2015_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2015_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2015_IA32_CC_FLAGS        = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2015_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2015_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2015_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2015_IA32_NASM_FLAGS    = -Ox -f win32 -g
RELEASE_VS2015_IA32_NASM_FLAGS    = -Ox -f win32
NOOPT_VS2015_IA32_NASM_FLAGS      = -O0 -f win32 -g

  DEBUG_VS2015_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2015_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2015_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2015_X64_*_DLL         = DEF(VS2015_DLL)

*_VS2015_X64_CC_PATH       = DEF(VS2015_BINX64)\cl.exe
*_VS2015_X64_PP_PATH       = DEF(VS2015_BINX64)\cl.exe
*_VS2015_X64_APP_PATH      = DEF(VS2015_BINX64)\cl.exe
*_VS2015_X64_VFRPP_PATH    = DEF(VS2015_BINX64)\cl.exe
*_VS2015_X64_ASM_PATH      = DEF(VS2015_BINX64)\ml64.exe
*_VS2015_X64_SLINK_PATH    = DEF(VS2015_BINX64)\lib.exe
*_VS2015_X64_DLINK_PATH    = DEF(VS2015_BINX64)\link.exe
*_VS2015_X64_ASLCC_PATH    = DEF(VS2015_BINX64)\cl.exe
*_VS2015_X64_ASLPP_PATH    = DEF(VS2015_BINX64)\cl.exe
*_VS2015_X64_ASLDLINK_PATH = DEF(VS2015_BINX64)\link.exe

  DEBUG_VS2015_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2015_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2015_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2015_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2015_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2015_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2015_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2015_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2015_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2015_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2015_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2015_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2015_EBC_*_FAMILY            = INTEL
*_VS2015_EBC_*_DLL               = DEF(VS2015_DLL)

*_VS2015_EBC_MAKE_PATH           = DEF(VS2015_BIN)\nmake.exe
*_VS2015_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2015_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2015_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2015_EBC_SLINK_PATH          = DEF(VS2015_BIN)\link.exe
*_VS2015_EBC_DLINK_PATH          = DEF(VS2015_BIN)\link.exe

*_VS2015_EBC_MAKE_FLAGS          = /nologo
*_VS2015_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2015_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2015_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2015_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2015_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2015
#
#   VS2015  - Microsoft Visual Studio 2015 Professional Edition with Microsoft ASL
#   ASL     - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
#   VS2015xASL           - Microsoft Visual Studio 2015 Professional Edition
*_VS2015xASL_*_*_FAMILY        = MSFT

*_VS2015xASL_*_MAKE_PATH       = DEF(VS2015_BIN)\nmake.exe
*_VS2015xASL_*_MAKE_FLAG       = /nologo
*_VS2015xASL_*_RC_PATH         = DEF(WINSDK81_BIN)\rc.exe

*_VS2015xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2015xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2015xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2015xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2015xASL_*_ASM16_PATH      = DEF(VS2015_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2015xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2015xASL_*_ASL_FLAGS       =
*_VS2015xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2015xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2015xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2015xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2015xASL_IA32_*_DLL        = DEF(VS2015_DLL)

*_VS2015xASL_IA32_MAKE_PATH    = DEF(VS2015_BIN)\nmake.exe
*_VS2015xASL_IA32_CC_PATH      = DEF(VS2015_BIN)\cl.exe
*_VS2015xASL_IA32_VFRPP_PATH   = DEF(VS2015_BIN)\cl.exe
*_VS2015xASL_IA32_SLINK_PATH   = DEF(VS2015_BIN)\lib.exe
*_VS2015xASL_IA32_DLINK_PATH   = DEF(VS2015_BIN)\link.exe
*_VS2015xASL_IA32_APP_PATH     = DEF(VS2015_BIN)\cl.exe
*_VS2015xASL_IA32_PP_PATH      = DEF(VS2015_BIN)\cl.exe
*_VS2015xASL_IA32_ASM_PATH     = DEF(VS2015_BIN)\ml.exe
*_VS2015xASL_IA32_ASLCC_PATH    = DEF(VS2015_BIN)\cl.exe
*_VS2015xASL_IA32_ASLPP_PATH    = DEF(VS2015_BIN)\cl.exe
*_VS2015xASL_IA32_ASLDLINK_PATH = DEF(VS2015_BIN)\link.exe

      *_VS2015xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2015xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2015xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2015xASL_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2015xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2015xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2015xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2015xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2015xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2015xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2015xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2015xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2015xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2015xASL_X64_*_DLL         = DEF(VS2015_DLL)

*_VS2015xASL_X64_CC_PATH       = DEF(VS2015_BINX64)\cl.exe
*_VS2015xASL_X64_PP_PATH       = DEF(VS2015_BINX64)\cl.exe
*_VS2015xASL_X64_APP_PATH      = DEF(VS2015_BINX64)\cl.exe
*_VS2015xASL_X64_VFRPP_PATH    = DEF(VS2015_BINX64)\cl.exe
*_VS2015xASL_X64_ASM_PATH      = DEF(VS2015_BINX64)\ml64.exe
*_VS2015xASL_X64_SLINK_PATH    = DEF(VS2015_BINX64)\lib.exe
*_VS2015xASL_X64_DLINK_PATH    = DEF(VS2015_BINX64)\link.exe
*_VS2015xASL_X64_ASLCC_PATH    = DEF(VS2015_BINX64)\cl.exe
*_VS2015xASL_X64_ASLPP_PATH    = DEF(VS2015_BINX64)\cl.exe
*_VS2015xASL_X64_ASLDLINK_PATH = DEF(VS2015_BINX64)\link.exe

  DEBUG_VS2015xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2015xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2015xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2015xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2015xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2015xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2015xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2015xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2015xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2015xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2015xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2015xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2015xASL_EBC_*_FAMILY            = INTEL
*_VS2015xASL_EBC_*_DLL               = DEF(VS2015_DLL)

*_VS2015xASL_EBC_MAKE_PATH           = DEF(VS2015_BIN)\nmake.exe
*_VS2015xASL_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2015xASL_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_VS2015xASL_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2015xASL_EBC_SLINK_PATH          = DEF(VS2015_BIN)\link.exe
*_VS2015xASL_EBC_DLINK_PATH          = DEF(VS2015_BIN)\link.exe

*_VS2015xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2015xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2015xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2015xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2015xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2015xASL_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2015x86       - Microsoft Visual Studio 2015 (x86) professional with Intel ASL
#   ASL  - Intel ACPI Source Language Compiler (iasl.exe)
####################################################################################
#   VS2015x86           - Microsoft Visual Studio 2015 (x86) professional Edition with Intel ASL
*_VS2015x86_*_*_FAMILY        = MSFT

*_VS2015x86_*_MAKE_PATH       = DEF(VS2015x86_BIN)\nmake.exe
*_VS2015x86_*_MAKE_FLAG       = /nologo
*_VS2015x86_*_RC_PATH         = DEF(WINSDK81x86_BIN)\rc.exe

*_VS2015x86_*_MAKE_FLAGS      = /nologo
*_VS2015x86_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2015x86_*_APP_FLAGS       = /nologo /E /TC
*_VS2015x86_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2015x86_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2015x86_*_ASM16_PATH      = DEF(VS2015x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2015x86_*_ASL_PATH        = DEF(WIN_IASL_BIN)
*_VS2015x86_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2015x86_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2015x86_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2015x86_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2015x86_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2015x86_IA32_*_DLL        = DEF(VS2015x86_DLL)

*_VS2015x86_IA32_MAKE_PATH    = DEF(VS2015x86_BIN)\nmake.exe
*_VS2015x86_IA32_CC_PATH      = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86_IA32_VFRPP_PATH   = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86_IA32_ASLCC_PATH   = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86_IA32_ASLPP_PATH   = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86_IA32_SLINK_PATH   = DEF(VS2015x86_BIN)\lib.exe
*_VS2015x86_IA32_DLINK_PATH   = DEF(VS2015x86_BIN)\link.exe
*_VS2015x86_IA32_ASLDLINK_PATH= DEF(VS2015x86_BIN)\link.exe
*_VS2015x86_IA32_APP_PATH     = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86_IA32_PP_PATH      = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86_IA32_ASM_PATH     = DEF(VS2015x86_BIN)\ml.exe

      *_VS2015x86_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2015x86_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2015x86_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2015x86_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2015x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2015x86_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2015x86_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2015x86_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2015x86_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2015x86_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2015x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2015x86_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2015x86_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2015x86_X64_*_DLL         = DEF(VS2015x86_DLL)

*_VS2015x86_X64_CC_PATH       = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86_X64_PP_PATH       = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86_X64_APP_PATH      = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86_X64_VFRPP_PATH    = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86_X64_ASLCC_PATH    = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86_X64_ASLPP_PATH    = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86_X64_ASM_PATH      = DEF(VS2015x86_BINX64)\ml64.exe
*_VS2015x86_X64_SLINK_PATH    = DEF(VS2015x86_BINX64)\lib.exe
*_VS2015x86_X64_DLINK_PATH    = DEF(VS2015x86_BINX64)\link.exe
*_VS2015x86_X64_ASLDLINK_PATH = DEF(VS2015x86_BINX64)\link.exe

  DEBUG_VS2015x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2015x86_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2015x86_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2015x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2015x86_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2015x86_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2015x86_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2015x86_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2015x86_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2015x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2015x86_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2015x86_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2015x86_EBC_*_FAMILY            = INTEL
*_VS2015x86_EBC_*_DLL               = DEF(VS2015x86_DLL)

*_VS2015x86_EBC_MAKE_PATH           = DEF(VS2015x86_BIN)\nmake.exe
*_VS2015x86_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2015x86_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2015x86_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2015x86_EBC_SLINK_PATH          = DEF(VS2015x86_BIN)\link.exe
*_VS2015x86_EBC_DLINK_PATH          = DEF(VS2015x86_BIN)\link.exe

*_VS2015x86_EBC_MAKE_FLAGS          = /nologo
*_VS2015x86_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2015x86_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2015x86_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2015x86_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2015x86_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2015x86xASL     - Microsoft Visual Studio 2015 (x86) professional with Microsoft ASL
#   ASL  - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
*_VS2015x86xASL_*_*_FAMILY        = MSFT

*_VS2015x86xASL_*_MAKE_PATH       = DEF(VS2015x86_BIN)\nmake.exe
*_VS2015x86xASL_*_MAKE_FLAG       = /nologo
*_VS2015x86xASL_*_RC_PATH         = DEF(WINSDK81x86_BIN)\rc.exe

*_VS2015x86xASL_*_MAKE_FLAGS      = /nologo
*_VS2015x86xASL_*_SLINK_FLAGS     = /NOLOGO /LTCG
*_VS2015x86xASL_*_APP_FLAGS       = /nologo /E /TC
*_VS2015x86xASL_*_PP_FLAGS        = /nologo /E /TC /FIAutoGen.h
*_VS2015x86xASL_*_VFRPP_FLAGS     = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2015x86xASL_*_ASM16_PATH      = DEF(VS2015x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2015x86xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_VS2015x86xASL_*_ASL_FLAGS       = DEF(MS_ASL_FLAGS)
*_VS2015x86xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_VS2015x86xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_VS2015x86xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_VS2015x86xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2015x86xASL_IA32_*_DLL        = DEF(VS2015x86_DLL)

*_VS2015x86xASL_IA32_MAKE_PATH    = DEF(VS2015x86_BIN)\nmake.exe
*_VS2015x86xASL_IA32_CC_PATH      = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86xASL_IA32_VFRPP_PATH   = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86xASL_IA32_ASLCC_PATH   = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86xASL_IA32_ASLPP_PATH   = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86xASL_IA32_SLINK_PATH   = DEF(VS2015x86_BIN)\lib.exe
*_VS2015x86xASL_IA32_DLINK_PATH   = DEF(VS2015x86_BIN)\link.exe
*_VS2015x86xASL_IA32_ASLDLINK_PATH= DEF(VS2015x86_BIN)\link.exe
*_VS2015x86xASL_IA32_APP_PATH     = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86xASL_IA32_PP_PATH      = DEF(VS2015x86_BIN)\cl.exe
*_VS2015x86xASL_IA32_ASM_PATH     = DEF(VS2015x86_BIN)\ml.exe

      *_VS2015x86xASL_IA32_MAKE_FLAGS  = /nologo
  DEBUG_VS2015x86xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2015x86xASL_IA32_CC_FLAGS    = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2015x86xASL_IA32_CC_FLAGS      = /nologo /arch:IA32 /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2015x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2015x86xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /Cx /coff /Zd
NOOPT_VS2015x86xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2015x86xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_VS2015x86xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_VS2015x86xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2015x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2015x86xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2015x86xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2015x86xASL_X64_*_DLL         = DEF(VS2015x86_DLL)

*_VS2015x86xASL_X64_CC_PATH       = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86xASL_X64_PP_PATH       = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86xASL_X64_APP_PATH      = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86xASL_X64_VFRPP_PATH    = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86xASL_X64_ASLCC_PATH    = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86xASL_X64_ASLPP_PATH    = DEF(VS2015x86_BINX64)\cl.exe
*_VS2015x86xASL_X64_ASM_PATH      = DEF(VS2015x86_BINX64)\ml64.exe
*_VS2015x86xASL_X64_SLINK_PATH    = DEF(VS2015x86_BINX64)\lib.exe
*_VS2015x86xASL_X64_DLINK_PATH    = DEF(VS2015x86_BINX64)\link.exe
*_VS2015x86xASL_X64_ASLDLINK_PATH = DEF(VS2015x86_BINX64)\link.exe

  DEBUG_VS2015x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2015x86xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2015x86xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2015x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2015x86xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2015x86xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2015x86xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_VS2015x86xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_VS2015x86xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2015x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2015x86xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2015x86xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# EBC definitions
##################
*_VS2015x86xASL_EBC_*_FAMILY            = INTEL
*_VS2015x86xASL_EBC_*_DLL               = DEF(VS2015x86_DLL)

*_VS2015x86xASL_EBC_MAKE_PATH           = DEF(VS2015x86_BIN)\nmake.exe
*_VS2015x86xASL_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2015x86xASL_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2015x86xASL_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2015x86xASL_EBC_SLINK_PATH          = DEF(VS2015x86_BIN)\link.exe
*_VS2015x86xASL_EBC_DLINK_PATH          = DEF(VS2015x86_BIN)\link.exe

*_VS2015x86xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2015x86xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2015x86xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2015x86xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2015x86xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2015x86xASL_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Device Driver Kit 3790.1830 (IA-32, X64, Itanium, with Link Time Code Generation)
# And Intel ACPI Compiler
#
####################################################################################
#   DDK3790  - Microsoft Windows DDK 3790.1830
#   ASL  - Intel ACPI Source Language Compiler (iasl.exe)
*_DDK3790_*_*_FAMILY        = MSFT

*_DDK3790_*_*_DLL           = DEF(WINDDK_BIN32)
*_DDK3790_*_MAKE_PATH       = DEF(WINDDK_BIN32)\nmake.exe
*_DDK3790_*_MAKE_FLAGS           = /nologo
*_DDK3790_*_RC_PATH         = DEF(WINDDK_BIN32)\rc.exe

*_DDK3790_*_PP_FLAGS             = /nologo /E /TC /FIAutoGen.h
*_DDK3790_*_APP_FLAGS            = /nologo /E /TC
*_DDK3790_*_SLINK_FLAGS          = /nologo /LTCG
*_DDK3790_*_VFRPP_FLAGS          = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_DDK3790_*_ASM16_PATH      = DEF(WINDDK_BIN32)\ml.exe

##################
# ASL definitions
##################
*_DDK3790_*_ASL_PATH        = DEF(DEFAULT_WIN_ASL_BIN)
*_DDK3790_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_DDK3790_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_DDK3790_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_DDK3790_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_DDK3790_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_DDK3790_IA32_CC_PATH      = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_SLINK_PATH   = DEF(WINDDK_BIN32)\lib.exe
*_DDK3790_IA32_DLINK_PATH   = DEF(WINDDK_BIN32)\link.exe
*_DDK3790_IA32_PP_PATH      = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_VFRPP_PATH   = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_APP_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_ASM_PATH     = DEF(WINDDK_BIN32)\ml.exe
*_DDK3790_IA32_ASLCC_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_ASLPP_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_ASLDLINK_PATH  = DEF(WINDDK_BIN32)\link.exe

  DEBUG_DDK3790_IA32_CC_FLAGS    = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_DDK3790_IA32_CC_FLAGS    = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_DDK3790_IA32_CC_FLAGS      = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_DDK3790_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /coff /Cx /Zd /Zi
RELEASE_DDK3790_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /coff /Cx /Zd
NOOPT_DDK3790_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /coff /Cx /Zd /Zi

  DEBUG_DDK3790_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_DDK3790_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_DDK3790_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_DDK3790_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_DDK3790_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4078 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_DDK3790_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# x64 definitions
##################
*_DDK3790_X64_CC_PATH      = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_SLINK_PATH   = DEF(WINDDK_BINX64)\lib.exe
*_DDK3790_X64_DLINK_PATH   = DEF(WINDDK_BINX64)\link.exe
*_DDK3790_X64_PP_PATH      = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_VFRPP_PATH   = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_APP_PATH     = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_ASM_PATH     = DEF(WINDDK_BINX64)\ml64.exe
*_DDK3790_X64_ASLCC_PATH     = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_ASLPP_PATH     = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_ASLDLINK_PATH  = DEF(WINDDK_BINX64)\link.exe

  DEBUG_DDK3790_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_DDK3790_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_DDK3790_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_DDK3790_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_DDK3790_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_DDK3790_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_DDK3790_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_DDK3790_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_DDK3790_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_DDK3790_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_DDK3790_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4078 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_DDK3790_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_DDK3790_IPF_CC_PATH      = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_SLINK_PATH   = DEF(WINDDK_BIN64)\lib.exe
*_DDK3790_IPF_DLINK_PATH   = DEF(WINDDK_BIN64)\link.exe
*_DDK3790_IPF_PP_PATH      = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_VFRPP_PATH   = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_APP_PATH     = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_ASM_PATH     = DEF(WINDDK_BIN64)\ias.exe
*_DDK3790_IPF_ASLCC_PATH     = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_ASLPP_PATH     = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_ASLDLINK_PATH  = DEF(WINDDK_BIN64)\link.exe


  DEBUG_DDK3790_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_DDK3790_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_DDK3790_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_DDK3790_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_DDK3790_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_DDK3790_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_DDK3790_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_DDK3790_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
NOOPT_DDK3790_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_DDK3790_EBC_*_FAMILY      = INTEL

*_DDK3790_EBC_PP_PATH       = DEF(EBC_BIN)\iec.exe
*_DDK3790_EBC_CC_PATH       = DEF(EBC_BIN)\iec.exe
*_DDK3790_EBC_DLINK_PATH    = DEF(EBC_BIN)\link.exe
*_DDK3790_EBC_SLINK_PATH    = DEF(EBC_BIN)\link.exe
*_DDK3790_EBC_VFRPP_PATH    = DEF(EBC_BIN)\iec.exe

*_DDK3790_EBC_CC_FLAGS           = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_DDK3790_EBC_SLINK_FLAGS        = /lib /NOLOGO /MACHINE:EBC
*_DDK3790_EBC_DLINK_FLAGS        = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /ALIGN:32 /DRIVER

####################################################################################
#
# Microsoft Device Driver Kit 3790.1830 (IA-32, X64, Itanium, with Link Time Code Generation)
# And Microsoft ACPI Compiler
#
####################################################################################
#   DDK3790xASL  - Microsoft Windows DDK 3790.1830
#   ASL          - Microsoft ACPI Source Language Compiler (asl.exe)
*_DDK3790xASL_*_*_FAMILY        = MSFT

*_DDK3790xASL_*_*_DLL           = DEF(WINDDK_BIN32)
*_DDK3790xASL_*_MAKE_PATH       = DEF(WINDDK_BIN32)\nmake.exe
*_DDK3790xASL_*_MAKE_FLAGS           = /nologo
*_DDK3790xASL_*_RC_PATH         = DEF(WINDDK_BIN32)\rc.exe

*_DDK3790xASL_*_PP_FLAGS             = /nologo /E /TC /FIAutoGen.h
*_DDK3790xASL_*_APP_FLAGS            = /nologo /E /TC
*_DDK3790xASL_*_SLINK_FLAGS          = /nologo /LTCG
*_DDK3790xASL_*_VFRPP_FLAGS          = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_DDK3790xASL_*_ASM16_PATH      = DEF(WINDDK_BIN32)\ml.exe

##################
# ASL definitions
##################
*_DDK3790xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_DDK3790xASL_*_ASL_FLAGS       =
*_DDK3790xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_DDK3790xASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_DDK3790xASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_DDK3790xASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_DDK3790xASL_IA32_CC_PATH      = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_SLINK_PATH   = DEF(WINDDK_BIN32)\lib.exe
*_DDK3790xASL_IA32_DLINK_PATH   = DEF(WINDDK_BIN32)\link.exe
*_DDK3790xASL_IA32_PP_PATH      = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_VFRPP_PATH   = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_APP_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_ASM_PATH     = DEF(WINDDK_BIN32)\ml.exe
*_DDK3790xASL_IA32_ASLCC_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_ASLPP_PATH     = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_ASLDLINK_PATH  = DEF(WINDDK_BIN32)\link.exe

  DEBUG_DDK3790xASL_IA32_CC_FLAGS    = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_DDK3790xASL_IA32_CC_FLAGS    = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_DDK3790xASL_IA32_CC_FLAGS      = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_DDK3790xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /coff /Cx /Zd /Zi
RELEASE_DDK3790xASL_IA32_ASM_FLAGS   = /nologo /c /WX /W3 /coff /Cx /Zd
NOOPT_DDK3790xASL_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /coff /Cx /Zd /Zi

  DEBUG_DDK3790xASL_IA32_NASM_FLAGS  = -Ox -f win32 -g
RELEASE_DDK3790xASL_IA32_NASM_FLAGS  = -Ox -f win32
NOOPT_DDK3790xASL_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_DDK3790xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_DDK3790xASL_IA32_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4078 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_DDK3790xASL_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# x64 definitions
##################
*_DDK3790xASL_X64_CC_PATH      = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_SLINK_PATH   = DEF(WINDDK_BINX64)\lib.exe
*_DDK3790xASL_X64_DLINK_PATH   = DEF(WINDDK_BINX64)\link.exe
*_DDK3790xASL_X64_PP_PATH      = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_VFRPP_PATH   = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_APP_PATH     = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_ASM_PATH     = DEF(WINDDK_BINX64)\ml64.exe
*_DDK3790xASL_X64_ASLCC_PATH     = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_ASLPP_PATH     = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_ASLDLINK_PATH  = DEF(WINDDK_BINX64)\link.exe

  DEBUG_DDK3790xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_DDK3790xASL_X64_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_DDK3790xASL_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_DDK3790xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_DDK3790xASL_X64_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /Zd
NOOPT_DDK3790xASL_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_DDK3790xASL_X64_NASM_FLAGS   = -Ox -f win64 -g
RELEASE_DDK3790xASL_X64_NASM_FLAGS   = -Ox -f win64
NOOPT_DDK3790xASL_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_DDK3790xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_DDK3790xASL_X64_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4078 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_DDK3790xASL_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_DDK3790xASL_IPF_CC_PATH      = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_SLINK_PATH   = DEF(WINDDK_BIN64)\lib.exe
*_DDK3790xASL_IPF_DLINK_PATH   = DEF(WINDDK_BIN64)\link.exe
*_DDK3790xASL_IPF_PP_PATH      = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_VFRPP_PATH   = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_APP_PATH     = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_ASM_PATH     = DEF(WINDDK_BIN64)\ias.exe
*_DDK3790xASL_IPF_ASLCC_PATH     = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_ASLPP_PATH     = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_ASLDLINK_PATH  = DEF(WINDDK_BIN64)\link.exe


  DEBUG_DDK3790xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_DDK3790xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_DDK3790xASL_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_DDK3790xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_DDK3790xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_DDK3790xASL_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_DDK3790xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_DDK3790xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
NOOPT_DDK3790xASL_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_DDK3790xASL_EBC_*_FAMILY      = INTEL

*_DDK3790xASL_EBC_PP_PATH       = DEF(EBC_BIN)\iec.exe
*_DDK3790xASL_EBC_CC_PATH       = DEF(EBC_BIN)\iec.exe
*_DDK3790xASL_EBC_DLINK_PATH    = DEF(EBC_BIN)\link.exe
*_DDK3790xASL_EBC_SLINK_PATH    = DEF(EBC_BIN)\link.exe
*_DDK3790xASL_EBC_VFRPP_PATH    = DEF(EBC_BIN)\iec.exe

*_DDK3790xASL_EBC_CC_FLAGS           = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_DDK3790xASL_EBC_SLINK_FLAGS        = /lib /NOLOGO /MACHINE:EBC
*_DDK3790xASL_EBC_DLINK_FLAGS        = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /ALIGN:32 /DRIVER


####################################################################################
# GCC Common
####################################################################################

*_*_*_OBJCOPY_PATH              = echo
*_*_*_OBJCOPY_FLAGS             = objcopy not needed for
*_*_*_SYMRENAME_PATH            = echo
*_*_*_SYMRENAME_FLAGS           = Symbol renaming not needed for
DEBUG_*_*_OBJCOPY_ADDDEBUGFLAG     = --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug
RELEASE_*_*_OBJCOPY_ADDDEBUGFLAG   =
NOOPT_*_*_OBJCOPY_ADDDEBUGFLAG     = --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug

DEFINE GCC_ALL_CC_FLAGS            = -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common
DEFINE GCC_IA32_CC_FLAGS           = DEF(GCC_ALL_CC_FLAGS) -m32 -malign-double -freorder-blocks -freorder-blocks-and-partition -O2 -mno-stack-arg-probe
DEFINE GCC_X64_CC_FLAGS            = DEF(GCC_ALL_CC_FLAGS) -mno-red-zone -Wno-address -mno-stack-arg-probe
DEFINE GCC_IPF_CC_FLAGS            = DEF(GCC_ALL_CC_FLAGS) -minline-int-divide-min-latency
DEFINE GCC_ARM_CC_FLAGS            = DEF(GCC_ALL_CC_FLAGS) -mlittle-endian -mabi=aapcs -fno-short-enums -funsigned-char -ffunction-sections -fdata-sections -fomit-frame-pointer -Wno-address -mthumb -mfloat-abi=soft
DEFINE GCC_ARM_CC_XIPFLAGS         = -mno-unaligned-access
DEFINE GCC_AARCH64_CC_FLAGS        = DEF(GCC_ALL_CC_FLAGS) -mlittle-endian -fno-short-enums -fverbose-asm -funsigned-char  -ffunction-sections -fdata-sections -Wno-address -fno-asynchronous-unwind-tables -fno-pic
DEFINE GCC_AARCH64_CC_XIPFLAGS     = -mstrict-align
DEFINE GCC_DLINK_FLAGS_COMMON      = -nostdlib --pie
DEFINE GCC_DLINK2_FLAGS_COMMON     = -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds
DEFINE GCC_IA32_X64_DLINK_COMMON   = DEF(GCC_DLINK_FLAGS_COMMON) --gc-sections
DEFINE GCC_ARM_AARCH64_DLINK_COMMON= -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map
DEFINE GCC_ARM_DLINK_FLAGS         = DEF(GCC_ARM_AARCH64_DLINK_COMMON) -z common-page-size=0x20
DEFINE GCC_AARCH64_DLINK_FLAGS     = DEF(GCC_ARM_AARCH64_DLINK_COMMON) -z common-page-size=0x20
DEFINE GCC_IA32_X64_ASLDLINK_FLAGS = DEF(GCC_IA32_X64_DLINK_COMMON) --entry _ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT)
DEFINE GCC_ARM_ASLDLINK_FLAGS      = DEF(GCC_ARM_DLINK_FLAGS) -Wl,--entry,ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT)
DEFINE GCC_AARCH64_ASLDLINK_FLAGS  = DEF(GCC_AARCH64_DLINK_FLAGS) -Wl,--entry,ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT)
DEFINE GCC_IA32_X64_DLINK_FLAGS    = DEF(GCC_IA32_X64_DLINK_COMMON) --entry _$(IMAGE_ENTRY_POINT) --file-alignment 0x20 --section-alignment 0x20 -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
DEFINE GCC_IPF_DLINK_FLAGS         = -nostdlib -O2 --gc-sections --dll -static --entry $(IMAGE_ENTRY_POINT) --undefined $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
DEFINE GCC_IPF_OBJCOPY_FLAGS       = -I elf64-ia64-little -O efi-bsdrv-ia64
DEFINE GCC_IPF_SYMRENAME_FLAGS     = --redefine-sym memcpy=CopyMem
DEFINE GCC_ASM_FLAGS               = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
DEFINE GCC_PP_FLAGS                = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
DEFINE GCC_VFRPP_FLAGS             = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
DEFINE GCC_ASLPP_FLAGS             = -x c -E -include AutoGen.h
DEFINE GCC_ASLCC_FLAGS             = -x c
DEFINE GCC_WINDRES_FLAGS           = -J rc -O coff
DEFINE GCC_IA32_RC_FLAGS           = -I binary -O elf32-i386          -B i386    --rename-section .data=.hii
DEFINE GCC_X64_RC_FLAGS            = -I binary -O elf64-x86-64        -B i386    --rename-section .data=.hii
DEFINE GCC_IPF_RC_FLAGS            = -I binary -O elf64-ia64-little   -B ia64    --rename-section .data=.hii
DEFINE GCC_ARM_RC_FLAGS            = -I binary -O elf32-littlearm     -B arm     --rename-section .data=.hii
DEFINE GCC_AARCH64_RC_FLAGS        = -I binary -O elf64-littleaarch64 -B aarch64 --rename-section .data=.hii

DEFINE GCC44_ALL_CC_FLAGS            = -g -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -include AutoGen.h -fno-common -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings
DEFINE GCC44_IA32_CC_FLAGS           = DEF(GCC44_ALL_CC_FLAGS) -m32 -march=i586 -malign-double -fno-stack-protector -D EFI32 -fno-asynchronous-unwind-tables
DEFINE GCC44_X64_CC_FLAGS            = DEF(GCC44_ALL_CC_FLAGS) -m64 -fno-stack-protector "-DEFIAPI=__attribute__((ms_abi))" -maccumulate-outgoing-args -mno-red-zone -Wno-address -mcmodel=small -fpie -fno-asynchronous-unwind-tables
DEFINE GCC44_IA32_X64_DLINK_COMMON   = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x20
DEFINE GCC44_IA32_X64_ASLDLINK_FLAGS = DEF(GCC44_IA32_X64_DLINK_COMMON) -Wl,--entry,ReferenceAcpiTable -u ReferenceAcpiTable
DEFINE GCC44_IA32_X64_DLINK_FLAGS    = DEF(GCC44_IA32_X64_DLINK_COMMON) -Wl,--entry,$(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Wl,-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map
DEFINE GCC44_IA32_DLINK2_FLAGS       = -Wl,--defsym=PECOFF_HEADER_SIZE=0x220 DEF(GCC_DLINK2_FLAGS_COMMON)
DEFINE GCC44_X64_DLINK_FLAGS         = DEF(GCC44_IA32_X64_DLINK_FLAGS) -Wl,-melf_x86_64,--oformat=elf64-x86-64
DEFINE GCC44_X64_DLINK2_FLAGS        = -Wl,--defsym=PECOFF_HEADER_SIZE=0x228 DEF(GCC_DLINK2_FLAGS_COMMON)
DEFINE GCC44_ASM_FLAGS               = DEF(GCC_ASM_FLAGS)

DEFINE GCC45_IA32_CC_FLAGS           = DEF(GCC44_IA32_CC_FLAGS)
DEFINE GCC45_X64_CC_FLAGS            = DEF(GCC44_X64_CC_FLAGS)
DEFINE GCC45_IA32_X64_DLINK_COMMON   = DEF(GCC44_IA32_X64_DLINK_COMMON)
DEFINE GCC45_IA32_X64_ASLDLINK_FLAGS = DEF(GCC44_IA32_X64_ASLDLINK_FLAGS)
DEFINE GCC45_IA32_X64_DLINK_FLAGS    = DEF(GCC44_IA32_X64_DLINK_FLAGS)
DEFINE GCC45_IA32_DLINK2_FLAGS       = DEF(GCC44_IA32_DLINK2_FLAGS)
DEFINE GCC45_X64_DLINK_FLAGS         = DEF(GCC44_X64_DLINK_FLAGS)
DEFINE GCC45_X64_DLINK2_FLAGS        = DEF(GCC44_X64_DLINK2_FLAGS)
DEFINE GCC45_ASM_FLAGS               = DEF(GCC44_ASM_FLAGS)

DEFINE GCC46_IA32_CC_FLAGS           = DEF(GCC45_IA32_CC_FLAGS) -Wno-address
DEFINE GCC46_X64_CC_FLAGS            = DEF(GCC45_X64_CC_FLAGS) -Wno-address
DEFINE GCC46_IA32_X64_DLINK_COMMON   = DEF(GCC45_IA32_X64_DLINK_COMMON)
DEFINE GCC46_IA32_X64_ASLDLINK_FLAGS = DEF(GCC45_IA32_X64_ASLDLINK_FLAGS)
DEFINE GCC46_IA32_X64_DLINK_FLAGS    = DEF(GCC45_IA32_X64_DLINK_FLAGS)
DEFINE GCC46_IA32_DLINK2_FLAGS       = DEF(GCC45_IA32_DLINK2_FLAGS)
DEFINE GCC46_X64_DLINK_FLAGS         = DEF(GCC45_X64_DLINK_FLAGS)
DEFINE GCC46_X64_DLINK2_FLAGS        = DEF(GCC45_X64_DLINK2_FLAGS)
DEFINE GCC46_ASM_FLAGS               = DEF(GCC45_ASM_FLAGS)
DEFINE GCC46_ARM_ASM_FLAGS           = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_ASM_FLAGS) -mlittle-endian
DEFINE GCC46_ARM_CC_FLAGS            = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_ARM_CC_FLAGS) -fstack-protector -mword-relocations -save-temps
DEFINE GCC46_ARM_CC_XIPFLAGS         = -D__ARM_FEATURE_UNALIGNED=0
DEFINE GCC46_ARM_DLINK_FLAGS         = DEF(GCC_ARM_DLINK_FLAGS) -Wl,--oformat=elf32-littlearm
DEFINE GCC46_ARM_DLINK2_FLAGS        = DEF(GCC_DLINK2_FLAGS_COMMON) -Wl,--defsym=PECOFF_HEADER_SIZE=0x220
DEFINE GCC46_ARM_ASLDLINK_FLAGS      = DEF(GCC_ARM_ASLDLINK_FLAGS) -Wl,--oformat=elf32-littlearm

DEFINE GCC47_IA32_CC_FLAGS           = DEF(GCC46_IA32_CC_FLAGS)
DEFINE GCC47_X64_CC_FLAGS            = DEF(GCC46_X64_CC_FLAGS)
DEFINE GCC47_IA32_X64_DLINK_COMMON   = DEF(GCC46_IA32_X64_DLINK_COMMON)
DEFINE GCC47_IA32_X64_ASLDLINK_FLAGS = DEF(GCC46_IA32_X64_ASLDLINK_FLAGS)
DEFINE GCC47_IA32_X64_DLINK_FLAGS    = DEF(GCC46_IA32_X64_DLINK_FLAGS)
DEFINE GCC47_IA32_DLINK2_FLAGS       = DEF(GCC46_IA32_DLINK2_FLAGS)
DEFINE GCC47_X64_DLINK_FLAGS         = DEF(GCC46_X64_DLINK_FLAGS)
DEFINE GCC47_X64_DLINK2_FLAGS        = DEF(GCC46_X64_DLINK2_FLAGS)
DEFINE GCC47_ASM_FLAGS               = DEF(GCC46_ASM_FLAGS)
DEFINE GCC47_ARM_ASM_FLAGS           = DEF(GCC46_ARM_ASM_FLAGS)
DEFINE GCC47_AARCH64_ASM_FLAGS       = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_ASM_FLAGS) -mlittle-endian
DEFINE GCC47_ARM_CC_FLAGS            = DEF(GCC46_ARM_CC_FLAGS)
DEFINE GCC47_ARM_CC_XIPFLAGS         = DEF(GCC_ARM_CC_XIPFLAGS)
DEFINE GCC47_AARCH64_CC_FLAGS        = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -mcmodel=large DEF(GCC_AARCH64_CC_FLAGS) -save-temps
DEFINE GCC47_AARCH64_CC_XIPFLAGS     = DEF(GCC_AARCH64_CC_XIPFLAGS)
DEFINE GCC47_ARM_DLINK_FLAGS         = DEF(GCC46_ARM_DLINK_FLAGS)
DEFINE GCC47_ARM_DLINK2_FLAGS        = DEF(GCC46_ARM_DLINK2_FLAGS)
DEFINE GCC47_AARCH64_DLINK_FLAGS     = DEF(GCC_AARCH64_DLINK_FLAGS)
DEFINE GCC47_AARCH64_DLINK2_FLAGS    = DEF(GCC_DLINK2_FLAGS_COMMON) -Wl,--defsym=PECOFF_HEADER_SIZE=0x228
DEFINE GCC47_ARM_ASLDLINK_FLAGS      = DEF(GCC46_ARM_ASLDLINK_FLAGS)
DEFINE GCC47_AARCH64_ASLDLINK_FLAGS  = DEF(GCC_AARCH64_ASLDLINK_FLAGS)

DEFINE GCC48_IA32_CC_FLAGS           = DEF(GCC47_IA32_CC_FLAGS)
DEFINE GCC48_X64_CC_FLAGS            = DEF(GCC47_X64_CC_FLAGS)
DEFINE GCC48_IA32_X64_DLINK_COMMON   = DEF(GCC47_IA32_X64_DLINK_COMMON)
DEFINE GCC48_IA32_X64_ASLDLINK_FLAGS = DEF(GCC47_IA32_X64_ASLDLINK_FLAGS)
DEFINE GCC48_IA32_X64_DLINK_FLAGS    = DEF(GCC47_IA32_X64_DLINK_FLAGS)
DEFINE GCC48_IA32_DLINK2_FLAGS       = DEF(GCC47_IA32_DLINK2_FLAGS)
DEFINE GCC48_X64_DLINK_FLAGS         = DEF(GCC47_X64_DLINK_FLAGS)
DEFINE GCC48_X64_DLINK2_FLAGS        = DEF(GCC47_X64_DLINK2_FLAGS)
DEFINE GCC48_ASM_FLAGS               = DEF(GCC47_ASM_FLAGS)
DEFINE GCC48_ARM_ASM_FLAGS           = DEF(GCC47_ARM_ASM_FLAGS)
DEFINE GCC48_AARCH64_ASM_FLAGS       = DEF(GCC47_AARCH64_ASM_FLAGS)
DEFINE GCC48_ARM_CC_FLAGS            = DEF(GCC47_ARM_CC_FLAGS)
DEFINE GCC48_ARM_CC_XIPFLAGS         = DEF(GCC47_ARM_CC_XIPFLAGS)
DEFINE GCC48_AARCH64_CC_FLAGS        = DEF(GCC47_AARCH64_CC_FLAGS)
DEFINE GCC48_AARCH64_CC_XIPFLAGS     = DEF(GCC47_AARCH64_CC_XIPFLAGS)
DEFINE GCC48_ARM_DLINK_FLAGS         = DEF(GCC47_ARM_DLINK_FLAGS)
DEFINE GCC48_ARM_DLINK2_FLAGS        = DEF(GCC47_ARM_DLINK2_FLAGS)
DEFINE GCC48_AARCH64_DLINK_FLAGS     = DEF(GCC47_AARCH64_DLINK_FLAGS)
DEFINE GCC48_AARCH64_DLINK2_FLAGS    = DEF(GCC47_AARCH64_DLINK2_FLAGS)
DEFINE GCC48_ARM_ASLDLINK_FLAGS      = DEF(GCC47_ARM_ASLDLINK_FLAGS)
DEFINE GCC48_AARCH64_ASLDLINK_FLAGS  = DEF(GCC47_AARCH64_ASLDLINK_FLAGS)

DEFINE GCC49_IA32_CC_FLAGS           = DEF(GCC48_IA32_CC_FLAGS)
DEFINE GCC49_X64_CC_FLAGS            = DEF(GCC48_X64_CC_FLAGS)
DEFINE GCC49_IA32_X64_DLINK_COMMON   = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x40
DEFINE GCC49_IA32_X64_ASLDLINK_FLAGS = DEF(GCC49_IA32_X64_DLINK_COMMON) -Wl,--entry,ReferenceAcpiTable -u ReferenceAcpiTable
DEFINE GCC49_IA32_X64_DLINK_FLAGS    = DEF(GCC49_IA32_X64_DLINK_COMMON) -Wl,--entry,$(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Wl,-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map
DEFINE GCC49_IA32_DLINK2_FLAGS       = DEF(GCC48_IA32_DLINK2_FLAGS)
DEFINE GCC49_X64_DLINK_FLAGS         = DEF(GCC49_IA32_X64_DLINK_FLAGS) -Wl,-melf_x86_64,--oformat=elf64-x86-64
DEFINE GCC49_X64_DLINK2_FLAGS        = DEF(GCC48_X64_DLINK2_FLAGS)
DEFINE GCC49_ASM_FLAGS               = DEF(GCC48_ASM_FLAGS)
DEFINE GCC49_ARM_ASM_FLAGS           = DEF(GCC48_ARM_ASM_FLAGS)
DEFINE GCC49_AARCH64_ASM_FLAGS       = DEF(GCC48_AARCH64_ASM_FLAGS)
DEFINE GCC49_ARM_CC_FLAGS            = DEF(GCC48_ARM_CC_FLAGS)
DEFINE GCC49_ARM_CC_XIPFLAGS         = DEF(GCC48_ARM_CC_XIPFLAGS)
DEFINE GCC49_AARCH64_CC_FLAGS        = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC44_ALL_CC_FLAGS) DEF(GCC_AARCH64_CC_FLAGS) -save-temps
DEFINE GCC49_AARCH64_CC_XIPFLAGS     = DEF(GCC48_AARCH64_CC_XIPFLAGS)
DEFINE GCC49_ARM_DLINK_FLAGS         = DEF(GCC48_ARM_DLINK_FLAGS)
DEFINE GCC49_ARM_DLINK2_FLAGS        = DEF(GCC48_ARM_DLINK2_FLAGS)
DEFINE GCC49_AARCH64_DLINK_FLAGS     = DEF(GCC48_AARCH64_DLINK_FLAGS)
DEFINE GCC49_AARCH64_DLINK2_FLAGS    = DEF(GCC48_AARCH64_DLINK2_FLAGS)
DEFINE GCC49_ARM_ASLDLINK_FLAGS      = DEF(GCC48_ARM_ASLDLINK_FLAGS)
DEFINE GCC49_AARCH64_ASLDLINK_FLAGS  = DEF(GCC48_AARCH64_ASLDLINK_FLAGS)

DEFINE GCC5_IA32_CC_FLAGS            = DEF(GCC49_IA32_CC_FLAGS)
DEFINE GCC5_X64_CC_FLAGS             = DEF(GCC49_X64_CC_FLAGS)
DEFINE GCC5_IA32_X64_DLINK_COMMON    = DEF(GCC49_IA32_X64_DLINK_COMMON)
DEFINE GCC5_IA32_X64_ASLDLINK_FLAGS  = DEF(GCC49_IA32_X64_ASLDLINK_FLAGS)
DEFINE GCC5_IA32_X64_DLINK_FLAGS     = DEF(GCC49_IA32_X64_DLINK_FLAGS)
DEFINE GCC5_IA32_DLINK2_FLAGS        = DEF(GCC49_IA32_DLINK2_FLAGS) -Wno-error
DEFINE GCC5_X64_DLINK_FLAGS          = DEF(GCC49_X64_DLINK_FLAGS)
DEFINE GCC5_X64_DLINK2_FLAGS         = DEF(GCC49_X64_DLINK2_FLAGS) -Wno-error
DEFINE GCC5_ASM_FLAGS                = DEF(GCC49_ASM_FLAGS)
DEFINE GCC5_ARM_ASM_FLAGS            = DEF(GCC49_ARM_ASM_FLAGS)
DEFINE GCC5_AARCH64_ASM_FLAGS        = DEF(GCC49_AARCH64_ASM_FLAGS)
DEFINE GCC5_ARM_CC_FLAGS             = DEF(GCC49_ARM_CC_FLAGS)
DEFINE GCC5_ARM_CC_XIPFLAGS          = DEF(GCC49_ARM_CC_XIPFLAGS)
DEFINE GCC5_AARCH64_CC_FLAGS         = DEF(GCC49_AARCH64_CC_FLAGS)
DEFINE GCC5_AARCH64_CC_XIPFLAGS      = DEF(GCC49_AARCH64_CC_XIPFLAGS)
DEFINE GCC5_ARM_DLINK_FLAGS          = DEF(GCC49_ARM_DLINK_FLAGS)
DEFINE GCC5_ARM_DLINK2_FLAGS         = DEF(GCC49_ARM_DLINK2_FLAGS) -Wno-error
DEFINE GCC5_AARCH64_DLINK_FLAGS      = DEF(GCC49_AARCH64_DLINK_FLAGS)
DEFINE GCC5_AARCH64_DLINK2_FLAGS     = DEF(GCC49_AARCH64_DLINK2_FLAGS) -Wno-error
DEFINE GCC5_ARM_ASLDLINK_FLAGS       = DEF(GCC49_ARM_ASLDLINK_FLAGS)
DEFINE GCC5_AARCH64_ASLDLINK_FLAGS   = DEF(GCC49_AARCH64_ASLDLINK_FLAGS)

####################################################################################
#
# Unix GCC And Intel Linux ACPI Compiler
#
####################################################################################
#   UNIXGCC         - UNIX GCC
#   ASL             - Intel Linux ACPI Source Language Compiler (iasl)
*_UNIXGCC_*_*_FAMILY               = GCC
*_UNIXGCC_*_*_BUILDRULEFAMILY      = GCCLD

*_UNIXGCC_*_MAKE_PATH                    = make
*_UNIXGCC_*_ASL_PATH                     = DEF(UNIX_IASL_BIN)

*_UNIXGCC_IA32_DLINK_FLAGS               = DEF(GCC_IA32_X64_DLINK_FLAGS) --image-base=0
*_UNIXGCC_X64_DLINK_FLAGS                = DEF(GCC_IA32_X64_DLINK_FLAGS) --image-base=0
*_UNIXGCC_IA32_ASLDLINK_FLAGS            = DEF(GCC_IA32_X64_ASLDLINK_FLAGS)
*_UNIXGCC_X64_ASLDLINK_FLAGS             = DEF(GCC_IA32_X64_ASLDLINK_FLAGS)
*_UNIXGCC_*_ASM_FLAGS                    = DEF(GCC_ASM_FLAGS)
*_UNIXGCC_*_PP_FLAGS                     = DEF(GCC_PP_FLAGS)
*_UNIXGCC_*_ASLPP_FLAGS                  = DEF(GCC_ASLPP_FLAGS)
*_UNIXGCC_*_ASLCC_FLAGS                  = DEF(GCC_ASLCC_FLAGS)
*_UNIXGCC_*_VFRPP_FLAGS                  = DEF(GCC_VFRPP_FLAGS)
*_UNIXGCC_*_APP_FLAGS                    =
*_UNIXGCC_*_ASL_FLAGS                    = DEF(IASL_FLAGS)
*_UNIXGCC_*_ASL_OUTFLAGS                 = DEF(IASL_OUTFLAGS)

##################
# IA32 definitions
##################
*_UNIXGCC_IA32_OBJCOPY_PATH         = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)objcopy
*_UNIXGCC_IA32_PP_PATH              = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_CC_PATH              = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_SLINK_PATH           = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)ar
*_UNIXGCC_IA32_DLINK_PATH           = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)ld
*_UNIXGCC_IA32_ASLPP_PATH           = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_ASLCC_PATH           = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_ASLDLINK_PATH        = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)ld
*_UNIXGCC_IA32_ASM_PATH             = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_VFRPP_PATH           = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_RC_PATH              = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)objcopy

*_UNIXGCC_IA32_CC_FLAGS             = DEF(GCC_IA32_CC_FLAGS)
*_UNIXGCC_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_UNIXGCC_IA32_OBJCOPY_FLAGS        =
*_UNIXGCC_IA32_NASM_FLAGS           = -f win32

##################
# X64 definitions
##################
*_UNIXGCC_X64_CC_PATH               = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_ASLCC_PATH            = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_SLINK_PATH            = DEF(UNIXGCC_X64_PETOOLS_PREFIX)ar
*_UNIXGCC_X64_DLINK_PATH            = DEF(UNIXGCC_X64_PETOOLS_PREFIX)ld
*_UNIXGCC_X64_ASLDLINK_PATH         = DEF(UNIXGCC_X64_PETOOLS_PREFIX)ld
*_UNIXGCC_X64_ASM_PATH              = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_PP_PATH               = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_ASLPP_PATH            = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_VFRPP_PATH            = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_RC_PATH               = DEF(UNIXGCC_X64_PETOOLS_PREFIX)objcopy
*_UNIXGCC_X64_OBJCOPY_PATH          = DEF(UNIXGCC_X64_PETOOLS_PREFIX)objcopy

*_UNIXGCC_X64_CC_FLAGS              = DEF(GCC_X64_CC_FLAGS)
*_UNIXGCC_X64_RC_FLAGS              = DEF(GCC_X64_RC_FLAGS)
*_UNIXGCC_X64_OBJCOPY_FLAGS         =
*_UNIXGCC_X64_NASM_FLAGS            = -f win64

##################
# IPF definitions
##################
*_UNIXGCC_IPF_CC_PATH              = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_ASLCC_PATH           = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_SLINK_PATH           = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)ar
*_UNIXGCC_IPF_DLINK_PATH           = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)ld
*_UNIXGCC_IPF_ASLDLINK_PATH        = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)ld
*_UNIXGCC_IPF_ASM_PATH             = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_PP_PATH              = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_ASLPP_PATH           = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_VFRPP_PATH           = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_OBJCOPY_PATH         = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)objcopy
*_UNIXGCC_IPF_SYMRENAME_PATH       = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)objcopy
*_UNIXGCC_IPF_RC_PATH              = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)objcopy

*_UNIXGCC_IPF_CC_FLAGS             = DEF(GCC_IPF_CC_FLAGS)
*_UNIXGCC_IPF_DLINK_FLAGS          = DEF(GCC_IPF_DLINK_FLAGS)
*_UNIXGCC_IPF_OBJCOPY_FLAGS        = DEF(GCC_IPF_OBJCOPY_FLAGS)
*_UNIXGCC_IPF_SYMRENAME_FLAGS      = DEF(GCC_IPF_SYMRENAME_FLAGS)
*_UNIXGCC_IPF_RC_FLAGS             = DEF(GCC_IPF_RC_FLAGS)


####################################################################################
#
# GCC 4.4 - This configuration is used to compile under Linux to produce
#           PE/COFF binaries using GCC 4.4.
#
####################################################################################
*_GCC44_*_*_FAMILY               = GCC

*_GCC44_*_MAKE_PATH                    = DEF(GCC44_IA32_PREFIX)make
*_GCC44_*_*_DLL                        = ENV(GCC44_DLL)
*_GCC44_*_ASL_PATH                     = DEF(UNIX_IASL_BIN)

*_GCC44_*_PP_FLAGS                     = DEF(GCC_PP_FLAGS)
*_GCC44_*_ASLPP_FLAGS                  = DEF(GCC_ASLPP_FLAGS)
*_GCC44_*_ASLCC_FLAGS                  = DEF(GCC_ASLCC_FLAGS)
*_GCC44_*_VFRPP_FLAGS                  = DEF(GCC_VFRPP_FLAGS)
*_GCC44_*_APP_FLAGS                    = DEF(GCC_PP_FLAGS)
*_GCC44_*_ASL_FLAGS                    = DEF(IASL_FLAGS)
*_GCC44_*_ASL_OUTFLAGS                 = DEF(IASL_OUTFLAGS)

##################
# GCC44 IA32 definitions
##################
*_GCC44_IA32_OBJCOPY_PATH         = DEF(GCC44_IA32_PREFIX)objcopy
*_GCC44_IA32_CC_PATH              = DEF(GCC44_IA32_PREFIX)gcc
*_GCC44_IA32_SLINK_PATH           = DEF(GCC44_IA32_PREFIX)ar
*_GCC44_IA32_DLINK_PATH           = DEF(GCC44_IA32_PREFIX)gcc
*_GCC44_IA32_ASLDLINK_PATH        = DEF(GCC44_IA32_PREFIX)gcc
*_GCC44_IA32_ASM_PATH             = DEF(GCC44_IA32_PREFIX)gcc
*_GCC44_IA32_PP_PATH              = DEF(GCC44_IA32_PREFIX)gcc
*_GCC44_IA32_VFRPP_PATH           = DEF(GCC44_IA32_PREFIX)gcc
*_GCC44_IA32_ASLCC_PATH           = DEF(GCC44_IA32_PREFIX)gcc
*_GCC44_IA32_ASLPP_PATH           = DEF(GCC44_IA32_PREFIX)gcc
*_GCC44_IA32_RC_PATH              = DEF(GCC44_IA32_PREFIX)objcopy

*_GCC44_IA32_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m32
*_GCC44_IA32_ASLDLINK_FLAGS       = DEF(GCC44_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_i386
*_GCC44_IA32_ASM_FLAGS            = DEF(GCC44_ASM_FLAGS) -m32 --32 -march=i386
*_GCC44_IA32_DLINK_FLAGS          = DEF(GCC44_IA32_X64_DLINK_FLAGS) -Wl,-m,elf_i386,--oformat=elf32-i386
*_GCC44_IA32_DLINK2_FLAGS         = DEF(GCC44_IA32_DLINK2_FLAGS)
*_GCC44_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_GCC44_IA32_OBJCOPY_FLAGS        = 
*_GCC44_IA32_NASM_FLAGS           = -f elf32

  DEBUG_GCC44_IA32_CC_FLAGS       = DEF(GCC44_IA32_CC_FLAGS) -Os
RELEASE_GCC44_IA32_CC_FLAGS       = DEF(GCC44_IA32_CC_FLAGS) -Os
  NOOPT_GCC44_IA32_CC_FLAGS       = DEF(GCC44_IA32_CC_FLAGS) -O0

##################
# GCC44 X64 definitions
##################
*_GCC44_X64_OBJCOPY_PATH         = DEF(GCC44_X64_PREFIX)objcopy
*_GCC44_X64_CC_PATH              = DEF(GCC44_X64_PREFIX)gcc
*_GCC44_X64_SLINK_PATH           = DEF(GCC44_X64_PREFIX)ar
*_GCC44_X64_DLINK_PATH           = DEF(GCC44_X64_PREFIX)gcc
*_GCC44_X64_ASLDLINK_PATH        = DEF(GCC44_X64_PREFIX)gcc
*_GCC44_X64_ASM_PATH             = DEF(GCC44_X64_PREFIX)gcc
*_GCC44_X64_PP_PATH              = DEF(GCC44_X64_PREFIX)gcc
*_GCC44_X64_VFRPP_PATH           = DEF(GCC44_X64_PREFIX)gcc
*_GCC44_X64_ASLCC_PATH           = DEF(GCC44_X64_PREFIX)gcc
*_GCC44_X64_ASLPP_PATH           = DEF(GCC44_X64_PREFIX)gcc
*_GCC44_X64_RC_PATH              = DEF(GCC44_X64_PREFIX)objcopy

*_GCC44_X64_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m64
*_GCC44_X64_ASLDLINK_FLAGS       = DEF(GCC44_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_x86_64
*_GCC44_X64_ASM_FLAGS            = DEF(GCC44_ASM_FLAGS) -m64 --64 -melf_x86_64
*_GCC44_X64_DLINK_FLAGS          = DEF(GCC44_X64_DLINK_FLAGS)
*_GCC44_X64_DLINK2_FLAGS         = DEF(GCC44_X64_DLINK2_FLAGS)
*_GCC44_X64_RC_FLAGS             = DEF(GCC_X64_RC_FLAGS)
*_GCC44_X64_OBJCOPY_FLAGS        = 
*_GCC44_X64_NASM_FLAGS           = -f elf64

  DEBUG_GCC44_X64_CC_FLAGS       = DEF(GCC44_X64_CC_FLAGS) -Os
RELEASE_GCC44_X64_CC_FLAGS       = DEF(GCC44_X64_CC_FLAGS) -Os
  NOOPT_GCC44_X64_CC_FLAGS       = DEF(GCC44_X64_CC_FLAGS) -O0

####################################################################################
#
# GCC 4.5 - This configuration is used to compile under Linux to produce
#           PE/COFF binaries using GCC 4.5.
#
####################################################################################
*_GCC45_*_*_FAMILY               = GCC

*_GCC45_*_MAKE_PATH                    = DEF(GCC45_IA32_PREFIX)make
*_GCC45_*_*_DLL                        = ENV(GCC45_DLL)
*_GCC45_*_ASL_PATH                     = DEF(UNIX_IASL_BIN)

*_GCC45_*_PP_FLAGS                     = DEF(GCC_PP_FLAGS)
*_GCC45_*_ASLPP_FLAGS                  = DEF(GCC_ASLPP_FLAGS)
*_GCC45_*_ASLCC_FLAGS                  = DEF(GCC_ASLCC_FLAGS)
*_GCC45_*_VFRPP_FLAGS                  = DEF(GCC_VFRPP_FLAGS)
*_GCC45_*_APP_FLAGS                    =
*_GCC45_*_ASL_FLAGS                    = DEF(IASL_FLAGS)
*_GCC45_*_ASL_OUTFLAGS                 = DEF(IASL_OUTFLAGS)

##################
# GCC45 IA32 definitions
##################
*_GCC45_IA32_OBJCOPY_PATH         = DEF(GCC45_IA32_PREFIX)objcopy
*_GCC45_IA32_CC_PATH              = DEF(GCC45_IA32_PREFIX)gcc
*_GCC45_IA32_SLINK_PATH           = DEF(GCC45_IA32_PREFIX)ar
*_GCC45_IA32_DLINK_PATH           = DEF(GCC45_IA32_PREFIX)gcc
*_GCC45_IA32_ASLDLINK_PATH        = DEF(GCC45_IA32_PREFIX)gcc
*_GCC45_IA32_ASM_PATH             = DEF(GCC45_IA32_PREFIX)gcc
*_GCC45_IA32_PP_PATH              = DEF(GCC45_IA32_PREFIX)gcc
*_GCC45_IA32_VFRPP_PATH           = DEF(GCC45_IA32_PREFIX)gcc
*_GCC45_IA32_ASLCC_PATH           = DEF(GCC45_IA32_PREFIX)gcc
*_GCC45_IA32_ASLPP_PATH           = DEF(GCC45_IA32_PREFIX)gcc
*_GCC45_IA32_RC_PATH              = DEF(GCC45_IA32_PREFIX)objcopy

*_GCC45_IA32_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m32
*_GCC45_IA32_ASLDLINK_FLAGS       = DEF(GCC45_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_i386
*_GCC45_IA32_ASM_FLAGS            = DEF(GCC45_ASM_FLAGS) -m32 --32 -march=i386
*_GCC45_IA32_DLINK_FLAGS          = DEF(GCC45_IA32_X64_DLINK_FLAGS) -Wl,-m,elf_i386,--oformat=elf32-i386
*_GCC45_IA32_DLINK2_FLAGS         = DEF(GCC45_IA32_DLINK2_FLAGS)
*_GCC45_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_GCC45_IA32_OBJCOPY_FLAGS        = 
*_GCC45_IA32_NASM_FLAGS           = -f elf32

  DEBUG_GCC45_IA32_CC_FLAGS       = DEF(GCC45_IA32_CC_FLAGS) -Os
RELEASE_GCC45_IA32_CC_FLAGS       = DEF(GCC45_IA32_CC_FLAGS) -Os
  NOOPT_GCC45_IA32_CC_FLAGS       = DEF(GCC45_IA32_CC_FLAGS) -O0

##################
# GCC45 X64 definitions
##################
*_GCC45_X64_OBJCOPY_PATH         = DEF(GCC45_X64_PREFIX)objcopy
*_GCC45_X64_CC_PATH              = DEF(GCC45_X64_PREFIX)gcc
*_GCC45_X64_SLINK_PATH           = DEF(GCC45_X64_PREFIX)ar
*_GCC45_X64_DLINK_PATH           = DEF(GCC45_X64_PREFIX)gcc
*_GCC45_X64_ASLDLINK_PATH        = DEF(GCC45_X64_PREFIX)gcc
*_GCC45_X64_ASM_PATH             = DEF(GCC45_X64_PREFIX)gcc
*_GCC45_X64_PP_PATH              = DEF(GCC45_X64_PREFIX)gcc
*_GCC45_X64_VFRPP_PATH           = DEF(GCC45_X64_PREFIX)gcc
*_GCC45_X64_ASLCC_PATH           = DEF(GCC45_X64_PREFIX)gcc
*_GCC45_X64_ASLPP_PATH           = DEF(GCC45_X64_PREFIX)gcc
*_GCC45_X64_RC_PATH              = DEF(GCC45_X64_PREFIX)objcopy

*_GCC45_X64_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m64
*_GCC45_X64_ASLDLINK_FLAGS       = DEF(GCC45_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_x86_64
*_GCC45_X64_ASM_FLAGS            = DEF(GCC45_ASM_FLAGS) -m64 --64 -melf_x86_64
*_GCC45_X64_DLINK_FLAGS          = DEF(GCC45_X64_DLINK_FLAGS)
*_GCC45_X64_DLINK2_FLAGS         = DEF(GCC45_X64_DLINK2_FLAGS)
*_GCC45_X64_RC_FLAGS             = DEF(GCC_X64_RC_FLAGS)
*_GCC45_X64_OBJCOPY_FLAGS        = 
*_GCC45_X64_NASM_FLAGS           = -f elf64

  DEBUG_GCC45_X64_CC_FLAGS       = DEF(GCC45_X64_CC_FLAGS) -Os
RELEASE_GCC45_X64_CC_FLAGS       = DEF(GCC45_X64_CC_FLAGS) -Os
  NOOPT_GCC45_X64_CC_FLAGS       = DEF(GCC45_X64_CC_FLAGS) -O0

####################################################################################
#
# GCC 4.6 - This configuration is used to compile under Linux to produce
#           PE/COFF binaries using GCC 4.6.
#
####################################################################################
*_GCC46_*_*_FAMILY               = GCC

*_GCC46_*_MAKE_PATH                    = DEF(GCC46_IA32_PREFIX)make
*_GCC46_*_*_DLL                        = ENV(GCC46_DLL)
*_GCC46_*_ASL_PATH                     = DEF(UNIX_IASL_BIN)

*_GCC46_*_PP_FLAGS                     = DEF(GCC_PP_FLAGS)
*_GCC46_*_ASLPP_FLAGS                  = DEF(GCC_ASLPP_FLAGS)
*_GCC46_*_ASLCC_FLAGS                  = DEF(GCC_ASLCC_FLAGS)
*_GCC46_*_VFRPP_FLAGS                  = DEF(GCC_VFRPP_FLAGS)
*_GCC46_*_APP_FLAGS                    =
*_GCC46_*_ASL_FLAGS                    = DEF(IASL_FLAGS)
*_GCC46_*_ASL_OUTFLAGS                 = DEF(IASL_OUTFLAGS)

##################
# GCC46 IA32 definitions
##################
*_GCC46_IA32_OBJCOPY_PATH         = DEF(GCC46_IA32_PREFIX)objcopy
*_GCC46_IA32_CC_PATH              = DEF(GCC46_IA32_PREFIX)gcc
*_GCC46_IA32_SLINK_PATH           = DEF(GCC46_IA32_PREFIX)ar
*_GCC46_IA32_DLINK_PATH           = DEF(GCC46_IA32_PREFIX)gcc
*_GCC46_IA32_ASLDLINK_PATH        = DEF(GCC46_IA32_PREFIX)gcc
*_GCC46_IA32_ASM_PATH             = DEF(GCC46_IA32_PREFIX)gcc
*_GCC46_IA32_PP_PATH              = DEF(GCC46_IA32_PREFIX)gcc
*_GCC46_IA32_VFRPP_PATH           = DEF(GCC46_IA32_PREFIX)gcc
*_GCC46_IA32_ASLCC_PATH           = DEF(GCC46_IA32_PREFIX)gcc
*_GCC46_IA32_ASLPP_PATH           = DEF(GCC46_IA32_PREFIX)gcc
*_GCC46_IA32_RC_PATH              = DEF(GCC46_IA32_PREFIX)objcopy

*_GCC46_IA32_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m32
*_GCC46_IA32_ASLDLINK_FLAGS       = DEF(GCC46_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_i386
*_GCC46_IA32_ASM_FLAGS            = DEF(GCC46_ASM_FLAGS) -m32 -march=i386
*_GCC46_IA32_DLINK_FLAGS          = DEF(GCC46_IA32_X64_DLINK_FLAGS) -Wl,-m,elf_i386,--oformat=elf32-i386
*_GCC46_IA32_DLINK2_FLAGS         = DEF(GCC46_IA32_DLINK2_FLAGS)
*_GCC46_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_GCC46_IA32_OBJCOPY_FLAGS        = 
*_GCC46_IA32_NASM_FLAGS           = -f elf32

  DEBUG_GCC46_IA32_CC_FLAGS       = DEF(GCC46_IA32_CC_FLAGS) -Os
RELEASE_GCC46_IA32_CC_FLAGS       = DEF(GCC46_IA32_CC_FLAGS) -Os -Wno-unused-but-set-variable
  NOOPT_GCC46_IA32_CC_FLAGS       = DEF(GCC46_IA32_CC_FLAGS) -O0

##################
# GCC46 X64 definitions
##################
*_GCC46_X64_OBJCOPY_PATH         = DEF(GCC46_X64_PREFIX)objcopy
*_GCC46_X64_CC_PATH              = DEF(GCC46_X64_PREFIX)gcc
*_GCC46_X64_SLINK_PATH           = DEF(GCC46_X64_PREFIX)ar
*_GCC46_X64_DLINK_PATH           = DEF(GCC46_X64_PREFIX)gcc
*_GCC46_X64_ASLDLINK_PATH        = DEF(GCC46_X64_PREFIX)gcc
*_GCC46_X64_ASM_PATH             = DEF(GCC46_X64_PREFIX)gcc
*_GCC46_X64_PP_PATH              = DEF(GCC46_X64_PREFIX)gcc
*_GCC46_X64_VFRPP_PATH           = DEF(GCC46_X64_PREFIX)gcc
*_GCC46_X64_ASLCC_PATH           = DEF(GCC46_X64_PREFIX)gcc
*_GCC46_X64_ASLPP_PATH           = DEF(GCC46_X64_PREFIX)gcc
*_GCC46_X64_RC_PATH              = DEF(GCC46_X64_PREFIX)objcopy

*_GCC46_X64_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m64
*_GCC46_X64_ASLDLINK_FLAGS       = DEF(GCC46_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_x86_64
*_GCC46_X64_ASM_FLAGS            = DEF(GCC46_ASM_FLAGS) -m64 -melf_x86_64
*_GCC46_X64_DLINK_FLAGS          = DEF(GCC46_X64_DLINK_FLAGS)
*_GCC46_X64_DLINK2_FLAGS         = DEF(GCC46_X64_DLINK2_FLAGS)
*_GCC46_X64_RC_FLAGS             = DEF(GCC_X64_RC_FLAGS)
*_GCC46_X64_OBJCOPY_FLAGS        = 
*_GCC46_X64_NASM_FLAGS           = -f elf64

  DEBUG_GCC46_X64_CC_FLAGS       = DEF(GCC46_X64_CC_FLAGS) -Os
RELEASE_GCC46_X64_CC_FLAGS       = DEF(GCC46_X64_CC_FLAGS) -Os -Wno-unused-but-set-variable
  NOOPT_GCC46_X64_CC_FLAGS       = DEF(GCC46_X64_CC_FLAGS) -O0

##################
# GCC46 ARM definitions
##################
*_GCC46_ARM_OBJCOPY_PATH         = echo
*_GCC46_ARM_CC_PATH              = ENV(GCC46_ARM_PREFIX)gcc
*_GCC46_ARM_SLINK_PATH           = ENV(GCC46_ARM_PREFIX)ar
*_GCC46_ARM_DLINK_PATH           = ENV(GCC46_ARM_PREFIX)gcc
*_GCC46_ARM_ASLDLINK_PATH        = ENV(GCC46_ARM_PREFIX)gcc
*_GCC46_ARM_ASM_PATH             = ENV(GCC46_ARM_PREFIX)gcc
*_GCC46_ARM_PP_PATH              = ENV(GCC46_ARM_PREFIX)gcc
*_GCC46_ARM_VFRPP_PATH           = ENV(GCC46_ARM_PREFIX)gcc
*_GCC46_ARM_ASLCC_PATH           = ENV(GCC46_ARM_PREFIX)gcc
*_GCC46_ARM_ASLPP_PATH           = ENV(GCC46_ARM_PREFIX)gcc
*_GCC46_ARM_RC_PATH              = ENV(GCC46_ARM_PREFIX)objcopy

*_GCC46_ARM_ARCHCC_FLAGS         =
*_GCC46_ARM_PLATFORM_FLAGS       = -march=armv7-a

*_GCC46_ARM_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS)
*_GCC46_ARM_ASLDLINK_FLAGS       = DEF(GCC46_ARM_ASLDLINK_FLAGS)
*_GCC46_ARM_ASM_FLAGS            = DEF(GCC46_ARM_ASM_FLAGS)
*_GCC46_ARM_DLINK_FLAGS          = DEF(GCC46_ARM_DLINK_FLAGS)
*_GCC46_ARM_DLINK2_FLAGS         = DEF(GCC46_ARM_DLINK2_FLAGS)
*_GCC46_ARM_PLATFORM_FLAGS       = -march=armv7-a
*_GCC46_ARM_PP_FLAGS             = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_GCC46_ARM_RC_FLAGS             = DEF(GCC_ARM_RC_FLAGS)
*_GCC46_ARM_VFRPP_FLAGS          = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)
*_GCC46_ARM_CC_XIPFLAGS          = DEF(GCC46_ARM_CC_XIPFLAGS)

  DEBUG_GCC46_ARM_CC_FLAGS       = DEF(GCC46_ARM_CC_FLAGS) -O0
RELEASE_GCC46_ARM_CC_FLAGS       = DEF(GCC46_ARM_CC_FLAGS) -Wno-unused-but-set-variable
  NOOPT_GCC46_ARM_CC_FLAGS       = DEF(GCC46_ARM_CC_FLAGS) -O0

####################################################################################
#
# GCC 4.7 - This configuration is used to compile under Linux to produce
#           PE/COFF binaries using GCC 4.7.
#
####################################################################################
*_GCC47_*_*_FAMILY               = GCC

*_GCC47_*_MAKE_PATH                    = DEF(GCC47_IA32_PREFIX)make
*_GCC47_*_*_DLL                        = ENV(GCC47_DLL)
*_GCC47_*_ASL_PATH                     = DEF(UNIX_IASL_BIN)

*_GCC47_*_PP_FLAGS                     = DEF(GCC_PP_FLAGS)
*_GCC47_*_ASLPP_FLAGS                  = DEF(GCC_ASLPP_FLAGS)
*_GCC47_*_ASLCC_FLAGS                  = DEF(GCC_ASLCC_FLAGS)
*_GCC47_*_VFRPP_FLAGS                  = DEF(GCC_VFRPP_FLAGS)
*_GCC47_*_APP_FLAGS                    =
*_GCC47_*_ASL_FLAGS                    = DEF(IASL_FLAGS)
*_GCC47_*_ASL_OUTFLAGS                 = DEF(IASL_OUTFLAGS)

##################
# GCC47 IA32 definitions
##################
*_GCC47_IA32_OBJCOPY_PATH         = DEF(GCC47_IA32_PREFIX)objcopy
*_GCC47_IA32_CC_PATH              = DEF(GCC47_IA32_PREFIX)gcc
*_GCC47_IA32_SLINK_PATH           = DEF(GCC47_IA32_PREFIX)ar
*_GCC47_IA32_DLINK_PATH           = DEF(GCC47_IA32_PREFIX)gcc
*_GCC47_IA32_ASLDLINK_PATH        = DEF(GCC47_IA32_PREFIX)gcc
*_GCC47_IA32_ASM_PATH             = DEF(GCC47_IA32_PREFIX)gcc
*_GCC47_IA32_PP_PATH              = DEF(GCC47_IA32_PREFIX)gcc
*_GCC47_IA32_VFRPP_PATH           = DEF(GCC47_IA32_PREFIX)gcc
*_GCC47_IA32_ASLCC_PATH           = DEF(GCC47_IA32_PREFIX)gcc
*_GCC47_IA32_ASLPP_PATH           = DEF(GCC47_IA32_PREFIX)gcc
*_GCC47_IA32_RC_PATH              = DEF(GCC47_IA32_PREFIX)objcopy

*_GCC47_IA32_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m32
*_GCC47_IA32_ASLDLINK_FLAGS       = DEF(GCC47_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_i386
*_GCC47_IA32_ASM_FLAGS            = DEF(GCC47_ASM_FLAGS) -m32 -march=i386
*_GCC47_IA32_DLINK_FLAGS          = DEF(GCC47_IA32_X64_DLINK_FLAGS) -Wl,-m,elf_i386,--oformat=elf32-i386
*_GCC47_IA32_DLINK2_FLAGS         = DEF(GCC47_IA32_DLINK2_FLAGS)
*_GCC47_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_GCC47_IA32_OBJCOPY_FLAGS        = 
*_GCC47_IA32_NASM_FLAGS           = -f elf32

  DEBUG_GCC47_IA32_CC_FLAGS       = DEF(GCC47_IA32_CC_FLAGS) -Os
RELEASE_GCC47_IA32_CC_FLAGS       = DEF(GCC47_IA32_CC_FLAGS) -Os -Wno-unused-but-set-variable
  NOOPT_GCC47_IA32_CC_FLAGS       = DEF(GCC47_IA32_CC_FLAGS) -O0

##################
# GCC47 X64 definitions
##################
*_GCC47_X64_OBJCOPY_PATH         = DEF(GCC47_X64_PREFIX)objcopy
*_GCC47_X64_CC_PATH              = DEF(GCC47_X64_PREFIX)gcc
*_GCC47_X64_SLINK_PATH           = DEF(GCC47_X64_PREFIX)ar
*_GCC47_X64_DLINK_PATH           = DEF(GCC47_X64_PREFIX)gcc
*_GCC47_X64_ASLDLINK_PATH        = DEF(GCC47_X64_PREFIX)gcc
*_GCC47_X64_ASM_PATH             = DEF(GCC47_X64_PREFIX)gcc
*_GCC47_X64_PP_PATH              = DEF(GCC47_X64_PREFIX)gcc
*_GCC47_X64_VFRPP_PATH           = DEF(GCC47_X64_PREFIX)gcc
*_GCC47_X64_ASLCC_PATH           = DEF(GCC47_X64_PREFIX)gcc
*_GCC47_X64_ASLPP_PATH           = DEF(GCC47_X64_PREFIX)gcc
*_GCC47_X64_RC_PATH              = DEF(GCC47_X64_PREFIX)objcopy

*_GCC47_X64_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m64
*_GCC47_X64_ASLDLINK_FLAGS       = DEF(GCC47_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_x86_64
*_GCC47_X64_ASM_FLAGS            = DEF(GCC47_ASM_FLAGS) -m64
*_GCC47_X64_DLINK_FLAGS          = DEF(GCC47_X64_DLINK_FLAGS)
*_GCC47_X64_DLINK2_FLAGS         = DEF(GCC47_X64_DLINK2_FLAGS)
*_GCC47_X64_RC_FLAGS             = DEF(GCC_X64_RC_FLAGS)
*_GCC47_X64_OBJCOPY_FLAGS        = 
*_GCC47_X64_NASM_FLAGS           = -f elf64

  DEBUG_GCC47_X64_CC_FLAGS       = DEF(GCC47_X64_CC_FLAGS) -Os
RELEASE_GCC47_X64_CC_FLAGS       = DEF(GCC47_X64_CC_FLAGS) -Os -Wno-unused-but-set-variable
  NOOPT_GCC47_X64_CC_FLAGS       = DEF(GCC47_X64_CC_FLAGS) -O0

##################
# GCC47 ARM definitions
##################
*_GCC47_ARM_CC_PATH              = ENV(GCC47_ARM_PREFIX)gcc
*_GCC47_ARM_SLINK_PATH           = ENV(GCC47_ARM_PREFIX)ar
*_GCC47_ARM_DLINK_PATH           = ENV(GCC47_ARM_PREFIX)gcc
*_GCC47_ARM_ASLDLINK_PATH        = ENV(GCC47_ARM_PREFIX)gcc
*_GCC47_ARM_ASM_PATH             = ENV(GCC47_ARM_PREFIX)gcc
*_GCC47_ARM_PP_PATH              = ENV(GCC47_ARM_PREFIX)gcc
*_GCC47_ARM_VFRPP_PATH           = ENV(GCC47_ARM_PREFIX)gcc
*_GCC47_ARM_ASLCC_PATH           = ENV(GCC47_ARM_PREFIX)gcc
*_GCC47_ARM_ASLPP_PATH           = ENV(GCC47_ARM_PREFIX)gcc
*_GCC47_ARM_RC_PATH              = ENV(GCC47_ARM_PREFIX)objcopy

*_GCC47_ARM_ARCHCC_FLAGS         =
*_GCC47_ARM_PLATFORM_FLAGS       = -march=armv7-a

*_GCC47_ARM_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS)
*_GCC47_ARM_ASLDLINK_FLAGS       = DEF(GCC47_ARM_ASLDLINK_FLAGS)
*_GCC47_ARM_ASM_FLAGS            = DEF(GCC47_ARM_ASM_FLAGS)
*_GCC47_ARM_DLINK_FLAGS          = DEF(GCC47_ARM_DLINK_FLAGS)
*_GCC47_ARM_DLINK2_FLAGS         = DEF(GCC47_ARM_DLINK2_FLAGS)
*_GCC47_ARM_PLATFORM_FLAGS       = -march=armv7-a
*_GCC47_ARM_PP_FLAGS             = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_GCC47_ARM_RC_FLAGS             = DEF(GCC_ARM_RC_FLAGS)
*_GCC47_ARM_VFRPP_FLAGS          = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)
*_GCC47_ARM_CC_XIPFLAGS          = DEF(GCC47_ARM_CC_XIPFLAGS)

  DEBUG_GCC47_ARM_CC_FLAGS       = DEF(GCC47_ARM_CC_FLAGS) -O0
RELEASE_GCC47_ARM_CC_FLAGS       = DEF(GCC47_ARM_CC_FLAGS) -Wno-unused-but-set-variable
  NOOPT_GCC47_ARM_CC_FLAGS       = DEF(GCC47_ARM_CC_FLAGS) -O0

##################
# GCC47 AARCH64 definitions
##################
*_GCC47_AARCH64_CC_PATH          = ENV(GCC47_AARCH64_PREFIX)gcc
*_GCC47_AARCH64_SLINK_PATH       = ENV(GCC47_AARCH64_PREFIX)ar
*_GCC47_AARCH64_DLINK_PATH       = ENV(GCC47_AARCH64_PREFIX)gcc
*_GCC47_AARCH64_ASLDLINK_PATH    = ENV(GCC47_AARCH64_PREFIX)gcc
*_GCC47_AARCH64_ASM_PATH         = ENV(GCC47_AARCH64_PREFIX)gcc
*_GCC47_AARCH64_PP_PATH          = ENV(GCC47_AARCH64_PREFIX)gcc
*_GCC47_AARCH64_VFRPP_PATH       = ENV(GCC47_AARCH64_PREFIX)gcc
*_GCC47_AARCH64_ASLCC_PATH       = ENV(GCC47_AARCH64_PREFIX)gcc
*_GCC47_AARCH64_ASLPP_PATH       = ENV(GCC47_AARCH64_PREFIX)gcc
*_GCC47_AARCH64_RC_PATH          = ENV(GCC47_AARCH64_PREFIX)objcopy

*_GCC47_AARCH64_ASLCC_FLAGS      = DEF(GCC_ASLCC_FLAGS)
*_GCC47_AARCH64_ASLDLINK_FLAGS   = DEF(GCC47_AARCH64_ASLDLINK_FLAGS)
*_GCC47_AARCH64_ASM_FLAGS        = DEF(GCC47_AARCH64_ASM_FLAGS)
*_GCC47_AARCH64_DLINK_FLAGS      = DEF(GCC47_AARCH64_DLINK_FLAGS)
*_GCC47_AARCH64_DLINK2_FLAGS     = DEF(GCC47_AARCH64_DLINK2_FLAGS)
*_GCC47_AARCH64_PLATFORM_FLAGS   =
*_GCC47_AARCH64_PP_FLAGS         = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_GCC47_AARCH64_RC_FLAGS         = DEF(GCC_AARCH64_RC_FLAGS)
*_GCC47_AARCH64_VFRPP_FLAGS      = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)
*_GCC47_AARCH64_CC_XIPFLAGS      = DEF(GCC47_AARCH64_CC_XIPFLAGS)

  DEBUG_GCC47_AARCH64_CC_FLAGS   = DEF(GCC47_AARCH64_CC_FLAGS) -O0
RELEASE_GCC47_AARCH64_CC_FLAGS   = DEF(GCC47_AARCH64_CC_FLAGS) -Wno-unused-but-set-variable -fomit-frame-pointer
  NOOPT_GCC47_AARCH64_CC_FLAGS   = DEF(GCC47_AARCH64_CC_FLAGS) -O0

####################################################################################
#
# GCC 4.8 - This configuration is used to compile under Linux to produce
#           PE/COFF binaries using GCC 4.8.
#
####################################################################################
*_GCC48_*_*_FAMILY               = GCC

*_GCC48_*_MAKE_PATH                    = DEF(GCC48_IA32_PREFIX)make
*_GCC48_*_*_DLL                        = ENV(GCC48_DLL)
*_GCC48_*_ASL_PATH                     = DEF(UNIX_IASL_BIN)

*_GCC48_*_PP_FLAGS                     = DEF(GCC_PP_FLAGS)
*_GCC48_*_ASLPP_FLAGS                  = DEF(GCC_ASLPP_FLAGS)
*_GCC48_*_ASLCC_FLAGS                  = DEF(GCC_ASLCC_FLAGS)
*_GCC48_*_VFRPP_FLAGS                  = DEF(GCC_VFRPP_FLAGS)
*_GCC48_*_APP_FLAGS                    =
*_GCC48_*_ASL_FLAGS                    = DEF(IASL_FLAGS)
*_GCC48_*_ASL_OUTFLAGS                 = DEF(IASL_OUTFLAGS)

##################
# GCC48 IA32 definitions
##################
*_GCC48_IA32_OBJCOPY_PATH         = DEF(GCC48_IA32_PREFIX)objcopy
*_GCC48_IA32_CC_PATH              = DEF(GCC48_IA32_PREFIX)gcc
*_GCC48_IA32_SLINK_PATH           = DEF(GCC48_IA32_PREFIX)ar
*_GCC48_IA32_DLINK_PATH           = DEF(GCC48_IA32_PREFIX)gcc
*_GCC48_IA32_ASLDLINK_PATH        = DEF(GCC48_IA32_PREFIX)gcc
*_GCC48_IA32_ASM_PATH             = DEF(GCC48_IA32_PREFIX)gcc
*_GCC48_IA32_PP_PATH              = DEF(GCC48_IA32_PREFIX)gcc
*_GCC48_IA32_VFRPP_PATH           = DEF(GCC48_IA32_PREFIX)gcc
*_GCC48_IA32_ASLCC_PATH           = DEF(GCC48_IA32_PREFIX)gcc
*_GCC48_IA32_ASLPP_PATH           = DEF(GCC48_IA32_PREFIX)gcc
*_GCC48_IA32_RC_PATH              = DEF(GCC48_IA32_PREFIX)objcopy

*_GCC48_IA32_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m32
*_GCC48_IA32_ASLDLINK_FLAGS       = DEF(GCC48_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_i386
*_GCC48_IA32_ASM_FLAGS            = DEF(GCC48_ASM_FLAGS) -m32 -march=i386
*_GCC48_IA32_DLINK_FLAGS          = DEF(GCC48_IA32_X64_DLINK_FLAGS) -Wl,-m,elf_i386,--oformat=elf32-i386
*_GCC48_IA32_DLINK2_FLAGS         = DEF(GCC48_IA32_DLINK2_FLAGS)
*_GCC48_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_GCC48_IA32_OBJCOPY_FLAGS        = 
*_GCC48_IA32_NASM_FLAGS           = -f elf32

  DEBUG_GCC48_IA32_CC_FLAGS       = DEF(GCC48_IA32_CC_FLAGS) -Os
RELEASE_GCC48_IA32_CC_FLAGS       = DEF(GCC48_IA32_CC_FLAGS) -Os -Wno-unused-but-set-variable
  NOOPT_GCC48_IA32_CC_FLAGS       = DEF(GCC48_IA32_CC_FLAGS) -O0

##################
# GCC48 X64 definitions
##################
*_GCC48_X64_OBJCOPY_PATH         = DEF(GCC48_X64_PREFIX)objcopy
*_GCC48_X64_CC_PATH              = DEF(GCC48_X64_PREFIX)gcc
*_GCC48_X64_SLINK_PATH           = DEF(GCC48_X64_PREFIX)ar
*_GCC48_X64_DLINK_PATH           = DEF(GCC48_X64_PREFIX)gcc
*_GCC48_X64_ASLDLINK_PATH        = DEF(GCC48_X64_PREFIX)gcc
*_GCC48_X64_ASM_PATH             = DEF(GCC48_X64_PREFIX)gcc
*_GCC48_X64_PP_PATH              = DEF(GCC48_X64_PREFIX)gcc
*_GCC48_X64_VFRPP_PATH           = DEF(GCC48_X64_PREFIX)gcc
*_GCC48_X64_ASLCC_PATH           = DEF(GCC48_X64_PREFIX)gcc
*_GCC48_X64_ASLPP_PATH           = DEF(GCC48_X64_PREFIX)gcc
*_GCC48_X64_RC_PATH              = DEF(GCC48_X64_PREFIX)objcopy

*_GCC48_X64_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m64
*_GCC48_X64_ASLDLINK_FLAGS       = DEF(GCC48_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_x86_64
*_GCC48_X64_ASM_FLAGS            = DEF(GCC48_ASM_FLAGS) -m64
*_GCC48_X64_DLINK_FLAGS          = DEF(GCC48_X64_DLINK_FLAGS)
*_GCC48_X64_DLINK2_FLAGS         = DEF(GCC48_X64_DLINK2_FLAGS)
*_GCC48_X64_RC_FLAGS             = DEF(GCC_X64_RC_FLAGS)
*_GCC48_X64_OBJCOPY_FLAGS        = 
*_GCC48_X64_NASM_FLAGS           = -f elf64

  DEBUG_GCC48_X64_CC_FLAGS       = DEF(GCC48_X64_CC_FLAGS) -Os
RELEASE_GCC48_X64_CC_FLAGS       = DEF(GCC48_X64_CC_FLAGS) -Os -Wno-unused-but-set-variable
  NOOPT_GCC48_X64_CC_FLAGS       = DEF(GCC48_X64_CC_FLAGS) -O0

##################
# GCC48 ARM definitions
##################
*_GCC48_ARM_CC_PATH              = ENV(GCC48_ARM_PREFIX)gcc
*_GCC48_ARM_SLINK_PATH           = ENV(GCC48_ARM_PREFIX)ar
*_GCC48_ARM_DLINK_PATH           = ENV(GCC48_ARM_PREFIX)gcc
*_GCC48_ARM_ASLDLINK_PATH        = ENV(GCC48_ARM_PREFIX)gcc
*_GCC48_ARM_ASM_PATH             = ENV(GCC48_ARM_PREFIX)gcc
*_GCC48_ARM_PP_PATH              = ENV(GCC48_ARM_PREFIX)gcc
*_GCC48_ARM_VFRPP_PATH           = ENV(GCC48_ARM_PREFIX)gcc
*_GCC48_ARM_ASLCC_PATH           = ENV(GCC48_ARM_PREFIX)gcc
*_GCC48_ARM_ASLPP_PATH           = ENV(GCC48_ARM_PREFIX)gcc
*_GCC48_ARM_RC_PATH              = ENV(GCC48_ARM_PREFIX)objcopy

*_GCC48_ARM_ARCHCC_FLAGS         = -mthumb
*_GCC48_ARM_PLATFORM_FLAGS       = -march=armv7-a

*_GCC48_ARM_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS)
*_GCC48_ARM_ASLDLINK_FLAGS       = DEF(GCC48_ARM_ASLDLINK_FLAGS)
*_GCC48_ARM_ASM_FLAGS            = DEF(GCC48_ARM_ASM_FLAGS)
*_GCC48_ARM_DLINK_FLAGS          = DEF(GCC48_ARM_DLINK_FLAGS)
*_GCC48_ARM_DLINK2_FLAGS         = DEF(GCC48_ARM_DLINK2_FLAGS)
*_GCC48_ARM_PLATFORM_FLAGS       = -march=armv7-a
*_GCC48_ARM_PP_FLAGS             = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_GCC48_ARM_RC_FLAGS             = DEF(GCC_ARM_RC_FLAGS)
*_GCC48_ARM_VFRPP_FLAGS          = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)
*_GCC48_ARM_CC_XIPFLAGS          = DEF(GCC48_ARM_CC_XIPFLAGS)

  DEBUG_GCC48_ARM_CC_FLAGS       = DEF(GCC48_ARM_CC_FLAGS) -O0
RELEASE_GCC48_ARM_CC_FLAGS       = DEF(GCC48_ARM_CC_FLAGS) -Wno-unused-but-set-variable
  NOOPT_GCC48_ARM_CC_FLAGS       = DEF(GCC48_ARM_CC_FLAGS) -O0

##################
# GCC48 AARCH64 definitions
##################
*_GCC48_AARCH64_CC_PATH          = ENV(GCC48_AARCH64_PREFIX)gcc
*_GCC48_AARCH64_SLINK_PATH       = ENV(GCC48_AARCH64_PREFIX)ar
*_GCC48_AARCH64_DLINK_PATH       = ENV(GCC48_AARCH64_PREFIX)gcc
*_GCC48_AARCH64_ASLDLINK_PATH    = ENV(GCC48_AARCH64_PREFIX)gcc
*_GCC48_AARCH64_ASM_PATH         = ENV(GCC48_AARCH64_PREFIX)gcc
*_GCC48_AARCH64_PP_PATH          = ENV(GCC48_AARCH64_PREFIX)gcc
*_GCC48_AARCH64_VFRPP_PATH       = ENV(GCC48_AARCH64_PREFIX)gcc
*_GCC48_AARCH64_ASLCC_PATH       = ENV(GCC48_AARCH64_PREFIX)gcc
*_GCC48_AARCH64_ASLPP_PATH       = ENV(GCC48_AARCH64_PREFIX)gcc
*_GCC48_AARCH64_RC_PATH          = ENV(GCC48_AARCH64_PREFIX)objcopy

*_GCC48_AARCH64_ASLCC_FLAGS      = DEF(GCC_ASLCC_FLAGS)
*_GCC48_AARCH64_ASLDLINK_FLAGS   = DEF(GCC48_AARCH64_ASLDLINK_FLAGS)
*_GCC48_AARCH64_ASM_FLAGS        = DEF(GCC48_AARCH64_ASM_FLAGS)
*_GCC48_AARCH64_DLINK_FLAGS      = DEF(GCC48_AARCH64_DLINK_FLAGS)
*_GCC48_AARCH64_DLINK2_FLAGS     = DEF(GCC48_AARCH64_DLINK2_FLAGS)
*_GCC48_AARCH64_PLATFORM_FLAGS   =
*_GCC48_AARCH64_PP_FLAGS         = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_GCC48_AARCH64_RC_FLAGS         = DEF(GCC_AARCH64_RC_FLAGS)
*_GCC48_AARCH64_VFRPP_FLAGS      = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)
*_GCC48_AARCH64_CC_XIPFLAGS      = DEF(GCC48_AARCH64_CC_XIPFLAGS)

  DEBUG_GCC48_AARCH64_CC_FLAGS   = DEF(GCC48_AARCH64_CC_FLAGS) -O0
RELEASE_GCC48_AARCH64_CC_FLAGS   = DEF(GCC48_AARCH64_CC_FLAGS) -Wno-unused-but-set-variable -fomit-frame-pointer
  NOOPT_GCC48_AARCH64_CC_FLAGS   = DEF(GCC48_AARCH64_CC_FLAGS) -O0

####################################################################################
#
# GCC 4.9 - This configuration is used to compile under Linux to produce
#           PE/COFF binaries using GCC 4.9.
#
####################################################################################
*_GCC49_*_*_FAMILY               = GCC

*_GCC49_*_MAKE_PATH                    = DEF(GCC49_IA32_PREFIX)make
*_GCC49_*_*_DLL                        = ENV(GCC49_DLL)
*_GCC49_*_ASL_PATH                     = DEF(UNIX_IASL_BIN)

*_GCC49_*_PP_FLAGS                     = DEF(GCC_PP_FLAGS)
*_GCC49_*_ASLPP_FLAGS                  = DEF(GCC_ASLPP_FLAGS)
*_GCC49_*_ASLCC_FLAGS                  = DEF(GCC_ASLCC_FLAGS)
*_GCC49_*_VFRPP_FLAGS                  = DEF(GCC_VFRPP_FLAGS)
*_GCC49_*_APP_FLAGS                    =
*_GCC49_*_ASL_FLAGS                    = DEF(IASL_FLAGS)
*_GCC49_*_ASL_OUTFLAGS                 = DEF(IASL_OUTFLAGS)

##################
# GCC49 IA32 definitions
##################
*_GCC49_IA32_OBJCOPY_PATH         = DEF(GCC49_IA32_PREFIX)objcopy
*_GCC49_IA32_CC_PATH              = DEF(GCC49_IA32_PREFIX)gcc
*_GCC49_IA32_SLINK_PATH           = DEF(GCC49_IA32_PREFIX)ar
*_GCC49_IA32_DLINK_PATH           = DEF(GCC49_IA32_PREFIX)gcc
*_GCC49_IA32_ASLDLINK_PATH        = DEF(GCC49_IA32_PREFIX)gcc
*_GCC49_IA32_ASM_PATH             = DEF(GCC49_IA32_PREFIX)gcc
*_GCC49_IA32_PP_PATH              = DEF(GCC49_IA32_PREFIX)gcc
*_GCC49_IA32_VFRPP_PATH           = DEF(GCC49_IA32_PREFIX)gcc
*_GCC49_IA32_ASLCC_PATH           = DEF(GCC49_IA32_PREFIX)gcc
*_GCC49_IA32_ASLPP_PATH           = DEF(GCC49_IA32_PREFIX)gcc
*_GCC49_IA32_RC_PATH              = DEF(GCC49_IA32_PREFIX)objcopy

*_GCC49_IA32_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m32
*_GCC49_IA32_ASLDLINK_FLAGS       = DEF(GCC49_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_i386
*_GCC49_IA32_ASM_FLAGS            = DEF(GCC49_ASM_FLAGS) -m32 -march=i386
*_GCC49_IA32_DLINK_FLAGS          = DEF(GCC49_IA32_X64_DLINK_FLAGS) -Wl,-m,elf_i386,--oformat=elf32-i386
*_GCC49_IA32_DLINK2_FLAGS         = DEF(GCC49_IA32_DLINK2_FLAGS)
*_GCC49_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_GCC49_IA32_OBJCOPY_FLAGS        = 
*_GCC49_IA32_NASM_FLAGS           = -f elf32

  DEBUG_GCC49_IA32_CC_FLAGS       = DEF(GCC49_IA32_CC_FLAGS) -Os
RELEASE_GCC49_IA32_CC_FLAGS       = DEF(GCC49_IA32_CC_FLAGS) -Os -Wno-unused-but-set-variable
  NOOPT_GCC49_IA32_CC_FLAGS       = DEF(GCC49_IA32_CC_FLAGS) -O0

##################
# GCC49 X64 definitions
##################
*_GCC49_X64_OBJCOPY_PATH         = DEF(GCC49_X64_PREFIX)objcopy
*_GCC49_X64_CC_PATH              = DEF(GCC49_X64_PREFIX)gcc
*_GCC49_X64_SLINK_PATH           = DEF(GCC49_X64_PREFIX)ar
*_GCC49_X64_DLINK_PATH           = DEF(GCC49_X64_PREFIX)gcc
*_GCC49_X64_ASLDLINK_PATH        = DEF(GCC49_X64_PREFIX)gcc
*_GCC49_X64_ASM_PATH             = DEF(GCC49_X64_PREFIX)gcc
*_GCC49_X64_PP_PATH              = DEF(GCC49_X64_PREFIX)gcc
*_GCC49_X64_VFRPP_PATH           = DEF(GCC49_X64_PREFIX)gcc
*_GCC49_X64_ASLCC_PATH           = DEF(GCC49_X64_PREFIX)gcc
*_GCC49_X64_ASLPP_PATH           = DEF(GCC49_X64_PREFIX)gcc
*_GCC49_X64_RC_PATH              = DEF(GCC49_X64_PREFIX)objcopy

*_GCC49_X64_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m64
*_GCC49_X64_ASLDLINK_FLAGS       = DEF(GCC49_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_x86_64
*_GCC49_X64_ASM_FLAGS            = DEF(GCC49_ASM_FLAGS) -m64
*_GCC49_X64_DLINK_FLAGS          = DEF(GCC49_X64_DLINK_FLAGS)
*_GCC49_X64_DLINK2_FLAGS         = DEF(GCC49_X64_DLINK2_FLAGS)
*_GCC49_X64_RC_FLAGS             = DEF(GCC_X64_RC_FLAGS)
*_GCC49_X64_OBJCOPY_FLAGS        = 
*_GCC49_X64_NASM_FLAGS           = -f elf64

  DEBUG_GCC49_X64_CC_FLAGS       = DEF(GCC49_X64_CC_FLAGS) -Os
RELEASE_GCC49_X64_CC_FLAGS       = DEF(GCC49_X64_CC_FLAGS) -Os -Wno-unused-but-set-variable
  NOOPT_GCC49_X64_CC_FLAGS       = DEF(GCC49_X64_CC_FLAGS) -O0

##################
# GCC49 ARM definitions
##################
*_GCC49_ARM_CC_PATH              = ENV(GCC49_ARM_PREFIX)gcc
*_GCC49_ARM_SLINK_PATH           = ENV(GCC49_ARM_PREFIX)ar
*_GCC49_ARM_DLINK_PATH           = ENV(GCC49_ARM_PREFIX)gcc
*_GCC49_ARM_ASLDLINK_PATH        = ENV(GCC49_ARM_PREFIX)gcc
*_GCC49_ARM_ASM_PATH             = ENV(GCC49_ARM_PREFIX)gcc
*_GCC49_ARM_PP_PATH              = ENV(GCC49_ARM_PREFIX)gcc
*_GCC49_ARM_VFRPP_PATH           = ENV(GCC49_ARM_PREFIX)gcc
*_GCC49_ARM_ASLCC_PATH           = ENV(GCC49_ARM_PREFIX)gcc
*_GCC49_ARM_ASLPP_PATH           = ENV(GCC49_ARM_PREFIX)gcc
*_GCC49_ARM_RC_PATH              = ENV(GCC49_ARM_PREFIX)objcopy

*_GCC49_ARM_ARCHCC_FLAGS         = -mthumb
*_GCC49_ARM_PLATFORM_FLAGS       = -march=armv7-a

*_GCC49_ARM_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS)
*_GCC49_ARM_ASLDLINK_FLAGS       = DEF(GCC49_ARM_ASLDLINK_FLAGS)
*_GCC49_ARM_ASM_FLAGS            = DEF(GCC49_ARM_ASM_FLAGS)
*_GCC49_ARM_DLINK_FLAGS          = DEF(GCC49_ARM_DLINK_FLAGS)
*_GCC49_ARM_DLINK2_FLAGS         = DEF(GCC49_ARM_DLINK2_FLAGS)
*_GCC49_ARM_PLATFORM_FLAGS       = -march=armv7-a
*_GCC49_ARM_PP_FLAGS             = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_GCC49_ARM_RC_FLAGS             = DEF(GCC_ARM_RC_FLAGS)
*_GCC49_ARM_VFRPP_FLAGS          = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)
*_GCC49_ARM_CC_XIPFLAGS          = DEF(GCC49_ARM_CC_XIPFLAGS)

  DEBUG_GCC49_ARM_CC_FLAGS       = DEF(GCC49_ARM_CC_FLAGS) -O0
RELEASE_GCC49_ARM_CC_FLAGS       = DEF(GCC49_ARM_CC_FLAGS) -Wno-unused-but-set-variable
  NOOPT_GCC49_ARM_CC_FLAGS       = DEF(GCC49_ARM_CC_FLAGS) -O0

##################
# GCC49 AARCH64 definitions
##################
*_GCC49_AARCH64_CC_PATH          = ENV(GCC49_AARCH64_PREFIX)gcc
*_GCC49_AARCH64_SLINK_PATH       = ENV(GCC49_AARCH64_PREFIX)ar
*_GCC49_AARCH64_DLINK_PATH       = ENV(GCC49_AARCH64_PREFIX)gcc
*_GCC49_AARCH64_ASLDLINK_PATH    = ENV(GCC49_AARCH64_PREFIX)gcc
*_GCC49_AARCH64_ASM_PATH         = ENV(GCC49_AARCH64_PREFIX)gcc
*_GCC49_AARCH64_PP_PATH          = ENV(GCC49_AARCH64_PREFIX)gcc
*_GCC49_AARCH64_VFRPP_PATH       = ENV(GCC49_AARCH64_PREFIX)gcc
*_GCC49_AARCH64_ASLCC_PATH       = ENV(GCC49_AARCH64_PREFIX)gcc
*_GCC49_AARCH64_ASLPP_PATH       = ENV(GCC49_AARCH64_PREFIX)gcc
*_GCC49_AARCH64_RC_PATH          = ENV(GCC49_AARCH64_PREFIX)objcopy

*_GCC49_AARCH64_ASLCC_FLAGS      = DEF(GCC_ASLCC_FLAGS)
*_GCC49_AARCH64_ASLDLINK_FLAGS   = DEF(GCC49_AARCH64_ASLDLINK_FLAGS)
*_GCC49_AARCH64_ASM_FLAGS        = DEF(GCC49_AARCH64_ASM_FLAGS)
*_GCC49_AARCH64_DLINK2_FLAGS     = DEF(GCC49_AARCH64_DLINK2_FLAGS)
*_GCC49_AARCH64_PLATFORM_FLAGS   =
*_GCC49_AARCH64_PP_FLAGS         = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_GCC49_AARCH64_RC_FLAGS         = DEF(GCC_AARCH64_RC_FLAGS)
*_GCC49_AARCH64_VFRPP_FLAGS      = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)
*_GCC49_AARCH64_CC_XIPFLAGS      = DEF(GCC49_AARCH64_CC_XIPFLAGS)

  DEBUG_GCC49_AARCH64_CC_FLAGS     = DEF(GCC49_AARCH64_CC_FLAGS) -O0 -mcmodel=small
  DEBUG_GCC49_AARCH64_DLINK_FLAGS  = DEF(GCC49_AARCH64_DLINK_FLAGS) -z common-page-size=0x1000
  DEBUG_GCC49_AARCH64_DLINK_XIPFLAGS = -z common-page-size=0x20

RELEASE_GCC49_AARCH64_CC_FLAGS     = DEF(GCC49_AARCH64_CC_FLAGS) -Wno-unused-but-set-variable -mcmodel=tiny -fomit-frame-pointer
RELEASE_GCC49_AARCH64_DLINK_FLAGS  = DEF(GCC49_AARCH64_DLINK_FLAGS)

  NOOPT_GCC49_AARCH64_CC_FLAGS     = DEF(GCC49_AARCH64_CC_FLAGS) -O0 -mcmodel=small
  NOOPT_GCC49_AARCH64_DLINK_FLAGS  = DEF(GCC49_AARCH64_DLINK_FLAGS) -z common-page-size=0x1000 -O0
  NOOPT_GCC49_AARCH64_DLINK_XIPFLAGS = -z common-page-size=0x20 -O0

####################################################################################
#
# GCC 5 - This configuration is used to compile under Linux to produce
#         PE/COFF binaries using GCC 5
#
####################################################################################
*_GCC5_*_*_FAMILY                = GCC

*_GCC5_*_MAKE_PATH               = DEF(GCC5_IA32_PREFIX)make
*_GCC5_*_*_DLL                   = ENV(GCC5_DLL)
*_GCC5_*_ASL_PATH                = DEF(UNIX_IASL_BIN)

*_GCC5_*_PP_FLAGS                = DEF(GCC_PP_FLAGS)
*_GCC5_*_ASLPP_FLAGS             = DEF(GCC_ASLPP_FLAGS)
*_GCC5_*_ASLCC_FLAGS             = DEF(GCC_ASLCC_FLAGS)
*_GCC5_*_VFRPP_FLAGS             = DEF(GCC_VFRPP_FLAGS)
*_GCC5_*_APP_FLAGS               =
*_GCC5_*_ASL_FLAGS               = DEF(IASL_FLAGS)
*_GCC5_*_ASL_OUTFLAGS            = DEF(IASL_OUTFLAGS)

##################
# GCC5 IA32 definitions
##################
*_GCC5_IA32_OBJCOPY_PATH         = DEF(GCC5_IA32_PREFIX)objcopy
*_GCC5_IA32_CC_PATH              = DEF(GCC5_IA32_PREFIX)gcc
*_GCC5_IA32_SLINK_PATH           = DEF(GCC5_IA32_PREFIX)gcc-ar
*_GCC5_IA32_DLINK_PATH           = DEF(GCC5_IA32_PREFIX)gcc
*_GCC5_IA32_ASLDLINK_PATH        = DEF(GCC5_IA32_PREFIX)gcc
*_GCC5_IA32_ASM_PATH             = DEF(GCC5_IA32_PREFIX)gcc
*_GCC5_IA32_PP_PATH              = DEF(GCC5_IA32_PREFIX)gcc
*_GCC5_IA32_VFRPP_PATH           = DEF(GCC5_IA32_PREFIX)gcc
*_GCC5_IA32_ASLCC_PATH           = DEF(GCC5_IA32_PREFIX)gcc
*_GCC5_IA32_ASLPP_PATH           = DEF(GCC5_IA32_PREFIX)gcc
*_GCC5_IA32_RC_PATH              = DEF(GCC5_IA32_PREFIX)objcopy

*_GCC5_IA32_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m32 -fno-lto
*_GCC5_IA32_ASLDLINK_FLAGS       = DEF(GCC5_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_i386
*_GCC5_IA32_ASM_FLAGS            = DEF(GCC5_ASM_FLAGS) -m32 -march=i386
*_GCC5_IA32_DLINK2_FLAGS         = DEF(GCC5_IA32_DLINK2_FLAGS)
*_GCC5_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_GCC5_IA32_OBJCOPY_FLAGS        =
*_GCC5_IA32_NASM_FLAGS           = -f elf32

  DEBUG_GCC5_IA32_CC_FLAGS       = DEF(GCC5_IA32_CC_FLAGS) -flto -Os
  DEBUG_GCC5_IA32_DLINK_FLAGS    = DEF(GCC5_IA32_X64_DLINK_FLAGS) -flto -Os -Wl,-m,elf_i386,--oformat=elf32-i386

RELEASE_GCC5_IA32_CC_FLAGS       = DEF(GCC5_IA32_CC_FLAGS) -flto -Os -Wno-unused-but-set-variable
RELEASE_GCC5_IA32_DLINK_FLAGS    = DEF(GCC5_IA32_X64_DLINK_FLAGS) -flto -Os -Wl,-m,elf_i386,--oformat=elf32-i386

  NOOPT_GCC5_IA32_CC_FLAGS       = DEF(GCC5_IA32_CC_FLAGS) -O0
  NOOPT_GCC5_IA32_DLINK_FLAGS    = DEF(GCC5_IA32_X64_DLINK_FLAGS) -Wl,-m,elf_i386,--oformat=elf32-i386 -O0

##################
# GCC5 X64 definitions
##################
*_GCC5_X64_OBJCOPY_PATH          = DEF(GCC5_X64_PREFIX)objcopy
*_GCC5_X64_CC_PATH               = DEF(GCC5_X64_PREFIX)gcc
*_GCC5_X64_SLINK_PATH            = DEF(GCC5_X64_PREFIX)gcc-ar
*_GCC5_X64_DLINK_PATH            = DEF(GCC5_X64_PREFIX)gcc
*_GCC5_X64_ASLDLINK_PATH         = DEF(GCC5_X64_PREFIX)gcc
*_GCC5_X64_ASM_PATH              = DEF(GCC5_X64_PREFIX)gcc
*_GCC5_X64_PP_PATH               = DEF(GCC5_X64_PREFIX)gcc
*_GCC5_X64_VFRPP_PATH            = DEF(GCC5_X64_PREFIX)gcc
*_GCC5_X64_ASLCC_PATH            = DEF(GCC5_X64_PREFIX)gcc
*_GCC5_X64_ASLPP_PATH            = DEF(GCC5_X64_PREFIX)gcc
*_GCC5_X64_RC_PATH               = DEF(GCC5_X64_PREFIX)objcopy

*_GCC5_X64_ASLCC_FLAGS           = DEF(GCC_ASLCC_FLAGS) -m64 -fno-lto
*_GCC5_X64_ASLDLINK_FLAGS        = DEF(GCC5_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_x86_64
*_GCC5_X64_ASM_FLAGS             = DEF(GCC5_ASM_FLAGS) -m64
*_GCC5_X64_DLINK2_FLAGS          = DEF(GCC5_X64_DLINK2_FLAGS)
*_GCC5_X64_RC_FLAGS              = DEF(GCC_X64_RC_FLAGS)
*_GCC5_X64_OBJCOPY_FLAGS         =
*_GCC5_X64_NASM_FLAGS            = -f elf64

  DEBUG_GCC5_X64_CC_FLAGS        = DEF(GCC5_X64_CC_FLAGS) -flto -DUSING_LTO -Os
  DEBUG_GCC5_X64_DLINK_FLAGS     = DEF(GCC5_X64_DLINK_FLAGS) -flto -Os

RELEASE_GCC5_X64_CC_FLAGS        = DEF(GCC5_X64_CC_FLAGS) -flto -DUSING_LTO -Os -Wno-unused-but-set-variable
RELEASE_GCC5_X64_DLINK_FLAGS     = DEF(GCC5_X64_DLINK_FLAGS) -flto -Os

  NOOPT_GCC5_X64_CC_FLAGS        = DEF(GCC5_X64_CC_FLAGS) -O0
  NOOPT_GCC5_X64_DLINK_FLAGS     = DEF(GCC5_X64_DLINK_FLAGS) -O0

##################
# GCC5 ARM definitions
##################
*_GCC5_ARM_CC_PATH               = ENV(GCC5_ARM_PREFIX)gcc
*_GCC5_ARM_SLINK_PATH            = ENV(GCC5_ARM_PREFIX)gcc-ar
*_GCC5_ARM_DLINK_PATH            = ENV(GCC5_ARM_PREFIX)gcc
*_GCC5_ARM_ASLDLINK_PATH         = ENV(GCC5_ARM_PREFIX)gcc
*_GCC5_ARM_ASM_PATH              = ENV(GCC5_ARM_PREFIX)gcc
*_GCC5_ARM_PP_PATH               = ENV(GCC5_ARM_PREFIX)gcc
*_GCC5_ARM_VFRPP_PATH            = ENV(GCC5_ARM_PREFIX)gcc
*_GCC5_ARM_ASLCC_PATH            = ENV(GCC5_ARM_PREFIX)gcc
*_GCC5_ARM_ASLPP_PATH            = ENV(GCC5_ARM_PREFIX)gcc
*_GCC5_ARM_RC_PATH               = ENV(GCC5_ARM_PREFIX)objcopy

*_GCC5_ARM_ARCHCC_FLAGS          = -mthumb
*_GCC5_ARM_ASLCC_FLAGS           = DEF(GCC_ASLCC_FLAGS)
*_GCC5_ARM_ASLDLINK_FLAGS        = DEF(GCC5_ARM_ASLDLINK_FLAGS)
*_GCC5_ARM_ASM_FLAGS             = DEF(GCC5_ARM_ASM_FLAGS)
*_GCC5_ARM_DLINK2_FLAGS          = DEF(GCC5_ARM_DLINK2_FLAGS)
*_GCC5_ARM_PLATFORM_FLAGS        = -march=armv7-a
*_GCC5_ARM_PP_FLAGS              = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_GCC5_ARM_RC_FLAGS              = DEF(GCC_ARM_RC_FLAGS)
*_GCC5_ARM_VFRPP_FLAGS           = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)
*_GCC5_ARM_CC_XIPFLAGS           = DEF(GCC5_ARM_CC_XIPFLAGS)

  DEBUG_GCC5_ARM_CC_FLAGS        = DEF(GCC5_ARM_CC_FLAGS) -O0
  DEBUG_GCC5_ARM_DLINK_FLAGS     = DEF(GCC5_ARM_DLINK_FLAGS)

RELEASE_GCC5_ARM_CC_FLAGS        = DEF(GCC5_ARM_CC_FLAGS) -flto -Wno-unused-but-set-variable
RELEASE_GCC5_ARM_DLINK_FLAGS     = DEF(GCC5_ARM_DLINK_FLAGS) -flto -Os -L$(WORKSPACE)/ArmPkg/Library/GccLto -llto-arm -Wl,-plugin-opt=-pass-through=-llto-arm

  NOOPT_GCC5_ARM_CC_FLAGS        = DEF(GCC5_ARM_CC_FLAGS) -O0
  NOOPT_GCC5_ARM_DLINK_FLAGS     = DEF(GCC5_ARM_DLINK_FLAGS) -O0

##################
# GCC5 AARCH64 definitions
##################
*_GCC5_AARCH64_CC_PATH           = ENV(GCC5_AARCH64_PREFIX)gcc
*_GCC5_AARCH64_SLINK_PATH        = ENV(GCC5_AARCH64_PREFIX)gcc-ar
*_GCC5_AARCH64_DLINK_PATH        = ENV(GCC5_AARCH64_PREFIX)gcc
*_GCC5_AARCH64_ASLDLINK_PATH     = ENV(GCC5_AARCH64_PREFIX)gcc
*_GCC5_AARCH64_ASM_PATH          = ENV(GCC5_AARCH64_PREFIX)gcc
*_GCC5_AARCH64_PP_PATH           = ENV(GCC5_AARCH64_PREFIX)gcc
*_GCC5_AARCH64_VFRPP_PATH        = ENV(GCC5_AARCH64_PREFIX)gcc
*_GCC5_AARCH64_ASLCC_PATH        = ENV(GCC5_AARCH64_PREFIX)gcc
*_GCC5_AARCH64_ASLPP_PATH        = ENV(GCC5_AARCH64_PREFIX)gcc
*_GCC5_AARCH64_RC_PATH           = ENV(GCC5_AARCH64_PREFIX)objcopy

*_GCC5_AARCH64_ASLCC_FLAGS       = DEF(GCC_ASLCC_FLAGS)
*_GCC5_AARCH64_ASLDLINK_FLAGS    = DEF(GCC5_AARCH64_ASLDLINK_FLAGS)
*_GCC5_AARCH64_ASM_FLAGS         = DEF(GCC5_AARCH64_ASM_FLAGS)
*_GCC5_AARCH64_DLINK2_FLAGS      = DEF(GCC5_AARCH64_DLINK2_FLAGS)
*_GCC5_AARCH64_PLATFORM_FLAGS    =
*_GCC5_AARCH64_PP_FLAGS          = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_GCC5_AARCH64_RC_FLAGS          = DEF(GCC_AARCH64_RC_FLAGS)
*_GCC5_AARCH64_VFRPP_FLAGS       = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)
*_GCC5_AARCH64_CC_XIPFLAGS       = DEF(GCC5_AARCH64_CC_XIPFLAGS)

  DEBUG_GCC5_AARCH64_CC_FLAGS    = DEF(GCC5_AARCH64_CC_FLAGS) -O0 -mcmodel=small
  DEBUG_GCC5_AARCH64_DLINK_FLAGS = DEF(GCC5_AARCH64_DLINK_FLAGS) -z common-page-size=0x1000
  DEBUG_GCC5_AARCH64_DLINK_XIPFLAGS = -z common-page-size=0x20

RELEASE_GCC5_AARCH64_CC_FLAGS    = DEF(GCC5_AARCH64_CC_FLAGS) -flto -Wno-unused-but-set-variable -mcmodel=tiny -fomit-frame-pointer
RELEASE_GCC5_AARCH64_DLINK_FLAGS = DEF(GCC5_AARCH64_DLINK_FLAGS) -flto -Os -L$(WORKSPACE)/ArmPkg/Library/GccLto -llto-aarch64 -Wl,-plugin-opt=-pass-through=-llto-aarch64

  NOOPT_GCC5_AARCH64_CC_FLAGS    = DEF(GCC5_AARCH64_CC_FLAGS) -O0 -mcmodel=small
  NOOPT_GCC5_AARCH64_DLINK_FLAGS = DEF(GCC5_AARCH64_DLINK_FLAGS) -z common-page-size=0x1000 -O0
  NOOPT_GCC5_AARCH64_DLINK_XIPFLAGS = -z common-page-size=0x20 -O0

####################################################################################
#
# CLANG35   - This configuration is used to compile under Linux to produce
#             PE/COFF binaries using the clang compiler and assembler (v3.5 and up)
#             and GNU linker
#
####################################################################################
*_CLANG35_*_*_FAMILY             = GCC

*_CLANG35_*_MAKE_PATH            = make
*_CLANG35_*_*_DLL                = ENV(CLANG35_DLL)
*_CLANG35_*_ASL_PATH             = DEF(UNIX_IASL_BIN)

*_CLANG35_*_PP_FLAGS             = DEF(GCC_PP_FLAGS)
*_CLANG35_*_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS)
*_CLANG35_*_APP_FLAGS            =
*_CLANG35_*_ASL_FLAGS            = DEF(IASL_FLAGS)
*_CLANG35_*_ASL_OUTFLAGS         = DEF(IASL_OUTFLAGS)

*_CLANG35_*_CC_PATH              = ENV(CLANG35_BIN)clang
*_CLANG35_*_ASM_PATH             = ENV(CLANG35_BIN)clang
*_CLANG35_*_PP_PATH              = ENV(CLANG35_BIN)clang
*_CLANG35_*_VFRPP_PATH           = ENV(CLANG35_BIN)clang
*_CLANG35_*_ASLCC_PATH           = ENV(CLANG35_BIN)clang
*_CLANG35_*_ASLPP_PATH           = ENV(CLANG35_BIN)clang
*_CLANG35_*_DLINK_PATH           = ENV(CLANG35_BIN)clang
*_CLANG35_*_ASLDLINK_PATH        = ENV(CLANG35_BIN)clang

DEFINE CLANG35_ARM_TARGET        = -target arm-linux-gnueabihf
DEFINE CLANG35_AARCH64_TARGET    = -target aarch64-linux-gnu

DEFINE CLANG35_WARNING_OVERRIDES = -Wno-parentheses-equality -Wno-tautological-compare -Wno-tautological-constant-out-of-range-compare -Wno-empty-body
DEFINE CLANG35_ARM_CC_FLAGS      = DEF(GCC_ARM_CC_FLAGS) DEF(CLANG35_ARM_TARGET) DEF(CLANG35_WARNING_OVERRIDES)
DEFINE CLANG35_AARCH64_CC_FLAGS  = DEF(GCC_AARCH64_CC_FLAGS) DEF(CLANG35_AARCH64_TARGET) -mcmodel=small DEF(CLANG35_WARNING_OVERRIDES)

##################
# CLANG35 ARM definitions
##################
*_CLANG35_ARM_SLINK_PATH         = ENV(CLANG35_ARM_PREFIX)ar
*_CLANG35_ARM_RC_PATH            = ENV(CLANG35_ARM_PREFIX)objcopy

*_CLANG35_ARM_ASLCC_FLAGS        = DEF(GCC_ASLCC_FLAGS)
*_CLANG35_ARM_ASLDLINK_FLAGS     = DEF(CLANG35_ARM_TARGET) DEF(GCC_ARM_ASLDLINK_FLAGS)
*_CLANG35_ARM_ASM_FLAGS          = DEF(GCC_ASM_FLAGS) DEF(CLANG35_ARM_TARGET) $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) -Qunused-arguments
*_CLANG35_ARM_DLINK_FLAGS        = DEF(CLANG35_ARM_TARGET) DEF(GCC_ARM_DLINK_FLAGS)
*_CLANG35_ARM_DLINK2_FLAGS       = DEF(GCC_DLINK2_FLAGS_COMMON) -Wl,--defsym=PECOFF_HEADER_SIZE=0x220
*_CLANG35_ARM_PLATFORM_FLAGS     = -march=armv7-a
*_CLANG35_ARM_PP_FLAGS           = DEF(GCC_PP_FLAGS) DEF(CLANG35_ARM_TARGET) $(ARCHCC_FLAGS) $(PLATFORM_FLAGS)
*_CLANG35_ARM_RC_FLAGS           = DEF(GCC_ARM_RC_FLAGS)
*_CLANG35_ARM_VFRPP_FLAGS        = DEF(GCC_VFRPP_FLAGS) DEF(CLANG35_ARM_TARGET) $(ARCHCC_FLAGS) $(PLATFORM_FLAGS)
*_CLANG35_ARM_ASLPP_FLAGS        = DEF(GCC_ASLPP_FLAGS) DEF(CLANG35_ARM_TARGET)
*_CLANG35_ARM_CC_XIPFLAGS        = DEF(GCC_ARM_CC_XIPFLAGS)

  DEBUG_CLANG35_ARM_CC_FLAGS     = DEF(CLANG35_ARM_CC_FLAGS) $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -O0
RELEASE_CLANG35_ARM_CC_FLAGS     = DEF(CLANG35_ARM_CC_FLAGS) $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -Oz

##################
# CLANG35 AARCH64 definitions
##################
*_CLANG35_AARCH64_SLINK_PATH     = ENV(CLANG35_AARCH64_PREFIX)ar
*_CLANG35_AARCH64_RC_PATH        = ENV(CLANG35_AARCH64_PREFIX)objcopy

*_CLANG35_AARCH64_ASLCC_FLAGS    = DEF(GCC_ASLCC_FLAGS)
*_CLANG35_AARCH64_ASLDLINK_FLAGS = DEF(CLANG35_AARCH64_TARGET) DEF(GCC_AARCH64_ASLDLINK_FLAGS)
*_CLANG35_AARCH64_ASM_FLAGS      = DEF(GCC_ASM_FLAGS) DEF(CLANG35_AARCH64_TARGET) $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) -Qunused-arguments
*_CLANG35_AARCH64_DLINK_FLAGS    = DEF(CLANG35_AARCH64_TARGET) DEF(GCC_AARCH64_DLINK_FLAGS) -z common-page-size=0x1000
*_CLANG35_AARCH64_DLINK_XIPFLAGS = -z common-page-size=0x20
*_CLANG35_AARCH64_DLINK2_FLAGS   = DEF(GCC_DLINK2_FLAGS_COMMON) -Wl,--defsym=PECOFF_HEADER_SIZE=0x228
*_CLANG35_AARCH64_PLATFORM_FLAGS =
*_CLANG35_AARCH64_PP_FLAGS       = DEF(GCC_PP_FLAGS) DEF(CLANG35_AARCH64_TARGET) $(ARCHCC_FLAGS) $(PLATFORM_FLAGS)
*_CLANG35_AARCH64_RC_FLAGS       = DEF(GCC_AARCH64_RC_FLAGS)
*_CLANG35_AARCH64_VFRPP_FLAGS    = DEF(GCC_VFRPP_FLAGS) DEF(CLANG35_AARCH64_TARGET) $(ARCHCC_FLAGS) $(PLATFORM_FLAGS)
*_CLANG35_AARCH64_ASLPP_FLAGS    = DEF(GCC_ASLPP_FLAGS) DEF(CLANG35_AARCH64_TARGET)
*_CLANG35_AARCH64_CC_XIPFLAGS    = DEF(GCC_AARCH64_CC_XIPFLAGS)

  DEBUG_CLANG35_AARCH64_CC_FLAGS = DEF(CLANG35_AARCH64_CC_FLAGS) $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -O0
RELEASE_CLANG35_AARCH64_CC_FLAGS = DEF(CLANG35_AARCH64_CC_FLAGS) $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -Oz -fomit-frame-pointer

####################################################################################
#
# Clang 3.8 - This configuration is used to compile under Linux to produce
#  PE/COFF binaries using LLVM/Clang 3.8 with Link Time Optimization enabled
#
####################################################################################
*_CLANG38_*_*_FAMILY                = GCC
*_CLANG38_*_MAKE_PATH               = make
*_CLANG38_*_*_DLL                   = ENV(CLANG38_DLL)
*_CLANG38_*_ASL_PATH                = DEF(UNIX_IASL_BIN)

*_CLANG38_*_APP_FLAGS               =
*_CLANG38_*_ASL_FLAGS               = DEF(IASL_FLAGS)
*_CLANG38_*_ASL_OUTFLAGS            = DEF(IASL_OUTFLAGS)

DEFINE CLANG38_IA32_PREFIX          = ENV(CLANG38_BIN)
DEFINE CLANG38_X64_PREFIX           = ENV(CLANG38_BIN)

DEFINE CLANG38_IA32_TARGET          = -target i686-pc-linux-gnu
DEFINE CLANG38_X64_TARGET           = -target x86_64-pc-linux-gnu

DEFINE CLANG38_ALL_CC_FLAGS         = DEF(GCC44_ALL_CC_FLAGS) -Wno-empty-body -fno-stack-protector -mms-bitfields -Wno-address -Wno-shift-negative-value -Wno-parentheses-equality -Wno-unknown-pragmas -Wno-tautological-constant-out-of-range-compare -Wno-incompatible-library-redeclaration -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -msoft-float -mno-implicit-float  -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang -funsigned-char -fno-ms-extensions -Wno-null-dereference -Wno-tautological-compare -Wno-unknown-warning-option

###########################
# CLANG38 IA32 definitions
###########################
*_CLANG38_IA32_OBJCOPY_PATH         = objcopy
*_CLANG38_IA32_CC_PATH              = DEF(CLANG38_IA32_PREFIX)clang
*_CLANG38_IA32_SLINK_PATH           = DEF(CLANG38_IA32_PREFIX)llvm-ar
*_CLANG38_IA32_DLINK_PATH           = DEF(CLANG38_IA32_PREFIX)clang
*_CLANG38_IA32_ASLDLINK_PATH        = DEF(CLANG38_IA32_PREFIX)clang
*_CLANG38_IA32_ASM_PATH             = DEF(CLANG38_IA32_PREFIX)clang
*_CLANG38_IA32_PP_PATH              = DEF(CLANG38_IA32_PREFIX)clang
*_CLANG38_IA32_VFRPP_PATH           = DEF(CLANG38_IA32_PREFIX)clang
*_CLANG38_IA32_ASLCC_PATH           = DEF(CLANG38_IA32_PREFIX)clang
*_CLANG38_IA32_ASLPP_PATH           = DEF(CLANG38_IA32_PREFIX)clang
*_CLANG38_IA32_RC_PATH              = objcopy

*_CLANG38_IA32_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m32 -fno-lto DEF(CLANG38_IA32_TARGET)
*_CLANG38_IA32_ASLDLINK_FLAGS       = DEF(GCC5_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_i386
*_CLANG38_IA32_ASM_FLAGS            = DEF(GCC5_ASM_FLAGS) -m32 -march=i386 DEF(CLANG38_IA32_TARGET)
*_CLANG38_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_CLANG38_IA32_OBJCOPY_FLAGS        =
*_CLANG38_IA32_NASM_FLAGS           = -f elf32
*_CLANG38_IA32_PP_FLAGS             = DEF(GCC_PP_FLAGS) DEF(CLANG38_IA32_TARGET)
*_CLANG38_IA32_ASLPP_FLAGS          = DEF(GCC_ASLPP_FLAGS) DEF(CLANG38_IA32_TARGET)
*_CLANG38_IA32_VFRPP_FLAGS          = DEF(GCC_VFRPP_FLAGS) DEF(CLANG38_IA32_TARGET)

DEBUG_CLANG38_IA32_CC_FLAGS         = DEF(CLANG38_ALL_CC_FLAGS) -m32 -Oz -flto -march=i586 DEF(CLANG38_IA32_TARGET) -g
DEBUG_CLANG38_IA32_DLINK_FLAGS      = DEF(GCC5_IA32_X64_DLINK_FLAGS) -flto -Wl,-Oz -Wl,-melf_i386 -Wl,--oformat=elf32-i386
DEBUG_CLANG38_IA32_DLINK2_FLAGS     = DEF(GCC5_IA32_DLINK2_FLAGS) -O3

RELEASE_CLANG38_IA32_CC_FLAGS       = DEF(CLANG38_ALL_CC_FLAGS) -m32 -Oz -flto -march=i586 DEF(CLANG38_IA32_TARGET)
RELEASE_CLANG38_IA32_DLINK_FLAGS    = DEF(GCC5_IA32_X64_DLINK_FLAGS) -flto -Wl,-Oz -Wl,-melf_i386 -Wl,--oformat=elf32-i386
RELEASE_CLANG38_IA32_DLINK2_FLAGS   = DEF(GCC5_IA32_DLINK2_FLAGS) -O3

NOOPT_CLANG38_IA32_CC_FLAGS         = DEF(CLANG38_ALL_CC_FLAGS) -m32 -O0 -march=i586 DEF(CLANG38_IA32_TARGET) -g
NOOPT_CLANG38_IA32_DLINK_FLAGS      = DEF(GCC5_IA32_X64_DLINK_FLAGS) -Wl,-O0 -Wl,-melf_i386 -Wl,--oformat=elf32-i386
NOOPT_CLANG38_IA32_DLINK2_FLAGS     = DEF(GCC5_IA32_DLINK2_FLAGS) -O0

##########################
# CLANG38 X64 definitions
##########################
*_CLANG38_X64_OBJCOPY_PATH         = objcopy
*_CLANG38_X64_CC_PATH              = DEF(CLANG38_X64_PREFIX)clang
*_CLANG38_X64_SLINK_PATH           = DEF(CLANG38_X64_PREFIX)llvm-ar
*_CLANG38_X64_DLINK_PATH           = DEF(CLANG38_X64_PREFIX)clang
*_CLANG38_X64_ASLDLINK_PATH        = DEF(CLANG38_X64_PREFIX)clang
*_CLANG38_X64_ASM_PATH             = DEF(CLANG38_X64_PREFIX)clang
*_CLANG38_X64_PP_PATH              = DEF(CLANG38_X64_PREFIX)clang
*_CLANG38_X64_VFRPP_PATH           = DEF(CLANG38_X64_PREFIX)clang
*_CLANG38_X64_ASLCC_PATH           = DEF(CLANG38_X64_PREFIX)clang
*_CLANG38_X64_ASLPP_PATH           = DEF(CLANG38_X64_PREFIX)clang
*_CLANG38_X64_RC_PATH              = objcopy

*_CLANG38_X64_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m64 -fno-lto DEF(CLANG38_X64_TARGET)
*_CLANG38_X64_ASLDLINK_FLAGS       = DEF(GCC5_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_x86_64
*_CLANG38_X64_ASM_FLAGS            = DEF(GCC5_ASM_FLAGS) -m64 DEF(CLANG38_X64_TARGET)
*_CLANG38_X64_RC_FLAGS             = DEF(GCC_X64_RC_FLAGS)
*_CLANG38_X64_OBJCOPY_FLAGS        =
*_CLANG38_X64_NASM_FLAGS           = -f elf64
*_CLANG38_X64_PP_FLAGS             = DEF(GCC_PP_FLAGS) DEF(CLANG38_X64_TARGET)
*_CLANG38_X64_ASLPP_FLAGS          = DEF(GCC_ASLPP_FLAGS) DEF(CLANG38_X64_TARGET)
*_CLANG38_X64_VFRPP_FLAGS          = DEF(GCC_VFRPP_FLAGS) DEF(CLANG38_X64_TARGET)

DEBUG_CLANG38_X64_CC_FLAGS         = DEF(CLANG38_ALL_CC_FLAGS) -m64 "-DEFIAPI=__attribute__((ms_abi))" -mno-red-zone -mcmodel=small -fpie -Oz -flto DEF(CLANG38_X64_TARGET) -g
DEBUG_CLANG38_X64_DLINK_FLAGS      = DEF(GCC5_IA32_X64_DLINK_FLAGS) -flto -Wl,-Oz -Wl,-melf_x86_64 -Wl,--oformat=elf64-x86-64 -Wl,-pie -mcmodel=small
DEBUG_CLANG38_X64_DLINK2_FLAGS     = DEF(GCC5_X64_DLINK2_FLAGS) -O3

RELEASE_CLANG38_X64_CC_FLAGS       = DEF(CLANG38_ALL_CC_FLAGS) -m64 "-DEFIAPI=__attribute__((ms_abi))" -mno-red-zone -mcmodel=small -fpie -Oz -flto DEF(CLANG38_X64_TARGET)
RELEASE_CLANG38_X64_DLINK_FLAGS    = DEF(GCC5_IA32_X64_DLINK_FLAGS) -flto -Wl,-Oz -Wl,-melf_x86_64 -Wl,--oformat=elf64-x86-64 -Wl,-pie -mcmodel=small
RELEASE_CLANG38_X64_DLINK2_FLAGS   = DEF(GCC5_X64_DLINK2_FLAGS) -O3

NOOPT_CLANG38_X64_CC_FLAGS         = DEF(CLANG38_ALL_CC_FLAGS) -m64 "-DEFIAPI=__attribute__((ms_abi))" -mno-red-zone -mcmodel=small -fpie -O0 DEF(CLANG38_X64_TARGET) -g
NOOPT_CLANG38_X64_DLINK_FLAGS      = DEF(GCC5_IA32_X64_DLINK_FLAGS) -Wl,-O0 -Wl,-melf_x86_64 -Wl,--oformat=elf64-x86-64 -Wl,-pie -mcmodel=small
NOOPT_CLANG38_X64_DLINK2_FLAGS     = DEF(GCC5_X64_DLINK2_FLAGS) -O0

####################################################################################
#
# Cygwin GCC And Intel ACPI Compiler
#
####################################################################################
#   CYGGCC        - CygWin GCC
#   ASL           - Intel ACPI Source Language Compiler (iasl.exe)
*_CYGGCC_*_*_FAMILY              = GCC
*_CYGGCC_*_*_BUILDRULEFAMILY     = GCCLD

*_CYGGCC_*_*_DLL                 = DEF(CYGWIN_BIN)
*_CYGGCC_*_MAKE_PATH             = DEF(MS_VS_BIN)\nmake.exe
*_CYGGCC_*_ASL_PATH              = DEF(DEFAULT_WIN_ASL_BIN)

*_CYGGCC_IA32_DLINK_FLAGS               = DEF(GCC_IA32_X64_DLINK_FLAGS) --image-base=0
*_CYGGCC_X64_DLINK_FLAGS                = DEF(GCC_IA32_X64_DLINK_FLAGS) --image-base=0
*_CYGGCC_IA32_ASLDLINK_FLAGS            = DEF(GCC_IA32_X64_ASLDLINK_FLAGS)
*_CYGGCC_X64_ASLDLINK_FLAGS             = DEF(GCC_IA32_X64_ASLDLINK_FLAGS)
*_CYGGCC_*_MAKE_FLAGS                   = /nologo
*_CYGGCC_*_ASM_FLAGS                    = DEF(GCC_ASM_FLAGS)
*_CYGGCC_*_PP_FLAGS                     = DEF(GCC_PP_FLAGS)
*_CYGGCC_*_ASLPP_FLAGS                  = DEF(GCC_ASLPP_FLAGS)
*_CYGGCC_*_ASLCC_FLAGS                  = DEF(GCC_ASLCC_FLAGS)
*_CYGGCC_*_VFRPP_FLAGS                  = DEF(GCC_VFRPP_FLAGS)
*_CYGGCC_*_APP_FLAGS                    =
*_CYGGCC_*_ASL_FLAGS                    = DEF(DEFAULT_WIN_ASL_FLAGS)
*_CYGGCC_*_ASL_OUTFLAGS                 = DEF(DEFAULT_WIN_ASL_OUTFLAGS)

##################
# IA32 definitions
##################
*_CYGGCC_IA32_CC_PATH            = DEF(CYGWIN_BINIA32)gcc
*_CYGGCC_IA32_SLINK_PATH         = DEF(CYGWIN_BINIA32)ar
*_CYGGCC_IA32_DLINK_PATH         = DEF(CYGWIN_BINIA32)ld
*_CYGGCC_IA32_ASM_PATH           = DEF(CYGWIN_BINIA32)gcc
*_CYGGCC_IA32_PP_PATH            = DEF(CYGWIN_BINIA32)gcc
*_CYGGCC_IA32_APP_PATH           = DEF(CYGWIN_BINIA32)gcc
*_CYGGCC_IA32_VFRPP_PATH         = DEF(CYGWIN_BINIA32)gcc
*_CYGGCC_IA32_ASLCC_PATH         = DEF(CYGWIN_BINIA32)gcc
*_CYGGCC_IA32_ASLPP_PATH         = DEF(CYGWIN_BINIA32)gcc
*_CYGGCC_IA32_ASLDLINK_PATH      = DEF(CYGWIN_BINIA32)ld
*_CYGGCC_IA32_RC_PATH            = DEF(CYGWIN_BINIA32)objcopy
*_CYGGCC_IA32_OBJCOPY_PATH       = DEF(CYGWIN_BINIA32)objcopy

*_CYGGCC_IA32_CC_FLAGS           = DEF(GCC_IA32_CC_FLAGS)
*_CYGGCC_IA32_RC_FLAGS           = DEF(GCC_IA32_RC_FLAGS)
*_CYGGCC_IA32_OBJCOPY_FLAGS      =
*_CYGGCC_IA32_NASM_FLAGS         = -f win32

##################
# X64 definitions
##################
*_CYGGCC_X64_CC_PATH             = DEF(CYGWIN_BINX64)gcc
*_CYGGCC_X64_SLINK_PATH          = DEF(CYGWIN_BINX64)ar
*_CYGGCC_X64_DLINK_PATH          = DEF(CYGWIN_BINX64)ld
*_CYGGCC_X64_ASM_PATH            = DEF(CYGWIN_BINX64)gcc
*_CYGGCC_X64_PP_PATH             = DEF(CYGWIN_BINX64)gcc
*_CYGGCC_X64_APP_PATH            = DEF(CYGWIN_BINX64)gcc
*_CYGGCC_X64_VFRPP_PATH          = DEF(CYGWIN_BINX64)gcc
*_CYGGCC_X64_ASLCC_PATH          = DEF(CYGWIN_BINX64)gcc
*_CYGGCC_X64_ASLPP_PATH          = DEF(CYGWIN_BINX64)gcc
*_CYGGCC_X64_ASLDLINK_PATH       = DEF(CYGWIN_BINX64)ld
*_CYGGCC_X64_RC_PATH             = DEF(CYGWIN_BINX64)objcopy
*_CYGGCC_X64_OBJCOPY_PATH        = DEF(CYGWIN_BINX64)objcopy

*_CYGGCC_X64_CC_FLAGS            = DEF(GCC_X64_CC_FLAGS)
*_CYGGCC_X64_RC_FLAGS            = DEF(GCC_X64_RC_FLAGS)
*_CYGGCC_X64_OBJCOPY_FLAGS       =
*_CYGGCC_X64_NASM_FLAGS          = -f win64

##################
# IPF definitions
##################
*_CYGGCC_IPF_CC_PATH             = DEF(CYGWIN_BINIPF)gcc
*_CYGGCC_IPF_SLINK_PATH          = DEF(CYGWIN_BINIPF)ar
*_CYGGCC_IPF_DLINK_PATH          = DEF(CYGWIN_BINIPF)ld
*_CYGGCC_IPF_ASLDLINK_PATH       = DEF(CYGWIN_BINIPF)ld
*_CYGGCC_IPF_ASM_PATH            = DEF(CYGWIN_BINIPF)gcc
*_CYGGCC_IPF_PP_PATH             = DEF(CYGWIN_BINIPF)gcc
*_CYGGCC_IPF_VFRPP_PATH          = DEF(CYGWIN_BINIPF)gcc
*_CYGGCC_IPF_ASLCC_PATH          = DEF(CYGWIN_BINIPF)gcc
*_CYGGCC_IPF_ASLPP_PATH          = DEF(CYGWIN_BINIPF)gcc
*_CYGGCC_IPF_OBJCOPY_PATH        = DEF(CYGWIN_BINIPF)objcopy
*_CYGGCC_IPF_SYMRENAME_PATH      = DEF(CYGWIN_BINIPF)objcopy
*_CYGGCC_IPF_RC_PATH             = DEF(CYGWIN_BINIPF)objcopy

*_CYGGCC_IPF_CC_FLAGS             = DEF(GCC_IPF_CC_FLAGS)
*_CYGGCC_IPF_DLINK_FLAGS          = DEF(GCC_IPF_DLINK_FLAGS)
*_CYGGCC_IPF_OBJCOPY_FLAGS        = DEF(GCC_IPF_OBJCOPY_FLAGS)
*_CYGGCC_IPF_SYMRENAME_FLAGS      = DEF(GCC_IPF_SYMRENAME_FLAGS)
*_CYGGCC_IPF_RC_FLAGS             = DEF(GCC_IPF_RC_FLAGS)

##################
# EBC definitions
##################
*_CYGGCC_EBC_*_FAMILY      = INTEL

*_CYGGCC_EBC_PP_PATH       = DEF(EBC_BIN)\iec.exe
*_CYGGCC_EBC_CC_PATH       = DEF(EBC_BIN)\iec.exe
*_CYGGCC_EBC_DLINK_PATH    = DEF(EBC_BIN)\link.exe
*_CYGGCC_EBC_SLINK_PATH    = DEF(EBC_BIN)\link.exe
*_CYGGCC_EBC_VFRPP_PATH    = DEF(EBC_BIN)\iec.exe
*_CYGGCC_EBC_RC_PATH       = DEF(MS_VS_BIN)\rc.exe

*_CYGGCC_EBC_CC_FLAGS           = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_CYGGCC_EBC_SLINK_FLAGS        = /lib /NOLOGO /MACHINE:EBC
*_CYGGCC_EBC_DLINK_FLAGS        = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /ALIGN:32 /DRIVER

####################################################################################
#
# Cygwin GCC And Microsoft ACPI Compiler
#
####################################################################################
#   CYGGCCxASL        - CygWin GCC
#   ASL           - Microsoft ACPI Source Language Compiler (asl.exe)
*_CYGGCCxASL_*_*_FAMILY              = GCC
*_CYGGCCxASL_*_*_BUILDRULEFAMILY     = GCCLD

*_CYGGCCxASL_*_*_DLL                 = DEF(CYGWIN_BIN)
*_CYGGCCxASL_*_MAKE_PATH             = DEF(MS_VS_BIN)\nmake.exe

*_CYGGCCxASL_*_MAKE_FLAGS                 = /nologo
*_CYGGCCxASL_*_PP_FLAGS                   = -E -x assembler-with-cpp -include AutoGen.h
*_CYGGCCxASL_*_DLINK_FLAGS                = -nostdlib -O2 --gc-sections --dll --export-all-symbols --entry _$(IMAGE_ENTRY_POINT) --file-alignment 0x20 --section-alignment 0x20
*_CYGGCCxASL_*_ASM_FLAGS                  = -c -x assembler -imacros AutoGen.h
*_CYGGCCxASL_*_APP_FLAGS                  = -E -x assembler
*_CYGGCCxASL_*_VFRPP_FLAGS                = -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h

##################
# ASL definitions
##################
*_CYGGCCxASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_CYGGCCxASL_*_ASL_FLAGS       =
*_CYGGCCxASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_CYGGCCxASL_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_CYGGCCxASL_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_CYGGCCxASL_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_CYGGCCxASL_IA32_CC_PATH            = DEF(CYGWIN_BINIA32)gcc
*_CYGGCCxASL_IA32_SLINK_PATH         = DEF(CYGWIN_BINIA32)ar
*_CYGGCCxASL_IA32_DLINK_PATH         = DEF(CYGWIN_BINIA32)ld
*_CYGGCCxASL_IA32_ASM_PATH           = DEF(CYGWIN_BINIA32)gcc
*_CYGGCCxASL_IA32_PP_PATH            = DEF(CYGWIN_BINIA32)gcc
*_CYGGCCxASL_IA32_APP_PATH           = DEF(CYGWIN_BINIA32)gcc
*_CYGGCCxASL_IA32_VFRPP_PATH         = DEF(CYGWIN_BINIA32)gcc
*_CYGGCCxASL_IA32_ASLCC_PATH         = DEF(CYGWIN_BINIA32)gcc
*_CYGGCCxASL_IA32_ASLPP_PATH         = DEF(CYGWIN_BINIA32)gcc
*_CYGGCCxASL_IA32_ASLDLINK_PATH      = DEF(CYGWIN_BINIA32)ld
*_CYGGCCxASL_IA32_RC_PATH            = DEF(CYGWIN_BINIA32)objcopy

*_CYGGCCxASL_IA32_CC_FLAGS           = DEF(GCC_IA32_CC_FLAGS)
*_CYGGCCxASL_IA32_RC_FLAGS           = DEF(GCC_IA32_RC_FLAGS)

##################
# X64 definitions
##################
*_CYGGCCxASL_X64_CC_PATH             = DEF(CYGWIN_BINX64)gcc
*_CYGGCCxASL_X64_SLINK_PATH          = DEF(CYGWIN_BINX64)ar
*_CYGGCCxASL_X64_DLINK_PATH          = DEF(CYGWIN_BINX64)ld
*_CYGGCCxASL_X64_ASM_PATH            = DEF(CYGWIN_BINX64)gcc
*_CYGGCCxASL_X64_PP_PATH             = DEF(CYGWIN_BINX64)gcc
*_CYGGCCxASL_X64_APP_PATH            = DEF(CYGWIN_BINX64)gcc
*_CYGGCCxASL_X64_VFRPP_PATH          = DEF(CYGWIN_BINX64)gcc
*_CYGGCCxASL_X64_ASLCC_PATH          = DEF(CYGWIN_BINX64)gcc
*_CYGGCCxASL_X64_ASLPP_PATH          = DEF(CYGWIN_BINX64)gcc
*_CYGGCCxASL_X64_ASLDLINK_PATH       = DEF(CYGWIN_BINX64)ld
*_CYGGCCxASL_X64_RC_PATH             = DEF(CYGWIN_BINX64)objcopy

*_CYGGCCxASL_X64_CC_FLAGS            = DEF(GCC_X64_CC_FLAGS)
*_CYGGCCxASL_X64_RC_FLAGS            = DEF(GCC_X64_RC_FLAGS)

##################
# IPF definitions
##################
*_CYGGCCxASL_IPF_CC_PATH             = DEF(CYGWIN_BINIPF)gcc
*_CYGGCCxASL_IPF_SLINK_PATH          = DEF(CYGWIN_BINIPF)ar
*_CYGGCCxASL_IPF_DLINK_PATH          = DEF(CYGWIN_BINIPF)ld
*_CYGGCCxASL_IPF_ASLDLINK_PATH       = DEF(CYGWIN_BINIPF)ld
*_CYGGCCxASL_IPF_ASM_PATH            = DEF(CYGWIN_BINIPF)gcc
*_CYGGCCxASL_IPF_PP_PATH             = DEF(CYGWIN_BINIPF)gcc
*_CYGGCCxASL_IPF_VFRPP_PATH          = DEF(CYGWIN_BINIPF)gcc
*_CYGGCCxASL_IPF_ASLCC_PATH          = DEF(CYGWIN_BINIPF)gcc
*_CYGGCCxASL_IPF_ASLPP_PATH          = DEF(CYGWIN_BINIPF)gcc
*_CYGGCCxASL_IPF_OBJCOPY_PATH        = DEF(CYGWIN_BINIPF)objcopy
*_CYGGCCxASL_IPF_SYMRENAME_PATH      = DEF(CYGWIN_BINIPF)objcopy
*_CYGGCCxASL_IPF_RC_PATH             = DEF(CYGWIN_BINIPF)objcopy

*_CYGGCCxASL_IPF_CC_FLAGS             = DEF(GCC_IPF_CC_FLAGS)
*_CYGGCCxASL_IPF_DLINK_FLAGS          = DEF(GCC_IPF_DLINK_FLAGS)
*_CYGGCCxASL_IPF_OBJCOPY_FLAGS        = DEF(GCC_IPF_OBJCOPY_FLAGS)
*_CYGGCCxASL_IPF_SYMRENAME_FLAGS      = DEF(GCC_IPF_SYMRENAME_FLAGS)
*_CYGGCCxASL_IPF_RC_FLAGS             = DEF(GCC_IPF_RC_FLAGS)

##################
# EBC definitions
##################
*_CYGGCCxASL_EBC_*_FAMILY      = INTEL

*_CYGGCCxASL_EBC_PP_PATH       = DEF(EBC_BIN)\iec.exe
*_CYGGCCxASL_EBC_CC_PATH       = DEF(EBC_BIN)\iec.exe
*_CYGGCCxASL_EBC_DLINK_PATH    = DEF(EBC_BIN)\link.exe
*_CYGGCCxASL_EBC_SLINK_PATH    = DEF(EBC_BIN)\link.exe
*_CYGGCCxASL_EBC_VFRPP_PATH    = DEF(EBC_BIN)\iec.exe
*_CYGGCCxASL_EBC_RC_PATH       = DEF(MS_VS_BIN)\rc.exe

*_CYGGCCxASL_EBC_CC_FLAGS           = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_CYGGCCxASL_EBC_SLINK_FLAGS        = /lib /NOLOGO /MACHINE:EBC
*_CYGGCCxASL_EBC_DLINK_FLAGS        = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /ALIGN:32 /DRIVER

####################################################################################
#
# Elf GCC - This configuration is used to compile on Linux boxes to produce elf
#           binaries.
#
####################################################################################
#   ELFGCC           - Linux ELF GCC
*_ELFGCC_*_*_FAMILY                 = GCC
*_ELFGCC_*_*_BUILDRULEFAMILY        = GCCLD
*_ELFGCC_*_MAKE_PATH                = make

*_ELFGCC_*_PP_FLAGS                     = -E -x assembler-with-cpp -include AutoGen.h
*_ELFGCC_*_VFRPP_FLAGS                  = -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h

##################
# ASL definitions
##################
*_ELFGCC_*_ASL_PATH                     = DEF(UNIX_IASL_BIN)
*_ELFGCC_*_ASL_FLAGS                    = DEF(IASL_FLAGS)
*_ELFGCC_*_ASL_OUTFLAGS                 = DEF(IASL_OUTFLAGS)
*_ELFGCC_*_ASLPP_FLAGS                  = -x c -E -include AutoGen.h
*_ELFGCC_*_ASLCC_FLAGS                  = -x c
*_ELFGCC_*_ASLDLINK_FLAGS               = DEF(GCC_DLINK_FLAGS_COMMON) --entry _ReferenceAcpiTable

##################
# IA32 definitions
##################
*_ELFGCC_IA32_OBJCOPY_PATH          = DEF(ELFGCC_BIN)/objcopy
*_ELFGCC_IA32_CC_PATH               = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_SLINK_PATH            = DEF(ELFGCC_BIN)/ar
*_ELFGCC_IA32_DLINK_PATH            = DEF(ELFGCC_BIN)/ld
*_ELFGCC_IA32_ASM_PATH              = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_PP_PATH               = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_VFRPP_PATH            = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_ASLCC_PATH            = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_ASLPP_PATH            = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_ASLDLINK_PATH         = DEF(ELFGCC_BIN)/ld
*_ELFGCC_IA32_RC_PATH               = DEF(ELFGCC_BIN)/objcopy

*_ELFGCC_IA32_CC_FLAGS              = -m32 -g -fshort-wchar -fno-strict-aliasing -Wall -malign-double -include $(DEST_DIR_DEBUG)/AutoGen.h -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings
*_ELFGCC_IA32_SLINK_FLAGS           =
*_ELFGCC_IA32_DLINK_FLAGS           = -melf_i386 -nostdlib --shared --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
#*_ELFGCC_IA32_DLINK_FLAGS          = -melf_i386 -nostdlib -n -q -Ttext 0x220 --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT)
*_ELFGCC_IA32_ASM_FLAGS             = -m32 -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_IA32_PP_FLAGS              = -m32 -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_IA32_VFRPP_FLAGS           = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_ELFGCC_IA32_RC_FLAGS              = DEF(GCC_IA32_RC_FLAGS)
*_ELFGCC_IA32_OBJCOPY_FLAGS         =
*_ELFGCC_IA32_NASM_FLAGS            = -f elf32

##################
# X64 definitions
##################
*_ELFGCC_X64_CC_PATH               = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_ASLCC_PATH            = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_SLINK_PATH            = DEF(ELFGCC_BIN)/ar
*_ELFGCC_X64_DLINK_PATH            = DEF(ELFGCC_BIN)/ld
*_ELFGCC_X64_ASLDLINK_PATH         = DEF(ELFGCC_BIN)/ld
*_ELFGCC_X64_ASM_PATH              = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_PP_PATH               = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_ASLPP_PATH            = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_VFRPP_PATH            = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_RC_PATH               = DEF(ELFGCC_BIN)/objcopy

*_ELFGCC_X64_CC_FLAGS              = -Os -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-address -Wno-array-bounds -include AutoGen.h -D_EFI_P64
*_ELFGCC_X64_DLINK_FLAGS           = -nostdlib --shared --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_ELFGCC_X64_SLINK_FLAGS           =
*_ELFGCC_X64_ASM_FLAGS             = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_X64_PP_FLAGS              = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_X64_VFRPP_FLAGS           = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_ELFGCC_X64_RC_FLAGS              = DEF(GCC_X64_RC_FLAGS)
*_ELFGCC_X64_NASM_FLAGS            = -f elf64

##################
# IPF definitions
##################
*_ELFGCC_IPF_CC_PATH              = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_ASLCC_PATH           = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_SLINK_PATH           = DEF(ELFGCC_BIN)/ar
*_ELFGCC_IPF_DLINK_PATH           = DEF(ELFGCC_BIN)/ld
*_ELFGCC_IPF_ASLDLINK_PATH        = DEF(ELFGCC_BIN)/ld
*_ELFGCC_IPF_ASM_PATH             = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_PP_PATH              = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_ASLPP_PATH           = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_VFRPP_PATH           = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_RC_PATH              = DEF(ELFGCC_BIN)/objcopy

*_ELFGCC_IPF_CC_FLAGS             = -Os -fshort-wchar -Wall -Werror -include AutoGen.h -D_EFI_P64
*_ELFGCC_IPF_DLINK_FLAGS          = -nostdlib --shared --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_ELFGCC_IPF_SLINK_FLAGS          =
*_ELFGCC_IPF_ASM_FLAGS            = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_IPF_PP_FLAGS             = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_IPF_VFRPP_FLAGS          = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_ELFGCC_IPF_RC_FLAGS             = DEF(GCC_IPF_RC_FLAGS)

####################################################################################
#
# Intel(R) C++ Compiler Version 9.1
#
#   IPF  - Intel(R) C++ Compiler for Itanium(R)Version 9.1  Build 20060928 Package ID: W_CC_C_9.1.032
#   ASL  - Intel ACPI Source Language Compiler
#
####################################################################################
#   ICC              - Intel C Compiler V9.1
*_ICC_*_*_FAMILY                    = INTEL

*_ICC_*_MAKE_PATH                   = DEF(MS_VS_BIN)\nmake.exe
*_ICC_*_RC_PATH                     = DEF(MS_VS_BIN)\rc.exe

*_ICC_*_MAKE_FLAGS                       = /nologo
*_ICC_*_VFRPP_FLAGS                      = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICC_*_APP_FLAGS                        = /nologo /E /TC
*_ICC_*_PP_FLAGS                         = /nologo /E /TC /FIAutoGen.h

*_ICC_*_ASM16_PATH      = DEF(MS_VS_BIN)\ml.exe

##################
# ASL definitions
##################
*_ICC_*_ASL_PATH        = DEF(DEFAULT_WIN_ASL_BIN)
*_ICC_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_ICC_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_ICC_*_ASLCC_FLAGS     = DEF(ICC_WIN_ASLCC_FLAGS)
*_ICC_*_ASLPP_FLAGS     = DEF(ICC_WIN_ASLPP_FLAGS)
*_ICC_*_ASLDLINK_FLAGS  = DEF(ICC_WIN_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_ICC_IA32_CC_PATH                  = DEF(ICC_BIN32)\icl.exe
*_ICC_IA32_SLINK_PATH               = DEF(ICC_BIN32)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC_IA32_SLINK_DLL                = DEF(MS_VS_BIN)
*_ICC_IA32_DLINK_PATH               = DEF(ICC_BIN32)\xilink.exe
*_ICC_IA32_PP_PATH                  = DEF(ICC_BIN32)\icl.exe
*_ICC_IA32_VFRPP_PATH               = DEF(ICC_BIN32)\icl.exe
*_ICC_IA32_APP_PATH                 = DEF(ICC_BIN32)\icl.exe
*_ICC_IA32_ASM_PATH                 = DEF(MS_VS_BIN)\ml.exe
*_ICC_IA32_ASM_DLL                  = DEF(MS_VS_DLL)
*_ICC_IA32_ASLCC_PATH               = DEF(ICC_BIN32)\icl.exe
*_ICC_IA32_ASLPP_PATH               = DEF(ICC_BIN32)\icl.exe
*_ICC_IA32_ASLDLINK_PATH            = DEF(ICC_BIN32)\xilink.exe

  DEBUG_ICC_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm
RELEASE_ICC_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF
NOOPT_ICC_IA32_CC_FLAGS                  = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm /Od

  DEBUG_ICC_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd /Zi
RELEASE_ICC_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd
NOOPT_ICC_IA32_ASM_FLAGS                 = /nologo /c /WX /W3 /Zd /Zi
  DEBUG_ICC_IA32_NASM_FLAGS              = -Ox -f win32 -g
RELEASE_ICC_IA32_NASM_FLAGS              = -Ox -f win32
NOOPT_ICC_IA32_NASM_FLAGS                = -O0 -f win32 -g

      *_ICC_IA32_SLINK_FLAGS             = /nologo
  DEBUG_ICC_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICC_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICC_IA32_DLINK_FLAGS               = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_ICC_X64_CC_PATH                   = DEF(ICC_BINX64)\icl.exe
*_ICC_X64_SLINK_PATH                = DEF(ICC_BINX64)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC_X64_SLINK_DLL                 = DEF(MS_VS_BIN)
*_ICC_X64_DLINK_PATH                = DEF(ICC_BINX64)\xilink.exe
*_ICC_X64_PP_PATH                   = DEF(ICC_BINX64)\icl.exe
*_ICC_X64_VFRPP_PATH                = DEF(ICC_BINX64)\icl.exe
*_ICC_X64_APP_PATH                  = DEF(ICC_BINX64)\icl.exe
*_ICC_X64_ASM_PATH                  = DEF(WINDDK_BINX64)\ml64.exe
*_ICC_X64_ASM_DLL                   = DEF(MS_VS_DLL)
*_ICC_X64_ASLCC_PATH                = DEF(ICC_BINX64)\icl.exe
*_ICC_X64_ASLPP_PATH                = DEF(ICC_BINX64)\icl.exe
*_ICC_X64_ASLDLINK_PATH             = DEF(ICC_BINX64)\xilink.exe

  DEBUG_ICC_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF
RELEASE_ICC_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /EHs-c- /GF
NOOPT_ICC_X64_CC_FLAGS                   = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF /Od

  DEBUG_ICC_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_ICC_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd
NOOPT_ICC_X64_ASM_FLAGS                  = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_ICC_X64_NASM_FLAGS               = -Ox -f win64 -g
RELEASE_ICC_X64_NASM_FLAGS               = -Ox -f win64
NOOPT_ICC_X64_NASM_FLAGS                 = -O0 -f win64 -g

  DEBUG_ICC_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICC_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICC_X64_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG    

      *_ICC_X64_SLINK_FLAGS              = /nologo /LTCG


##################
# IPF definitions
##################
*_ICC_IPF_CC_PATH                   = DEF(ICC_BIN64)\icl.exe
# icl.exe needs cl.exe from Visual Studio
*_ICC_IPF_CC_DLL                    = DEF(MS_VS_BIN)
*_ICC_IPF_SLINK_PATH                = DEF(ICC_BIN64)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC_IPF_SLINK_DLL                 = DEF(MS_VS_BIN);DEF(MS_VS_DLL)
*_ICC_IPF_DLINK_PATH                = DEF(ICC_BIN64)\xilink.exe
*_ICC_IPF_PP_PATH                   = DEF(ICC_BIN64)\icl.exe
*_ICC_IPF_VFRPP_PATH                = DEF(ICC_BIN64)\icl.exe
*_ICC_IPF_APP_PATH                  = DEF(ICC_BIN64)\icl.exe
*_ICC_IPF_ASM_PATH                  = DEF(ICC_BIN64)\ias.exe
*_ICC_IPF_ASLCC_PATH                = DEF(ICC_BIN64)\icl.exe
*_ICC_IPF_ASLPP_PATH                = DEF(ICC_BIN64)\icl.exe
*_ICC_IPF_ASLDLINK_PATH             = DEF(ICC_BIN64)\xilink.exe

  DEBUG_ICC_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Zi
RELEASE_ICC_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF
NOOPT_ICC_IPF_CC_FLAGS                   = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Zi

  DEBUG_ICC_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32
RELEASE_ICC_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -F COFF32
NOOPT_ICC_IPF_ASM_FLAGS                  = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32

  DEBUG_ICC_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_ICC_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
NOOPT_ICC_IPF_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG   

      *_ICC_IPF_SLINK_FLAGS              = /nologo

##################
# EBC definitions
##################
*_ICC_EBC_*_FAMILY              = INTEL

*_ICC_EBC_MAKE_PATH             = DEF(MS_VS_BIN)\nmake.exe
*_ICC_EBC_PP_PATH               = DEF(EBC_BIN)\iec.exe
*_ICC_EBC_VFRPP_PATH            = DEF(EBC_BIN)\iec.exe
*_ICC_EBC_CC_PATH               = DEF(EBC_BIN)\iec.exe
*_ICC_EBC_SLINK_PATH            = DEF(EBC_BIN)\link.exe
*_ICC_EBC_DLINK_PATH            = DEF(EBC_BIN)\link.exe

*_ICC_EBC_MAKE_FLAGS                 = /nologo
*_ICC_EBC_PP_FLAGS                   = /nologo /E /TC /FIAutoGen.h
*_ICC_EBC_CC_FLAGS                   = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_ICC_EBC_VFRPP_FLAGS                = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICC_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
*_ICC_EBC_DLINK_FLAGS                = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER

####################################################################################
#
# Intel(R) C++ Compiler Version 9.1
#
#   IPF  - Intel(R) C++ Compiler for Itanium(R)Version 9.1  Build 20060928 Package ID: W_CC_C_9.1.032
#   ASL  - Microsoft ACPI Source Language Compiler
#
####################################################################################
#   ICCxASL              - Intel C Compiler V9.1
*_ICCxASL_*_*_FAMILY                    = INTEL

*_ICCxASL_*_MAKE_PATH                   = DEF(MS_VS_BIN)\nmake.exe
*_ICCxASL_*_RC_PATH                     = DEF(MS_VS_BIN)\rc.exe

*_ICCxASL_*_MAKE_FLAGS                       = /nologo
*_ICCxASL_*_VFRPP_FLAGS                      = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICCxASL_*_APP_FLAGS                        = /nologo /E /TC
*_ICCxASL_*_PP_FLAGS                         = /nologo /E /TC /FIAutoGen.h

*_ICCxASL_*_ASM16_PATH      = DEF(MS_VS_BIN)\ml.exe

##################
# ASL definitions
##################
*_ICCxASL_*_ASL_PATH        = DEF(DEFAULT_WIN_ASL_BIN)
*_ICCxASL_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_ICCxASL_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_ICCxASL_*_ASLCC_FLAGS     = DEF(ICC_WIN_ASLCC_FLAGS)
*_ICCxASL_*_ASLPP_FLAGS     = DEF(ICC_WIN_ASLPP_FLAGS)
*_ICCxASL_*_ASLDLINK_FLAGS  = DEF(ICC_WIN_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_ICCxASL_IA32_CC_PATH                  = DEF(ICC_BIN32)\icl.exe
*_ICCxASL_IA32_SLINK_PATH               = DEF(ICC_BIN32)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICCxASL_IA32_SLINK_DLL                = DEF(MS_VS_BIN)
*_ICCxASL_IA32_DLINK_PATH               = DEF(ICC_BIN32)\xilink.exe
*_ICCxASL_IA32_PP_PATH                  = DEF(ICC_BIN32)\icl.exe
*_ICCxASL_IA32_VFRPP_PATH               = DEF(ICC_BIN32)\icl.exe
*_ICCxASL_IA32_APP_PATH                 = DEF(ICC_BIN32)\icl.exe
*_ICCxASL_IA32_ASM_PATH                 = DEF(MS_VS_BIN)\ml.exe
*_ICCxASL_IA32_ASM_DLL                  = DEF(MS_VS_DLL)
*_ICCxASL_IA32_ASLCC_PATH               = DEF(ICC_BIN32)\icl.exe
*_ICCxASL_IA32_ASLPP_PATH               = DEF(ICC_BIN32)\icl.exe
*_ICCxASL_IA32_ASLDLINK_PATH            = DEF(ICC_BIN32)\xilink.exe

  DEBUG_ICCxASL_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm
RELEASE_ICCxASL_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF
NOOPT_ICCxASL_IA32_CC_FLAGS                  = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm /Od

  DEBUG_ICCxASL_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd /Zi
RELEASE_ICCxASL_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd
NOOPT_ICCxASL_IA32_ASM_FLAGS                 = /nologo /c /WX /W3 /Zd /Zi

  DEBUG_ICCxASL_IA32_NASM_FLAGS              = -Ox -f win32 -g
RELEASE_ICCxASL_IA32_NASM_FLAGS              = -Ox -f win32
NOOPT_ICCxASL_IA32_NASM_FLAGS                = -O0 -f win32 -g

      *_ICCxASL_IA32_SLINK_FLAGS             = /nologo
  DEBUG_ICCxASL_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICCxASL_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICCxASL_IA32_DLINK_FLAGS               = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_ICCxASL_X64_CC_PATH                   = DEF(ICC_BINX64)\icl.exe
*_ICCxASL_X64_SLINK_PATH                = DEF(ICC_BINX64)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICCxASL_X64_SLINK_DLL                 = DEF(MS_VS_BIN)
*_ICCxASL_X64_DLINK_PATH                = DEF(ICC_BINX64)\xilink.exe
*_ICCxASL_X64_PP_PATH                   = DEF(ICC_BINX64)\icl.exe
*_ICCxASL_X64_VFRPP_PATH                = DEF(ICC_BINX64)\icl.exe
*_ICCxASL_X64_APP_PATH                  = DEF(ICC_BINX64)\icl.exe
*_ICCxASL_X64_ASM_PATH                  = DEF(WINDDK_BINX64)\ml64.exe
*_ICCxASL_X64_ASM_DLL                   = DEF(MS_VS_DLL)
*_ICCxASL_X64_ASLCC_PATH                = DEF(ICC_BINX64)\icl.exe
*_ICCxASL_X64_ASLPP_PATH                = DEF(ICC_BINX64)\icl.exe
*_ICCxASL_X64_ASLDLINK_PATH             = DEF(ICC_BINX64)\xilink.exe

  DEBUG_ICCxASL_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF
RELEASE_ICCxASL_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /EHs-c- /GF
NOOPT_ICCxASL_X64_CC_FLAGS                   = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF /Od

  DEBUG_ICCxASL_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_ICCxASL_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd
NOOPT_ICCxASL_X64_ASM_FLAGS                  = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_ICCxASL_X64_NASM_FLAGS               = -Ox -f win64 -g
RELEASE_ICCxASL_X64_NASM_FLAGS               = -Ox -f win64
NOOPT_ICCxASL_X64_NASM_FLAGS                 = -O0 -f win64 -g

  DEBUG_ICCxASL_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICCxASL_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICCxASL_X64_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG  

      *_ICCxASL_X64_SLINK_FLAGS              = /nologo /LTCG


##################
# IPF definitions
##################
*_ICCxASL_IPF_CC_PATH                   = DEF(ICC_BIN64)\icl.exe
# icl.exe needs cl.exe from Visual Studio
*_ICCxASL_IPF_CC_DLL                    = DEF(MS_VS_BIN)
*_ICCxASL_IPF_SLINK_PATH                = DEF(ICC_BIN64)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICCxASL_IPF_SLINK_DLL                 = DEF(MS_VS_BIN);DEF(MS_VS_DLL)
*_ICCxASL_IPF_DLINK_PATH                = DEF(ICC_BIN64)\xilink.exe
*_ICCxASL_IPF_PP_PATH                   = DEF(ICC_BIN64)\icl.exe
*_ICCxASL_IPF_VFRPP_PATH                = DEF(ICC_BIN64)\icl.exe
*_ICCxASL_IPF_APP_PATH                  = DEF(ICC_BIN64)\icl.exe
*_ICCxASL_IPF_ASM_PATH                  = DEF(ICC_BIN64)\ias.exe
*_ICCxASL_IPF_ASLCC_PATH                = DEF(ICC_BIN64)\icl.exe
*_ICCxASL_IPF_ASLPP_PATH                = DEF(ICC_BIN64)\icl.exe
*_ICCxASL_IPF_ASLDLINK_PATH             = DEF(ICC_BIN64)\xilink.exe

  DEBUG_ICCxASL_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Zi
RELEASE_ICCxASL_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF
NOOPT_ICCxASL_IPF_CC_FLAGS                   = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Zi

  DEBUG_ICCxASL_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32
RELEASE_ICCxASL_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -F COFF32
NOOPT_ICCxASL_IPF_ASM_FLAGS                  = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32

  DEBUG_ICCxASL_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_ICCxASL_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
NOOPT_ICCxASL_IPF_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG

      *_ICCxASL_IPF_SLINK_FLAGS              = /nologo

##################
# EBC definitions
##################
*_ICCxASL_EBC_*_FAMILY              = INTEL

*_ICCxASL_EBC_MAKE_PATH             = DEF(MS_VS_BIN)\nmake.exe
*_ICCxASL_EBC_PP_PATH               = DEF(EBC_BIN)\iec.exe
*_ICCxASL_EBC_VFRPP_PATH            = DEF(EBC_BIN)\iec.exe
*_ICCxASL_EBC_CC_PATH               = DEF(EBC_BIN)\iec.exe
*_ICCxASL_EBC_SLINK_PATH            = DEF(EBC_BIN)\link.exe
*_ICCxASL_EBC_DLINK_PATH            = DEF(EBC_BIN)\link.exe

*_ICCxASL_EBC_MAKE_FLAGS                 = /nologo
*_ICCxASL_EBC_PP_FLAGS                   = /nologo /E /TC /FIAutoGen.h
*_ICCxASL_EBC_CC_FLAGS                   = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_ICCxASL_EBC_VFRPP_FLAGS                = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICCxASL_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
*_ICCxASL_EBC_DLINK_FLAGS                = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Intel(R) C++ Compiler Version 9.1 x86 (32-bit on 64-bit OS)
#
#   ICCx86  - Intel(R) C++ Compiler for Itanium(R)Version 9.1  Build 20060928 Package ID: W_CC_C_9.1.032
#   ASL  - Intel ACPI Source Language Compiler
#
####################################################################################
#   ICCx86              - Intel C Compiler V9.1
*_ICCx86_*_*_FAMILY                    = INTEL

*_ICCx86_*_MAKE_PATH                   = DEF(MS_VS_BIN)\nmake.exe
*_ICCx86_*_RC_PATH                     = DEF(MS_VS_BIN)\rc.exe

*_ICCx86_*_MAKE_FLAGS                       = /nologo
*_ICCx86_*_VFRPP_FLAGS                      = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICCx86_*_APP_FLAGS                        = /nologo /E /TC
*_ICCx86_*_PP_FLAGS                         = /nologo /E /TC /FIAutoGen.h

*_ICCx86_*_ASM16_PATH      = DEF(MS_VS_BIN)\ml.exe

##################
# ASL definitions
##################
*_ICCx86_*_ASL_PATH        = DEF(DEFAULT_WIN_ASL_BIN)
*_ICCx86_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_ICCx86_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_ICCx86_*_ASLCC_FLAGS     = DEF(ICC_WIN_ASLCC_FLAGS)
*_ICCx86_*_ASLPP_FLAGS     = DEF(ICC_WIN_ASLPP_FLAGS)
*_ICCx86_*_ASLDLINK_FLAGS  = DEF(ICC_WIN_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_ICCx86_IA32_CC_PATH                  = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86_IA32_SLINK_PATH               = DEF(ICC_BIN32x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICCx86_IA32_SLINK_DLL                = DEF(MS_VS_BIN)
*_ICCx86_IA32_DLINK_PATH               = DEF(ICC_BIN32x86)\xilink.exe
*_ICCx86_IA32_PP_PATH                  = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86_IA32_VFRPP_PATH               = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86_IA32_APP_PATH                 = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86_IA32_ASM_PATH                 = DEF(MS_VS_BIN)\ml.exe
*_ICCx86_IA32_ASM_DLL                  = DEF(MS_VS_DLL)
*_ICCx86_IA32_ASLCC_PATH               = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86_IA32_ASLPP_PATH               = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86_IA32_ASLDLINK_PATH            = DEF(ICC_BIN32x86)\xilink.exe

  DEBUG_ICCx86_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm
RELEASE_ICCx86_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF
NOOPT_ICCx86_IA32_CC_FLAGS                  = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm /Od

  DEBUG_ICCx86_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd /Zi
RELEASE_ICCx86_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd
NOOPT_ICCx86_IA32_ASM_FLAGS                 = /nologo /c /WX /W3 /Zd /Zi

  DEBUG_ICCx86_IA32_NASM_FLAGS              = -Ox -f win32 -g
RELEASE_ICCx86_IA32_NASM_FLAGS              = -Ox -f win32
NOOPT_ICCx86_IA32_NASM_FLAGS                = -O0 -f win32 -g

      *_ICCx86_IA32_SLINK_FLAGS             = /nologo
  DEBUG_ICCx86_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICCx86_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICCx86_IA32_DLINK_FLAGS               = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_ICCx86_X64_CC_PATH                   = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86_X64_SLINK_PATH                = DEF(ICC_BINX64x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICCx86_X64_SLINK_DLL                 = DEF(MS_VS_BIN)
*_ICCx86_X64_DLINK_PATH                = DEF(ICC_BINX64x86)\xilink.exe
*_ICCx86_X64_PP_PATH                   = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86_X64_VFRPP_PATH                = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86_X64_APP_PATH                  = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86_X64_ASM_PATH                  = DEF(WINDDK_BINX64)\ml64.exe
*_ICCx86_X64_ASM_DLL                   = DEF(MS_VS_DLL)
*_ICCx86_X64_ASLCC_PATH                = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86_X64_ASLPP_PATH                = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86_X64_ASLDLINK_PATH             = DEF(ICC_BINX64x86)\xilink.exe

  DEBUG_ICCx86_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF
RELEASE_ICCx86_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /EHs-c- /GF
NOOPT_ICCx86_X64_CC_FLAGS                   = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF /Od

  DEBUG_ICCx86_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_ICCx86_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd
NOOPT_ICCx86_X64_ASM_FLAGS                  = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_ICCx86_X64_NASM_FLAGS               = -Ox -f win64 -g
RELEASE_ICCx86_X64_NASM_FLAGS               = -Ox -f win64
NOOPT_ICCx86_X64_NASM_FLAGS                 = -O0 -f win64 -g

  DEBUG_ICCx86_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICCx86_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICCx86_X64_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

      *_ICCx86_X64_SLINK_FLAGS              = /nologo /LTCG


##################
# IPF definitions
##################
*_ICCx86_IPF_CC_PATH                   = DEF(ICC_BIN64x86)\icl.exe
# icl.exe needs cl.exe from Visual Studio
*_ICCx86_IPF_CC_DLL                    = DEF(MS_VS_BIN)
*_ICCx86_IPF_SLINK_PATH                = DEF(ICC_BIN64x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICCx86_IPF_SLINK_DLL                 = DEF(MS_VS_BIN);DEF(MS_VS_DLL)
*_ICCx86_IPF_DLINK_PATH                = DEF(ICC_BIN64x86)\xilink.exe
*_ICCx86_IPF_PP_PATH                   = DEF(ICC_BIN64x86)\icl.exe
*_ICCx86_IPF_VFRPP_PATH                = DEF(ICC_BIN64x86)\icl.exe
*_ICCx86_IPF_APP_PATH                  = DEF(ICC_BIN64x86)\icl.exe
*_ICCx86_IPF_ASM_PATH                  = DEF(ICC_BIN64x86)\ias.exe
*_ICCx86_IPF_ASLCC_PATH                = DEF(ICC_BIN64x86)\icl.exe
*_ICCx86_IPF_ASLPP_PATH                = DEF(ICC_BIN64x86)\icl.exe
*_ICCx86_IPF_ASLDLINK_PATH             = DEF(ICC_BIN64x86)\xilink.exe

  DEBUG_ICCx86_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Zi
RELEASE_ICCx86_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF
NOOPT_ICCx86_IPF_CC_FLAGS                   = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Zi

  DEBUG_ICCx86_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32
RELEASE_ICCx86_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -F COFF32
NOOPT_ICCx86_IPF_ASM_FLAGS                  = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32

  DEBUG_ICCx86_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_ICCx86_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
NOOPT_ICCx86_IPF_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG

      *_ICCx86_IPF_SLINK_FLAGS              = /nologo

##################
# EBC definitions
##################
*_ICCx86_EBC_*_FAMILY              = INTEL

*_ICCx86_EBC_MAKE_PATH             = DEF(MS_VS_BIN)\nmake.exe
*_ICCx86_EBC_PP_PATH               = DEF(EBC_BINx86)\iec.exe
*_ICCx86_EBC_VFRPP_PATH            = DEF(EBC_BINx86)\iec.exe
*_ICCx86_EBC_CC_PATH               = DEF(EBC_BINx86)\iec.exe
*_ICCx86_EBC_SLINK_PATH            = DEF(EBC_BINx86)\link.exe
*_ICCx86_EBC_DLINK_PATH            = DEF(EBC_BINx86)\link.exe

*_ICCx86_EBC_MAKE_FLAGS                 = /nologo
*_ICCx86_EBC_PP_FLAGS                   = /nologo /E /TC /FIAutoGen.h
*_ICCx86_EBC_CC_FLAGS                   = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_ICCx86_EBC_VFRPP_FLAGS                = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICCx86_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
*_ICCx86_EBC_DLINK_FLAGS                = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Intel(R) C++ Compiler Version 9.1 x86 (32-bit on 64-bit OS)
#
#   ICCx86xASL  - Intel(R) C++ Compiler for Itanium(R)Version 9.1  Build 20060928 Package ID: W_CC_C_9.1.032
#   ASL  - Microsoft ACPI Source Language Compiler
#
####################################################################################
#   ICCx86xASL              - Intel C Compiler V9.1
*_ICCx86xASL_*_*_FAMILY                    = INTEL

*_ICCx86xASL_*_MAKE_PATH                   = DEF(MS_VS_BIN)\nmake.exe
*_ICCx86xASL_*_RC_PATH                     = DEF(MS_VS_BIN)\rc.exe

*_ICCx86xASL_*_MAKE_FLAGS                       = /nologo
*_ICCx86xASL_*_VFRPP_FLAGS                      = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICCx86xASL_*_APP_FLAGS                        = /nologo /E /TC
*_ICCx86xASL_*_PP_FLAGS                         = /nologo /E /TC /FIAutoGen.h

*_ICCx86ASL_*_ASM16_PATH      = DEF(MS_VS_BIN)\ml.exe

##################
# ASL definitions
##################
*_ICCx86xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_ICCx86xASL_*_ASL_FLAGS       =
*_ICCx86xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_ICCx86xASL_*_ASLCC_FLAGS     = DEF(ICC_WIN_ASLCC_FLAGS)
*_ICCx86xASL_*_ASLPP_FLAGS     = DEF(ICC_WIN_ASLPP_FLAGS)
*_ICCx86xASL_*_ASLDLINK_FLAGS  = DEF(ICC_WIN_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_ICCx86xASL_IA32_CC_PATH                  = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86xASL_IA32_SLINK_PATH               = DEF(ICC_BIN32x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICCx86xASL_IA32_SLINK_DLL                = DEF(MS_VS_BIN)
*_ICCx86xASL_IA32_DLINK_PATH               = DEF(ICC_BIN32x86)\xilink.exe
*_ICCx86xASL_IA32_PP_PATH                  = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86xASL_IA32_VFRPP_PATH               = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86xASL_IA32_APP_PATH                 = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86xASL_IA32_ASM_PATH                 = DEF(MS_VS_BIN)\ml.exe
*_ICCx86xASL_IA32_ASM_DLL                  = DEF(MS_VS_DLL)
*_ICCx86xASL_IA32_ASLCC_PATH               = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86xASL_IA32_ASLPP_PATH               = DEF(ICC_BIN32x86)\icl.exe
*_ICCx86xASL_IA32_ASLDLINK_PATH            = DEF(ICC_BIN32x86)\xilink.exe

  DEBUG_ICCx86xASL_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm
RELEASE_ICCx86xASL_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF
NOOPT_ICCx86xASL_IA32_CC_FLAGS                  = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm /Od

  DEBUG_ICCx86xASL_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd /Zi
RELEASE_ICCx86xASL_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd
NOOPT_ICCx86xASL_IA32_ASM_FLAGS                 = /nologo /c /WX /W3 /Zd /Zi

  DEBUG_ICCx86xASL_IA32_NASM_FLAGS              = -Ox -f win32 -g
RELEASE_ICCx86xASL_IA32_NASM_FLAGS              = -Ox -f win32
NOOPT_ICCx86xASL_IA32_NASM_FLAGS                = -O0 -f win32 -g

      *_ICCx86xASL_IA32_SLINK_FLAGS             = /nologo
  DEBUG_ICCx86xASL_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICCx86xASL_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICCx86xASL_IA32_DLINK_FLAGS               = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_ICCx86xASL_X64_CC_PATH                   = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86xASL_X64_SLINK_PATH                = DEF(ICC_BINX64x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICCx86xASL_X64_SLINK_DLL                 = DEF(MS_VS_BIN)
*_ICCx86xASL_X64_DLINK_PATH                = DEF(ICC_BINX64x86)\xilink.exe
*_ICCx86xASL_X64_PP_PATH                   = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86xASL_X64_VFRPP_PATH                = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86xASL_X64_APP_PATH                  = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86xASL_X64_ASM_PATH                  = DEF(WINDDK_BINX64)\ml64.exe
*_ICCx86xASL_X64_ASM_DLL                   = DEF(MS_VS_DLL)
*_ICCx86xASL_X64_ASLCC_PATH                = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86xASL_X64_ASLPP_PATH                = DEF(ICC_BINX64x86)\icl.exe
*_ICCx86xASL_X64_ASLDLINK_PATH             = DEF(ICC_BINX64x86)\xilink.exe

  DEBUG_ICCx86xASL_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF
RELEASE_ICCx86xASL_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /EHs-c- /GF
NOOPT_ICCx86xASL_X64_CC_FLAGS                   = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF /Od

  DEBUG_ICCx86xASL_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_ICCx86xASL_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd
NOOPT_ICCx86xASL_X64_ASM_FLAGS                  = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_ICCx86xASL_X64_NASM_FLAGS               = -Ox -f win64 -g
RELEASE_ICCx86xASL_X64_NASM_FLAGS               = -Ox -f win64
NOOPT_ICCx86xASL_X64_NASM_FLAGS                 = -O0 -f win64 -g

  DEBUG_ICCx86xASL_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICCx86xASL_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICCx86xASL_X64_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
 
      *_ICCx86xASL_X64_SLINK_FLAGS              = /nologo /LTCG


##################
# IPF definitions
##################
*_ICCx86xASL_IPF_CC_PATH                   = DEF(ICC_BIN64x86)\icl.exe
# icl.exe needs cl.exe from Visual Studio
*_ICCx86xASL_IPF_CC_DLL                    = DEF(MS_VS_BIN)
*_ICCx86xASL_IPF_SLINK_PATH                = DEF(ICC_BIN64x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICCx86xASL_IPF_SLINK_DLL                 = DEF(MS_VS_BIN);DEF(MS_VS_DLL)
*_ICCx86xASL_IPF_DLINK_PATH                = DEF(ICC_BIN64x86)\xilink.exe
*_ICCx86xASL_IPF_PP_PATH                   = DEF(ICC_BIN64x86)\icl.exe
*_ICCx86xASL_IPF_VFRPP_PATH                = DEF(ICC_BIN64x86)\icl.exe
*_ICCx86xASL_IPF_APP_PATH                  = DEF(ICC_BIN64x86)\icl.exe
*_ICCx86xASL_IPF_ASM_PATH                  = DEF(ICC_BIN64x86)\ias.exe
*_ICCx86xASL_IPF_ASLCC_PATH                = DEF(ICC_BIN64x86)\icl.exe
*_ICCx86xASL_IPF_ASLPP_PATH                = DEF(ICC_BIN64x86)\icl.exe
*_ICCx86xASL_IPF_ASLDLINK_PATH             = DEF(ICC_BIN64x86)\xilink.exe

  DEBUG_ICCx86xASL_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Zi
RELEASE_ICCx86xASL_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF
NOOPT_ICCx86xASL_IPF_CC_FLAGS                   = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Zi

  DEBUG_ICCx86xASL_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32
RELEASE_ICCx86xASL_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -F COFF32
NOOPT_ICCx86xASL_IPF_ASM_FLAGS                  = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32

  DEBUG_ICCx86xASL_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_ICCx86xASL_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
NOOPT_ICCx86xASL_IPF_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG

      *_ICCx86xASL_IPF_SLINK_FLAGS              = /nologo

##################
# EBC definitions
##################
*_ICCx86xASL_EBC_*_FAMILY              = INTEL

*_ICCx86xASL_EBC_MAKE_PATH             = DEF(MS_VS_BIN)\nmake.exe
*_ICCx86xASL_EBC_PP_PATH               = DEF(EBC_BINx86)\iec.exe
*_ICCx86xASL_EBC_VFRPP_PATH            = DEF(EBC_BINx86)\iec.exe
*_ICCx86xASL_EBC_CC_PATH               = DEF(EBC_BINx86)\iec.exe
*_ICCx86xASL_EBC_SLINK_PATH            = DEF(EBC_BINx86)\link.exe
*_ICCx86xASL_EBC_DLINK_PATH            = DEF(EBC_BINx86)\link.exe

*_ICCx86xASL_EBC_MAKE_FLAGS                 = /nologo
*_ICCx86xASL_EBC_PP_FLAGS                   = /nologo /E /TC /FIAutoGen.h
*_ICCx86xASL_EBC_CC_FLAGS                   = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_ICCx86xASL_EBC_VFRPP_FLAGS                = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICCx86xASL_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
*_ICCx86xASL_EBC_DLINK_FLAGS                = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Intel(R) C++ Compiler Version 11.1
#   IA32 - Intel(R) C++ Compiler for applications running on IA32         (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_ia32)
#   X64  - Intel(R) C++ Compiler for applications running on Intel(R) 64  (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_intel64)
#   IPF  - Intel(R) C++ Compiler for applications running on IA-64        (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_ia64)
#   ASL  - Intel ACPI Source Language Compiler
#
####################################################################################
#   ICC11            - Intel C Compiler V11.1
*_ICC11_*_*_FAMILY                    = INTEL

*_ICC11_*_MAKE_PATH                   = DEF(MS_VS_BIN)\nmake.exe
*_ICC11_*_RC_PATH                     = DEF(MS_VS_BIN)\rc.exe

*_ICC11_*_MAKE_FLAGS                       = /nologo
*_ICC11_*_VFRPP_FLAGS                      = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICC11_*_APP_FLAGS                        = /nologo /E /TC
*_ICC11_*_PP_FLAGS                         = /nologo /E /TC /FIAutoGen.h

*_ICC11_*_ASM16_PATH      = DEF(MS_VS_BIN)\ml.exe

##################
# ASL definitions
##################
*_ICC11_*_ASL_PATH        = DEF(DEFAULT_WIN_ASL_BIN)
*_ICC11_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_ICC11_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_ICC11_*_ASLCC_FLAGS     = DEF(ICC_WIN_ASLCC_FLAGS)
*_ICC11_*_ASLPP_FLAGS     = DEF(ICC_WIN_ASLPP_FLAGS)
*_ICC11_*_ASLDLINK_FLAGS  = DEF(ICC_WIN_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_ICC11_IA32_CC_PATH                  = DEF(ICC11_BIN32)\icl.exe
*_ICC11_IA32_SLINK_PATH               = DEF(ICC11_BIN32)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11_IA32_SLINK_DLL                = DEF(MS_VS_BIN)
*_ICC11_IA32_DLINK_PATH               = DEF(ICC11_BIN32)\xilink.exe
*_ICC11_IA32_PP_PATH                  = DEF(ICC11_BIN32)\icl.exe
*_ICC11_IA32_VFRPP_PATH               = DEF(ICC11_BIN32)\icl.exe
*_ICC11_IA32_APP_PATH                 = DEF(ICC11_BIN32)\icl.exe
*_ICC11_IA32_ASM_PATH                 = DEF(MS_VS_BIN)\ml.exe
*_ICC11_IA32_ASM_DLL                  = DEF(MS_VS_DLL)
*_ICC11_IA32_ASLCC_PATH               = DEF(ICC11_BIN32)\icl.exe
*_ICC11_IA32_ASLPP_PATH               = DEF(ICC11_BIN32)\icl.exe
*_ICC11_IA32_ASLDLINK_PATH            = DEF(ICC11_BIN32)\xilink.exe

  DEBUG_ICC11_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm
RELEASE_ICC11_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF
NOOPT_ICC11_IA32_CC_FLAGS                  = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm /Od

  DEBUG_ICC11_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd /Zi
RELEASE_ICC11_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd
NOOPT_ICC11_IA32_ASM_FLAGS                 = /nologo /c /WX /W3 /Zd /Zi

  DEBUG_ICC11_IA32_NASM_FLAGS              = -Ox -f win32 -g
RELEASE_ICC11_IA32_NASM_FLAGS              = -Ox -f win32
NOOPT_ICC11_IA32_NASM_FLAGS                = -O0 -f win32 -g

      *_ICC11_IA32_SLINK_FLAGS             = /nologo
  DEBUG_ICC11_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICC11_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICC11_IA32_DLINK_FLAGS               = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_ICC11_X64_CC_PATH                   = DEF(ICC11_BINX64)\icl.exe
*_ICC11_X64_SLINK_PATH                = DEF(ICC11_BINX64)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11_X64_SLINK_DLL                 = DEF(MS_VS_BIN)
*_ICC11_X64_DLINK_PATH                = DEF(ICC11_BINX64)\xilink.exe
*_ICC11_X64_PP_PATH                   = DEF(ICC11_BINX64)\icl.exe
*_ICC11_X64_VFRPP_PATH                = DEF(ICC11_BINX64)\icl.exe
*_ICC11_X64_APP_PATH                  = DEF(ICC11_BINX64)\icl.exe
*_ICC11_X64_ASM_PATH                  = DEF(WINDDK_BINX64)\ml64.exe
*_ICC11_X64_ASM_DLL                   = DEF(MS_VS_DLL)
*_ICC11_X64_ASLCC_PATH                = DEF(ICC11_BINX64)\icl.exe
*_ICC11_X64_ASLPP_PATH                = DEF(ICC11_BINX64)\icl.exe
*_ICC11_X64_ASLDLINK_PATH             = DEF(ICC11_BINX64)\xilink.exe

  DEBUG_ICC11_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF
RELEASE_ICC11_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /EHs-c- /GF
NOOPT_ICC11_X64_CC_FLAGS                   = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF /Od

  DEBUG_ICC11_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_ICC11_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd
NOOPT_ICC11_X64_ASM_FLAGS                  = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_ICC11_X64_NASM_FLAGS               = -Ox -f win64 -g
RELEASE_ICC11_X64_NASM_FLAGS               = -Ox -f win64
NOOPT_ICC11_X64_NASM_FLAGS                 = -O0 -f win64 -g

  DEBUG_ICC11_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICC11_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICC11_X64_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

      *_ICC11_X64_SLINK_FLAGS              = /nologo /LTCG


##################
# IPF definitions
##################
*_ICC11_IPF_CC_PATH                   = DEF(ICC11_BIN64)\icl.exe
# icl.exe needs cl.exe from Visual Studio
*_ICC11_IPF_CC_DLL                    = DEF(MS_VS_BIN)
*_ICC11_IPF_SLINK_PATH                = DEF(ICC11_BIN64)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11_IPF_SLINK_DLL                 = DEF(MS_VS_BIN);DEF(MS_VS_DLL)
*_ICC11_IPF_DLINK_PATH                = DEF(ICC11_BIN64)\xilink.exe
*_ICC11_IPF_PP_PATH                   = DEF(ICC11_BIN64)\icl.exe
*_ICC11_IPF_VFRPP_PATH                = DEF(ICC11_BIN64)\icl.exe
*_ICC11_IPF_APP_PATH                  = DEF(ICC11_BIN64)\icl.exe
*_ICC11_IPF_ASM_PATH                  = DEF(ICC11_BIN64)\ias.exe
*_ICC11_IPF_ASLCC_PATH                = DEF(ICC11_BIN64)\icl.exe
*_ICC11_IPF_ASLPP_PATH                = DEF(ICC11_BIN64)\icl.exe
*_ICC11_IPF_ASLDLINK_PATH             = DEF(ICC11_BIN64)\xilink.exe

  DEBUG_ICC11_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding /Zi
RELEASE_ICC11_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding
NOOPT_ICC11_IPF_CC_FLAGS                   = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding /Zi

  DEBUG_ICC11_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32
RELEASE_ICC11_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -F COFF32
NOOPT_ICC11_IPF_ASM_FLAGS                  = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32
  DEBUG_ICC11_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_ICC11_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
NOOPT_ICC11_IPF_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG

      *_ICC11_IPF_SLINK_FLAGS              = /nologo

##################
# EBC definitions
##################
*_ICC11_EBC_*_FAMILY              = INTEL

*_ICC11_EBC_MAKE_PATH             = DEF(MS_VS_BIN)\nmake.exe
*_ICC11_EBC_PP_PATH               = DEF(EBC_BIN)\iec.exe
*_ICC11_EBC_VFRPP_PATH            = DEF(EBC_BIN)\iec.exe
*_ICC11_EBC_CC_PATH               = DEF(EBC_BIN)\iec.exe
*_ICC11_EBC_SLINK_PATH            = DEF(EBC_BIN)\link.exe
*_ICC11_EBC_DLINK_PATH            = DEF(EBC_BIN)\link.exe

*_ICC11_EBC_MAKE_FLAGS                 = /nologo
*_ICC11_EBC_PP_FLAGS                   = /nologo /E /TC /FIAutoGen.h
*_ICC11_EBC_CC_FLAGS                   = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_ICC11_EBC_VFRPP_FLAGS                = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICC11_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
*_ICC11_EBC_DLINK_FLAGS                = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER

####################################################################################
#
# Intel(R) C++ Compiler Version 11.1
#
#   IA32 - Intel(R) C++ Compiler for applications running on IA32         (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_ia32)
#   X64  - Intel(R) C++ Compiler for applications running on Intel(R) 64  (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_intel64)
#   IPF  - Intel(R) C++ Compiler for applications running on IA-64        (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_ia64)
#   ASL  - Microsoft ACPI Source Language Compiler
#
####################################################################################
#   ICC11xASL              - Intel C Compiler V11.1
*_ICC11xASL_*_*_FAMILY                    = INTEL

*_ICC11xASL_*_MAKE_PATH                   = DEF(MS_VS_BIN)\nmake.exe
*_ICC11xASL_*_RC_PATH                     = DEF(MS_VS_BIN)\rc.exe

*_ICC11xASL_*_MAKE_FLAGS                       = /nologo
*_ICC11xASL_*_VFRPP_FLAGS                      = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICC11xASL_*_APP_FLAGS                        = /nologo /E /TC
*_ICC11xASL_*_PP_FLAGS                         = /nologo /E /TC /FIAutoGen.h

*_ICC11xASL_*_ASM16_PATH      = DEF(MS_VS_BIN)\ml.exe

##################
# ASL definitions
##################
*_ICC11xASL_*_ASL_PATH        = DEF(DEFAULT_WIN_ASL_BIN)
*_ICC11xASL_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_ICC11xASL_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_ICC11xASL_*_ASLCC_FLAGS     = DEF(ICC_WIN_ASLCC_FLAGS)
*_ICC11xASL_*_ASLPP_FLAGS     = DEF(ICC_WIN_ASLPP_FLAGS)
*_ICC11xASL_*_ASLDLINK_FLAGS  = DEF(ICC_WIN_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_ICC11xASL_IA32_CC_PATH                  = DEF(ICC11_BIN32)\icl.exe
*_ICC11xASL_IA32_SLINK_PATH               = DEF(ICC11_BIN32)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11xASL_IA32_SLINK_DLL                = DEF(MS_VS_BIN)
*_ICC11xASL_IA32_DLINK_PATH               = DEF(ICC11_BIN32)\xilink.exe
*_ICC11xASL_IA32_PP_PATH                  = DEF(ICC11_BIN32)\icl.exe
*_ICC11xASL_IA32_VFRPP_PATH               = DEF(ICC11_BIN32)\icl.exe
*_ICC11xASL_IA32_APP_PATH                 = DEF(ICC11_BIN32)\icl.exe
*_ICC11xASL_IA32_ASM_PATH                 = DEF(MS_VS_BIN)\ml.exe
*_ICC11xASL_IA32_ASM_DLL                  = DEF(MS_VS_DLL)
*_ICC11xASL_IA32_ASLCC_PATH               = DEF(ICC11_BIN32)\icl.exe
*_ICC11xASL_IA32_ASLPP_PATH               = DEF(ICC11_BIN32)\icl.exe
*_ICC11xASL_IA32_ASLDLINK_PATH            = DEF(ICC11_BIN32)\xilink.exe

  DEBUG_ICC11xASL_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm
RELEASE_ICC11xASL_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF
NOOPT_ICC11xASL_IA32_CC_FLAGS                  = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm /Od

  DEBUG_ICC11xASL_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd /Zi
RELEASE_ICC11xASL_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd
NOOPT_ICC11xASL_IA32_ASM_FLAGS                 = /nologo /c /WX /W3 /Zd /Zi

  DEBUG_ICC11xASL_IA32_NASM_FLAGS              = -Ox -f win32 -g
RELEASE_ICC11xASL_IA32_NASM_FLAGS              = -Ox -f win32
NOOPT_ICC11xASL_IA32_NASM_FLAGS                = -O0 -f win32 -g

      *_ICC11xASL_IA32_SLINK_FLAGS             = /nologo
  DEBUG_ICC11xASL_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICC11xASL_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICC11xASL_IA32_DLINK_FLAGS               = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_ICC11xASL_X64_CC_PATH                   = DEF(ICC11_BINX64)\icl.exe
*_ICC11xASL_X64_SLINK_PATH                = DEF(ICC11_BINX64)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11xASL_X64_SLINK_DLL                 = DEF(MS_VS_BIN)
*_ICC11xASL_X64_DLINK_PATH                = DEF(ICC11_BINX64)\xilink.exe
*_ICC11xASL_X64_PP_PATH                   = DEF(ICC11_BINX64)\icl.exe
*_ICC11xASL_X64_VFRPP_PATH                = DEF(ICC11_BINX64)\icl.exe
*_ICC11xASL_X64_APP_PATH                  = DEF(ICC11_BINX64)\icl.exe
*_ICC11xASL_X64_ASM_PATH                  = DEF(WINDDK_BINX64)\ml64.exe
*_ICC11xASL_X64_ASM_DLL                   = DEF(MS_VS_DLL)
*_ICC11xASL_X64_ASLCC_PATH                = DEF(ICC11_BINX64)\icl.exe
*_ICC11xASL_X64_ASLPP_PATH                = DEF(ICC11_BINX64)\icl.exe
*_ICC11xASL_X64_ASLDLINK_PATH             = DEF(ICC11_BINX64)\xilink.exe

  DEBUG_ICC11xASL_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF
RELEASE_ICC11xASL_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /EHs-c- /GF
NOOPT_ICC11xASL_X64_CC_FLAGS                   = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF /Od

  DEBUG_ICC11xASL_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_ICC11xASL_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd
NOOPT_ICC11xASL_X64_ASM_FLAGS                  = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_ICC11xASL_X64_NASM_FLAGS               = -Ox -f win64 -g
RELEASE_ICC11xASL_X64_NASM_FLAGS               = -Ox -f win64
NOOPT_ICC11xASL_X64_NASM_FLAGS                 = -O0 -f win64 -g

  DEBUG_ICC11xASL_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICC11xASL_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICC11xASL_X64_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

      *_ICC11xASL_X64_SLINK_FLAGS              = /nologo /LTCG


##################
# IPF definitions
##################
*_ICC11xASL_IPF_CC_PATH                   = DEF(ICC11_BIN64)\icl.exe
# icl.exe needs cl.exe from Visual Studio
*_ICC11xASL_IPF_CC_DLL                    = DEF(MS_VS_BIN)
*_ICC11xASL_IPF_SLINK_PATH                = DEF(ICC11_BIN64)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11xASL_IPF_SLINK_DLL                 = DEF(MS_VS_BIN);DEF(MS_VS_DLL)
*_ICC11xASL_IPF_DLINK_PATH                = DEF(ICC11_BIN64)\xilink.exe
*_ICC11xASL_IPF_PP_PATH                   = DEF(ICC11_BIN64)\icl.exe
*_ICC11xASL_IPF_VFRPP_PATH                = DEF(ICC11_BIN64)\icl.exe
*_ICC11xASL_IPF_APP_PATH                  = DEF(ICC11_BIN64)\icl.exe
*_ICC11xASL_IPF_ASM_PATH                  = DEF(ICC11_BIN64)\ias.exe
*_ICC11xASL_IPF_ASLCC_PATH                = DEF(ICC11_BIN64)\icl.exe
*_ICC11xASL_IPF_ASLPP_PATH                = DEF(ICC11_BIN64)\icl.exe
*_ICC11xASL_IPF_ASLDLINK_PATH             = DEF(ICC11_BIN64)\xilink.exe

  DEBUG_ICC11xASL_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding /Zi
RELEASE_ICC11xASL_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding
NOOPT_ICC11xASL_IPF_CC_FLAGS                   = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding /Zi

  DEBUG_ICC11xASL_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32
RELEASE_ICC11xASL_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -F COFF32
NOOPT_ICC11xASL_IPF_ASM_FLAGS                  = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32

  DEBUG_ICC11xASL_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_ICC11xASL_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
NOOPT_ICC11xASL_IPF_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG

      *_ICC11xASL_IPF_SLINK_FLAGS              = /nologo

##################
# EBC definitions
##################
*_ICC11xASL_EBC_*_FAMILY              = INTEL

*_ICC11xASL_EBC_MAKE_PATH             = DEF(MS_VS_BIN)\nmake.exe
*_ICC11xASL_EBC_PP_PATH               = DEF(EBC_BIN)\iec.exe
*_ICC11xASL_EBC_VFRPP_PATH            = DEF(EBC_BIN)\iec.exe
*_ICC11xASL_EBC_CC_PATH               = DEF(EBC_BIN)\iec.exe
*_ICC11xASL_EBC_SLINK_PATH            = DEF(EBC_BIN)\link.exe
*_ICC11xASL_EBC_DLINK_PATH            = DEF(EBC_BIN)\link.exe

*_ICC11xASL_EBC_MAKE_FLAGS                 = /nologo
*_ICC11xASL_EBC_PP_FLAGS                   = /nologo /E /TC /FIAutoGen.h
*_ICC11xASL_EBC_CC_FLAGS                   = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_ICC11xASL_EBC_VFRPP_FLAGS                = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICC11xASL_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
*_ICC11xASL_EBC_DLINK_FLAGS                = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Intel(R) C++ Compiler Version 11.1 x86 (32-bit on 64-bit OS)
#
#   IA32 - Intel(R) C++ Compiler for applications running on IA32         (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_ia32)
#   X64  - Intel(R) C++ Compiler for applications running on Intel(R) 64  (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_intel64)
#   IPF  - Intel(R) C++ Compiler for applications running on IA-64        (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_ia64)
#   ASL  - Intel ACPI Source Language Compiler
#
####################################################################################
#   ICC11x86              - Intel C Compiler V11.1
*_ICC11x86_*_*_FAMILY                    = INTEL

*_ICC11x86_*_MAKE_PATH                   = DEF(MS_VS_BIN)\nmake.exe
*_ICC11x86_*_RC_PATH                     = DEF(MS_VS_BIN)\rc.exe

*_ICC11x86_*_MAKE_FLAGS                       = /nologo
*_ICC11x86_*_VFRPP_FLAGS                      = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICC11x86_*_APP_FLAGS                        = /nologo /E /TC
*_ICC11x86_*_PP_FLAGS                         = /nologo /E /TC /FIAutoGen.h

*_ICC11x86_*_ASM16_PATH      = DEF(MS_VS_BIN)\ml.exe

##################
# ASL definitions
##################
*_ICC11x86_*_ASL_PATH        = DEF(DEFAULT_WIN_ASL_BIN)
*_ICC11x86_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_ICC11x86_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_ICC11x86_*_ASLCC_FLAGS     = DEF(ICC_WIN_ASLCC_FLAGS)
*_ICC11x86_*_ASLPP_FLAGS     = DEF(ICC_WIN_ASLPP_FLAGS)
*_ICC11x86_*_ASLDLINK_FLAGS  = DEF(ICC_WIN_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_ICC11x86_IA32_CC_PATH                  = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86_IA32_SLINK_PATH               = DEF(ICC11_BIN32x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11x86_IA32_SLINK_DLL                = DEF(MS_VS_BIN)
*_ICC11x86_IA32_DLINK_PATH               = DEF(ICC11_BIN32x86)\xilink.exe
*_ICC11x86_IA32_PP_PATH                  = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86_IA32_VFRPP_PATH               = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86_IA32_APP_PATH                 = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86_IA32_ASM_PATH                 = DEF(MS_VS_BIN)\ml.exe
*_ICC11x86_IA32_ASM_DLL                  = DEF(MS_VS_DLL)
*_ICC11x86_IA32_ASLCC_PATH               = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86_IA32_ASLPP_PATH               = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86_IA32_ASLDLINK_PATH            = DEF(ICC11_BIN32x86)\xilink.exe

  DEBUG_ICC11x86_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm
RELEASE_ICC11x86_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF
NOOPT_ICC11x86_IA32_CC_FLAGS                  = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm /Od
  DEBUG_ICC11x86_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd /Zi
RELEASE_ICC11x86_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd
NOOPT_ICC11x86_IA32_ASM_FLAGS                 = /nologo /c /WX /W3 /Zd /Zi
  DEBUG_ICC11x86_IA32_NASM_FLAGS              = -Ox -f win32 -g
RELEASE_ICC11x86_IA32_NASM_FLAGS              = -Ox -f win32
NOOPT_ICC11x86_IA32_NASM_FLAGS                = -O0 -f win32 -g
      *_ICC11x86_IA32_SLINK_FLAGS             = /nologo
  DEBUG_ICC11x86_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICC11x86_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICC11x86_IA32_DLINK_FLAGS               = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_ICC11x86_X64_CC_PATH                   = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86_X64_SLINK_PATH                = DEF(ICC11_BINX64x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11x86_X64_SLINK_DLL                 = DEF(MS_VS_BIN)
*_ICC11x86_X64_DLINK_PATH                = DEF(ICC11_BINX64x86)\xilink.exe
*_ICC11x86_X64_PP_PATH                   = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86_X64_VFRPP_PATH                = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86_X64_APP_PATH                  = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86_X64_ASM_PATH                  = DEF(WINDDK_BINX64)\ml64.exe
*_ICC11x86_X64_ASM_DLL                   = DEF(MS_VS_DLL)
*_ICC11x86_X64_ASLCC_PATH                = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86_X64_ASLPP_PATH                = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86_X64_ASLDLINK_PATH             = DEF(ICC11_BINX64x86)\xilink.exe

  DEBUG_ICC11x86_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF
RELEASE_ICC11x86_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /EHs-c- /GF
NOOPT_ICC11x86_X64_CC_FLAGS                   = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF /Od
  DEBUG_ICC11x86_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_ICC11x86_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd
NOOPT_ICC11x86_X64_ASM_FLAGS                  = /nologo /c /WX /W3 /Cx /Zd /Zi
  DEBUG_ICC11x86_X64_NASM_FLAGS               = -Ox -f win64 -g
RELEASE_ICC11x86_X64_NASM_FLAGS               = -Ox -f win64
NOOPT_ICC11x86_X64_NASM_FLAGS                 = -O0 -f win64 -g
  DEBUG_ICC11x86_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICC11x86_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICC11x86_X64_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

      *_ICC11x86_X64_SLINK_FLAGS              = /nologo /LTCG


##################
# IPF definitions
##################
*_ICC11x86_IPF_CC_PATH                   = DEF(ICC11_BIN64x86)\icl.exe
# icl.exe needs cl.exe from Visual Studio
*_ICC11x86_IPF_CC_DLL                    = DEF(MS_VS_BIN)
*_ICC11x86_IPF_SLINK_PATH                = DEF(ICC11_BIN64x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11x86_IPF_SLINK_DLL                 = DEF(MS_VS_BIN);DEF(MS_VS_DLL)
*_ICC11x86_IPF_DLINK_PATH                = DEF(ICC11_BIN64x86)\xilink.exe
*_ICC11x86_IPF_PP_PATH                   = DEF(ICC11_BIN64x86)\icl.exe
*_ICC11x86_IPF_VFRPP_PATH                = DEF(ICC11_BIN64x86)\icl.exe
*_ICC11x86_IPF_APP_PATH                  = DEF(ICC11_BIN64x86)\icl.exe
*_ICC11x86_IPF_ASM_PATH                  = DEF(ICC11_BIN64x86)\ias.exe
*_ICC11x86_IPF_ASLCC_PATH                = DEF(ICC11_BIN64x86)\icl.exe
*_ICC11x86_IPF_ASLPP_PATH                = DEF(ICC11_BIN64x86)\icl.exe
*_ICC11x86_IPF_ASLDLINK_PATH             = DEF(ICC11_BIN64x86)\xilink.exe

  DEBUG_ICC11x86_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding /Zi
RELEASE_ICC11x86_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding
NOOPT_ICC11x86_IPF_CC_FLAGS                   = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding /Zi

  DEBUG_ICC11x86_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32
RELEASE_ICC11x86_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -F COFF32
NOOPT_ICC11x86_IPF_ASM_FLAGS                  = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32
  DEBUG_ICC11x86_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_ICC11x86_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
NOOPT_ICC11x86_IPF_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG

      *_ICC11x86_IPF_SLINK_FLAGS              = /nologo

##################
# EBC definitions
##################
*_ICC11x86_EBC_*_FAMILY              = INTEL

*_ICC11x86_EBC_MAKE_PATH             = DEF(MS_VS_BIN)\nmake.exe
*_ICC11x86_EBC_PP_PATH               = DEF(EBC_BINx86)\iec.exe
*_ICC11x86_EBC_VFRPP_PATH            = DEF(EBC_BINx86)\iec.exe
*_ICC11x86_EBC_CC_PATH               = DEF(EBC_BINx86)\iec.exe
*_ICC11x86_EBC_SLINK_PATH            = DEF(EBC_BINx86)\link.exe
*_ICC11x86_EBC_DLINK_PATH            = DEF(EBC_BINx86)\link.exe

*_ICC11x86_EBC_MAKE_FLAGS                 = /nologo
*_ICC11x86_EBC_PP_FLAGS                   = /nologo /E /TC /FIAutoGen.h
*_ICC11x86_EBC_CC_FLAGS                   = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_ICC11x86_EBC_VFRPP_FLAGS                = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICC11x86_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
*_ICC11x86_EBC_DLINK_FLAGS                = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Intel(R) C++ Compiler Version 11.1 x86 (32-bit on 64-bit OS)
#
#   IA32 - Intel(R) C++ Compiler for applications running on IA32         (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_ia32)
#   X64  - Intel(R) C++ Compiler for applications running on Intel(R) 64  (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_intel64)
#   IPF  - Intel(R) C++ Compiler for applications running on IA-64        (Version 11.1 Build 072 Package ID: w_cproc_p_11.1.072_ia64)
#   ASL  - Microsoft ACPI Source Language Compiler
#
####################################################################################
#   ICC11x86xASL              - Intel C Compiler V11.1
*_ICC11x86xASL_*_*_FAMILY                    = INTEL

*_ICC11x86xASL_*_MAKE_PATH                   = DEF(MS_VS_BIN)\nmake.exe
*_ICC11x86xASL_*_RC_PATH                     = DEF(MS_VS_BIN)\rc.exe

*_ICC11x86xASL_*_MAKE_FLAGS                       = /nologo
*_ICC11x86xASL_*_VFRPP_FLAGS                      = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICC11x86xASL_*_APP_FLAGS                        = /nologo /E /TC
*_ICC11x86xASL_*_PP_FLAGS                         = /nologo /E /TC /FIAutoGen.h

*_ICC11x86xASL_*_ASM16_PATH      = DEF(MS_VS_BIN)\ml.exe

##################
# ASL definitions
##################
*_ICC11x86xASL_*_ASL_PATH        = DEF(WIN_ASL_BIN)
*_ICC11x86xASL_*_ASL_FLAGS       =
*_ICC11x86xASL_*_ASL_OUTFLAGS    = DEF(MS_ASL_OUTFLAGS)
*_ICC11x86xASL_*_ASLCC_FLAGS     = DEF(ICC_WIN_ASLCC_FLAGS)
*_ICC11x86xASL_*_ASLPP_FLAGS     = DEF(ICC_WIN_ASLPP_FLAGS)
*_ICC11x86xASL_*_ASLDLINK_FLAGS  = DEF(ICC_WIN_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_ICC11x86xASL_IA32_CC_PATH                  = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86xASL_IA32_SLINK_PATH               = DEF(ICC11_BIN32x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11x86xASL_IA32_SLINK_DLL                = DEF(MS_VS_BIN)
*_ICC11x86xASL_IA32_DLINK_PATH               = DEF(ICC11_BIN32x86)\xilink.exe
*_ICC11x86xASL_IA32_PP_PATH                  = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86xASL_IA32_VFRPP_PATH               = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86xASL_IA32_APP_PATH                 = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86xASL_IA32_ASM_PATH                 = DEF(MS_VS_BIN)\ml.exe
*_ICC11x86xASL_IA32_ASM_DLL                  = DEF(MS_VS_DLL)
*_ICC11x86xASL_IA32_ASLCC_PATH               = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86xASL_IA32_ASLPP_PATH               = DEF(ICC11_BIN32x86)\icl.exe
*_ICC11x86xASL_IA32_ASLDLINK_PATH            = DEF(ICC11_BIN32x86)\xilink.exe

  DEBUG_ICC11x86xASL_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm
RELEASE_ICC11x86xASL_IA32_CC_FLAGS                = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1b2 /GL /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF
NOOPT_ICC11x86xASL_IA32_CC_FLAGS                  = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /DEFI_FIRMWARE_VENDOR=L\"INTEL\" /FIAutoGen.h /EHs-c- /GF /Zi /Gm /Od

  DEBUG_ICC11x86xASL_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd /Zi
RELEASE_ICC11x86xASL_IA32_ASM_FLAGS               = /nologo /c /WX /W3 /Zd
NOOPT_ICC11x86xASL_IA32_ASM_FLAGS                 = /nologo /c /WX /W3 /Zd /Zi
  DEBUG_ICC11x86xASL_IA32_NASM_FLAGS              = -Ox -f win32 -g
RELEASE_ICC11x86xASL_IA32_NASM_FLAGS              = -Ox -f win32
NOOPT_ICC11x86xASL_IA32_NASM_FLAGS                = -O0 -f win32 -g
      *_ICC11x86xASL_IA32_SLINK_FLAGS             = /nologo
  DEBUG_ICC11x86xASL_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICC11x86xASL_IA32_DLINK_FLAGS             = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICC11x86xASL_IA32_DLINK_FLAGS               = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_ICC11x86xASL_X64_CC_PATH                   = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86xASL_X64_SLINK_PATH                = DEF(ICC11_BINX64x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11x86xASL_X64_SLINK_DLL                 = DEF(MS_VS_BIN)
*_ICC11x86xASL_X64_DLINK_PATH                = DEF(ICC11_BINX64x86)\xilink.exe
*_ICC11x86xASL_X64_PP_PATH                   = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86xASL_X64_VFRPP_PATH                = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86xASL_X64_APP_PATH                  = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86xASL_X64_ASM_PATH                  = DEF(WINDDK_BINX64)\ml64.exe
*_ICC11x86xASL_X64_ASM_DLL                   = DEF(MS_VS_DLL)
*_ICC11x86xASL_X64_ASLCC_PATH                = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86xASL_X64_ASLPP_PATH                = DEF(ICC11_BINX64x86)\icl.exe
*_ICC11x86xASL_X64_ASLDLINK_PATH             = DEF(ICC11_BINX64x86)\xilink.exe

  DEBUG_ICC11x86xASL_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF
RELEASE_ICC11x86xASL_X64_CC_FLAGS                 = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2s /GL /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /EHs-c- /GF
NOOPT_ICC11x86xASL_X64_CC_FLAGS                   = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FI$(DEST_DIR_DEBUG)/AutoGen.h /Zi /Gm /EHs-c- /GF /Od

  DEBUG_ICC11x86xASL_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_ICC11x86xASL_X64_ASM_FLAGS                = /nologo /c /WX /W3 /Cx /Zd
NOOPT_ICC11x86xASL_X64_ASM_FLAGS                  = /nologo /c /WX /W3 /Cx /Zd /Zi
  DEBUG_ICC11x86xASL_X64_NASM_FLAGS               = -Ox -f win64 -g
RELEASE_ICC11x86xASL_X64_NASM_FLAGS               = -Ox -f win64
NOOPT_ICC11x86xASL_X64_NASM_FLAGS                 = -O0 -f win64 -g

  DEBUG_ICC11x86xASL_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_ICC11x86xASL_X64_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_ICC11x86xASL_X64_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:CONSOLE /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

      *_ICC11x86xASL_X64_SLINK_FLAGS              = /nologo /LTCG


##################
# IPF definitions
##################
*_ICC11x86xASL_IPF_CC_PATH                   = DEF(ICC11_BIN64x86)\icl.exe
# icl.exe needs cl.exe from Visual Studio
*_ICC11x86xASL_IPF_CC_DLL                    = DEF(MS_VS_BIN)
*_ICC11x86xASL_IPF_SLINK_PATH                = DEF(ICC11_BIN64x86)\xilib.exe
# xilib.exe needs lib.exe from Visual Studio
*_ICC11x86xASL_IPF_SLINK_DLL                 = DEF(MS_VS_BIN);DEF(MS_VS_DLL)
*_ICC11x86xASL_IPF_DLINK_PATH                = DEF(ICC11_BIN64x86)\xilink.exe
*_ICC11x86xASL_IPF_PP_PATH                   = DEF(ICC11_BIN64x86)\icl.exe
*_ICC11x86xASL_IPF_VFRPP_PATH                = DEF(ICC11_BIN64x86)\icl.exe
*_ICC11x86xASL_IPF_APP_PATH                  = DEF(ICC11_BIN64x86)\icl.exe
*_ICC11x86xASL_IPF_ASM_PATH                  = DEF(ICC11_BIN64x86)\ias.exe
*_ICC11x86xASL_IPF_ASLCC_PATH                = DEF(ICC11_BIN64x86)\icl.exe
*_ICC11x86xASL_IPF_ASLPP_PATH                = DEF(ICC11_BIN64x86)\icl.exe
*_ICC11x86xASL_IPF_ASLDLINK_PATH             = DEF(ICC11_BIN64x86)\xilink.exe

  DEBUG_ICC11x86xASL_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding /Zi
RELEASE_ICC11x86xASL_IPF_CC_FLAGS                 = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding
NOOPT_ICC11x86xASL_IPF_CC_FLAGS                   = /nologo /c /WX /W4 /GX /Gy /Od /FI$(DEST_DIR_DEBUG)/AutoGen.h /QIA64_fr32 /GF /Qfreestanding /Zi
  DEBUG_ICC11x86xASL_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32
RELEASE_ICC11x86xASL_IPF_ASM_FLAGS                = -N us -X explicit -M ilp64 -N so -W3 -F COFF32
NOOPT_ICC11x86xASL_IPF_ASM_FLAGS                  = -N us -X explicit -M ilp64 -N so -W3 -d debug -F COFF32
  DEBUG_ICC11x86xASL_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_ICC11x86xASL_IPF_DLINK_FLAGS              = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
NOOPT_ICC11x86xASL_IPF_DLINK_FLAGS                = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:64 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
      *_ICC11x86xASL_IPF_SLINK_FLAGS              = /nologo

##################
# EBC definitions
##################
*_ICC11x86xASL_EBC_*_FAMILY              = INTEL

*_ICC11x86xASL_EBC_MAKE_PATH             = DEF(MS_VS_BIN)\nmake.exe
*_ICC11x86xASL_EBC_PP_PATH               = DEF(EBC_BINx86)\iec.exe
*_ICC11x86xASL_EBC_VFRPP_PATH            = DEF(EBC_BINx86)\iec.exe
*_ICC11x86xASL_EBC_CC_PATH               = DEF(EBC_BINx86)\iec.exe
*_ICC11x86xASL_EBC_SLINK_PATH            = DEF(EBC_BINx86)\link.exe
*_ICC11x86xASL_EBC_DLINK_PATH            = DEF(EBC_BINx86)\link.exe

*_ICC11x86xASL_EBC_MAKE_FLAGS                 = /nologo
*_ICC11x86xASL_EBC_PP_FLAGS                   = /nologo /E /TC /FIAutoGen.h
*_ICC11x86xASL_EBC_CC_FLAGS                   = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_ICC11x86xASL_EBC_VFRPP_FLAGS                = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_ICC11x86xASL_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
*_ICC11x86xASL_EBC_DLINK_FLAGS                = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# MYTOOLS
#   IA32 - Microsoft Visual Studio 2008 Team Suite
#   X64  - Microsoft Visual Studio 2008 Team Suite
#   IPF  - Microsoft Windows DDK 3790.1830
#   EBC  - Intel EFI Byte Code Compiler
#
####################################################################################
#   MYTOOLS          - Settings compatible with previous versions of tools_def.template
*_MYTOOLS_*_*_FAMILY                = MSFT

##################
# ASL definitions
##################
*_MYTOOLS_*_ASL_PATH        = DEF(DEFAULT_WIN_ASL_BIN)
*_MYTOOLS_*_ASL_FLAGS       = DEF(DEFAULT_WIN_ASL_FLAGS)
*_MYTOOLS_*_ASL_OUTFLAGS    = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_MYTOOLS_*_ASLCC_FLAGS     = DEF(MSFT_ASLCC_FLAGS)
*_MYTOOLS_*_ASLPP_FLAGS     = DEF(MSFT_ASLPP_FLAGS)
*_MYTOOLS_*_ASLDLINK_FLAGS  = DEF(MSFT_ASLDLINK_FLAGS)


*_MYTOOLS_*_MAKE_FLAGS                   = /nologo
*_MYTOOLS_*_VFRPP_FLAGS                  = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_MYTOOLS_*_APP_FLAGS                    = /nologo /E /TC
*_MYTOOLS_*_PP_FLAGS                     = /nologo /E /TC /FIAutoGen.h
*_MYTOOLS_*_SLINK_FLAGS                  = /nologo /LTCG

*_MYTOOLS_*_ASM16_PATH      = DEF(VS2008_BIN)\ml.exe

##################
# IA32 definitions
##################
*_MYTOOLS_IA32_*_DLL                = DEF(VS2008_DLL)

*_MYTOOLS_IA32_MAKE_PATH            = DEF(VS2008_BIN)\nmake.exe
*_MYTOOLS_IA32_CC_PATH              = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_SLINK_PATH           = DEF(VS2008_BIN)\lib.exe
*_MYTOOLS_IA32_DLINK_PATH           = DEF(VS2008_BIN)\link.exe
*_MYTOOLS_IA32_PP_PATH              = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_VFRPP_PATH           = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_APP_PATH             = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_ASM_PATH             = DEF(VS2008_BIN)\ml.exe
*_MYTOOLS_IA32_ASLCC_PATH           = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_ASLPP_PATH           = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_ASLDLINK_PATH        = DEF(VS2008_BIN)\link.exe
*_MYTOOLS_IA32_RC_PATH              = DEF(WINSDK_BIN)\rc.exe

  DEBUG_MYTOOLS_IA32_CC_FLAGS            = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_MYTOOLS_IA32_CC_FLAGS            = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_MYTOOLS_IA32_CC_FLAGS              = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od
  DEBUG_MYTOOLS_IA32_ASM_FLAGS           = /nologo /c /WX /W3 /coff /Cx /Zd /Zi
RELEASE_MYTOOLS_IA32_ASM_FLAGS           = /nologo /c /WX /W3 /coff /Cx /Zd
NOOPT_MYTOOLS_IA32_ASM_FLAGS             = /nologo /c /WX /W3 /coff /Cx /Zd /Zi  
  DEBUG_MYTOOLS_IA32_NASM_FLAGS          = -Ox -f win32 -g
RELEASE_MYTOOLS_IA32_NASM_FLAGS          = -Ox -f win32
NOOPT_MYTOOLS_IA32_NASM_FLAGS            = -O0 -f win32 -g
  DEBUG_MYTOOLS_IA32_DLINK_FLAGS         = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
RELEASE_MYTOOLS_IA32_DLINK_FLAGS         = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_MYTOOLS_IA32_DLINK_FLAGS           = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb

##################
# x64 definitions
##################
*_MYTOOLS_X64_*_DLL                 = DEF(VS2008_DLL)

*_MYTOOLS_X64_MAKE_PATH             = DEF(VS2008_BIN)\nmake.exe
*_MYTOOLS_X64_CC_PATH               = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_SLINK_PATH            = DEF(VS2008_BINX64)\lib.exe
*_MYTOOLS_X64_DLINK_PATH            = DEF(VS2008_BINX64)\link.exe
*_MYTOOLS_X64_PP_PATH               = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_VFRPP_PATH            = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_APP_PATH              = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_ASM_PATH              = DEF(VS2008_BINX64)\ml64.exe
*_MYTOOLS_X64_ASLCC_PATH            = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_ASLPP_PATH            = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_ASLDLINK_PATH         = DEF(VS2008_BINX64)\link.exe
*_MYTOOLS_X64_RC_PATH               = DEF(WINSDK_BIN)\rc.exe

  DEBUG_MYTOOLS_X64_CC_FLAGS             = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_MYTOOLS_X64_CC_FLAGS             = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /O1b2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_MYTOOLS_X64_CC_FLAGS               = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od  
  DEBUG_MYTOOLS_X64_ASM_FLAGS            = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_MYTOOLS_X64_ASM_FLAGS            = /nologo /c /WX /W3 /Cx /Zd
NOOPT_MYTOOLS_X64_ASM_FLAGS              = /nologo /c /WX /W3 /Cx /Zd /Zi  
  DEBUG_MYTOOLS_X64_NASM_FLAGS           = -Ox -f win64 -g
RELEASE_MYTOOLS_X64_NASM_FLAGS           = -Ox -f win64
NOOPT_MYTOOLS_X64_NASM_FLAGS             = -O0 -f win64 -g
  DEBUG_MYTOOLS_X64_DLINK_FLAGS          = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_MYTOOLS_X64_DLINK_FLAGS          = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_MYTOOLS_X64_DLINK_FLAGS            = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_MYTOOLS_IPF_MAKE_PATH             = DEF(WINDDK_BIN32)\nmake.exe
*_MYTOOLS_IPF_CC_PATH               = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_SLINK_PATH            = DEF(WINDDK_BIN64)\lib.exe
*_MYTOOLS_IPF_DLINK_PATH            = DEF(WINDDK_BIN64)\link.exe
*_MYTOOLS_IPF_PP_PATH               = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_VFRPP_PATH            = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_APP_PATH              = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_ASM_PATH              = DEF(WINDDK_BIN64)\ias.exe
*_MYTOOLS_IPF_ASLCC_PATH            = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_ASLPP_PATH            = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_ASLDLINK_PATH         = DEF(WINDDK_BIN64)\link.exe
*_MYTOOLS_IPF_RC_PATH               = DEF(WINDDK_BIN32)\rc.exe

      *_MYTOOLS_IPF_ASM_OUTPUT           = "-o "
  DEBUG_MYTOOLS_IPF_CC_FLAGS             = /nologo /c /WX /GS- /X /W4 /Gy /Ox /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zx /QIPF_fr32 /Zi
RELEASE_MYTOOLS_IPF_CC_FLAGS             = /nologo /c /WX /GS- /X /W4 /Gy /Ox /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zx /QIPF_fr32
NOOPT_MYTOOLS_IPF_CC_FLAGS               = /nologo /c /WX /GS- /X /W4 /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zx /QIPF_fr32 /Zi /Od
  DEBUG_MYTOOLS_IPF_ASM_FLAGS            = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_MYTOOLS_IPF_ASM_FLAGS            = -N us -X explicit -M ilp64 -N so -W4
NOOPT_MYTOOLS_IPF_ASM_FLAGS              = -N us -X explicit -M ilp64 -N so -W4 -d debug
  DEBUG_MYTOOLS_IPF_DLINK_FLAGS          = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF /OPT:ICF=10 /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_MYTOOLS_IPF_DLINK_FLAGS          = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF /OPT:ICF=10 /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_MYTOOLS_IPF_DLINK_FLAGS            = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF /OPT:ICF=10 /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
      *_MYTOOLS_IPF_SLINK_FLAGS          = /nologo /LTCG

##################
# EBC definitions
##################
*_MYTOOLS_EBC_*_FAMILY              = INTEL

*_MYTOOLS_EBC_MAKE_PATH             = DEF(VS2005_BIN)\nmake.exe
*_MYTOOLS_EBC_PP_PATH               = DEF(EBC_BIN)\iec.exe
*_MYTOOLS_EBC_VFRPP_PATH            = DEF(EBC_BIN)\iec.exe
*_MYTOOLS_EBC_CC_PATH               = DEF(EBC_BIN)\iec.exe
*_MYTOOLS_EBC_SLINK_PATH            = DEF(EBC_BIN)\link.exe
*_MYTOOLS_EBC_DLINK_PATH            = DEF(EBC_BIN)\link.exe
*_MYTOOLS_EBC_RC_PATH               = DEF(VS2005_BIN)\rc.exe

*_MYTOOLS_EBC_MAKE_FLAGS                 = /nologo
*_MYTOOLS_EBC_PP_FLAGS                   = /nologo /E /TC /FIAutoGen.h
*_MYTOOLS_EBC_CC_FLAGS                   = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_MYTOOLS_EBC_VFRPP_FLAGS                = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_MYTOOLS_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
*_MYTOOLS_EBC_DLINK_FLAGS                = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Xcode Support for building on Mac OS X (Snow Leopard)
#
####################################################################################
#   XCODE32         - Xcode 3.2 Tools (Snow Leopard)
*_XCODE32_*_*_FAMILY            = GCC
*_XCODE32_*_*_BUILDRULEFAMILY   = XCODE
*_XCODE32_*_*_BUILDRULEORDER    = S s nasm


*_XCODE32_*_ASL_PATH          = /usr/bin/iasl

*_XCODE32_*_MAKE_PATH        = make

*_XCODE32_*_DSYMUTIL_PATH    = /usr/bin/dsymutil

# This tool needs to be installed seperatly from Xcode 3.2
*_XCODE32_*_MTOC_PATH        = /usr/local/bin/mtoc

  DEBUG_XCODE32_*_MTOC_FLAGS = -align 0x20 -d $(DEBUG_DIR)/$(MODULE_NAME).dll
RELEASE_XCODE32_*_MTOC_FLAGS = -align 0x20

##################
# IA32 definitions
##################
*_XCODE32_IA32_CC_PATH      = gcc
*_XCODE32_IA32_SLINK_PATH   = libtool
*_XCODE32_IA32_DLINK_PATH   = ld
*_XCODE32_IA32_ASM_PATH     = as
*_XCODE32_IA32_PP_PATH      = gcc
*_XCODE32_IA32_VFRPP_PATH   = gcc
*_XCODE32_IA32_ASL_PATH     = iasl
*_XCODE32_IA32_ASLCC_PATH   = gcc
*_XCODE32_IA32_ASLPP_PATH   = gcc
*_XCODE32_IA32_ASLDLINK_PATH  = ld

  DEBUG_XCODE32_IA32_DLINK_FLAGS      = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
RELEASE_XCODE32_IA32_DLINK_FLAGS      = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x220 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_XCODE32_IA32_SLINK_FLAGS      = -static -o
  DEBUG_XCODE32_IA32_ASM_FLAGS  = -arch i386 -g
RELEASE_XCODE32_IA32_ASM_FLAGS  = -arch i386
*_XCODE32_IA32_NASM_FLAGS       = -f macho32
*_XCODE32_IA32_PP_FLAGS         = -arch i386 -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_XCODE32_IA32_VFRPP_FLAGS      = -arch i386 -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
  DEBUG_XCODE32_IA32_CC_FLAGS   = -arch i386 -save-temps -g -O0 -combine -mms-bitfields  -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces  -c -include AutoGen.h -mdynamic-no-pic -fno-stack-protector
RELEASE_XCODE32_IA32_CC_FLAGS   = -arch i386 -Oz -combine -mms-bitfields  -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -fomit-frame-pointer -c -include AutoGen.h -mdynamic-no-pic -fno-stack-protector

*_XCODE32_IA32_ASLCC_FLAGS      = -arch i386 -x c -save-temps -g -O0 -mms-bitfields -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -c -include AutoGen.h -mdynamic-no-pic
*_XCODE32_IA32_ASLDLINK_FLAGS   = -arch i386 -e _main -preload -segalign 0x20  -pie -seg1addr 0x220 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_XCODE32_IA32_ASLPP_FLAGS      = -arch i386 -x c -E -include AutoGen.h
*_XCODE32_IA32_ASL_FLAGS        =

##################
# X64 definitions - still a work in progress. This tool chain does not produce
# the correct ABI, it is just used to compile the code....
##################
*_XCODE32_X64_CC_PATH       = gcc
*_XCODE32_X64_SLINK_PATH    = libtool
*_XCODE32_X64_DLINK_PATH    = ld
*_XCODE32_X64_ASM_PATH      = as
*_XCODE32_X64_PP_PATH       = gcc
*_XCODE32_X64_VFRPP_PATH    = gcc
*_XCODE32_X64_ASL_PATH     = iasl
*_XCODE32_X64_ASLCC_PATH   = gcc
*_XCODE32_X64_ASLPP_PATH   = gcc
*_XCODE32_X64_ASLDLINK_PATH  = ld

*_XCODE32_X64_DLINK_FLAGS      = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_XCODE32_X64_SLINK_FLAGS      = -static -o

  DEBUG_XCODE32_X64_ASM_FLAGS  = -arch x86_64 -g
RELEASE_XCODE32_X64_ASM_FLAGS  = -arch x86_64
*_XCODE32_X64_NASM_FLAGS       = -f macho64
*_XCODE32_X64_PP_FLAGS         = -arch x86_64 -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_XCODE32_X64_VFRPP_FLAGS      = -arch x86_64 -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h

  DEBUG_XCODE32_X64_CC_FLAGS   = -arch x86_64 -save-temps -g -O0 -mms-bitfields -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -Wno-address  -fomit-frame-pointer -static  -c -include AutoGen.h -fno-stack-protector
RELEASE_XCODE32_X64_CC_FLAGS   = -arch x86_64 -Oz -mms-bitfields -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -Wno-address  -fomit-frame-pointer -static  -c -include AutoGen.h -fno-stack-protector

##################
# ARM definitions - (Assumes iPhone SDK installed on Snow Leopard)
##################

*_XCODE32_ARM_ARCHCC_FLAGS    = -arch armv7 -march=armv7 -mthumb
*_XCODE32_ARM_ARCHASM_FLAGS   = -arch armv7
*_XCODE32_ARM_ARCHDLINK_FLAGS = -arch armv7
*_XCODE32_ARM_PLATFORM_FLAGS  =

*_XCODE32_ARM_CC_PATH       = DEF(IPHONE_TOOLS)/usr/bin/gcc
*_XCODE32_ARM_SLINK_PATH    = DEF(IPHONE_TOOLS)/usr/bin/libtool
*_XCODE32_ARM_DLINK_PATH    = ld
*_XCODE32_ARM_ASM_PATH      = DEF(IPHONE_TOOLS)/usr/bin/as
*_XCODE32_ARM_PP_PATH       = DEF(IPHONE_TOOLS)/usr/bin/gcc
*_XCODE32_ARM_VFRPP_PATH    = DEF(IPHONE_TOOLS)/usr/bin/gcc

  DEBUG_XCODE32_ARM_DLINK_FLAGS      = $(ARCHDLINK_FLAGS) -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x220 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
RELEASE_XCODE32_ARM_DLINK_FLAGS      = $(ARCHDLINK_FLAGS) -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x220 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map

*_XCODE32_ARM_SLINK_FLAGS      = -static -o

  DEBUG_XCODE32_ARM_ASM_FLAGS  = $(ARCHASM_FLAGS) -g
RELEASE_XCODE32_ARM_ASM_FLAGS  = $(ARCHASM_FLAGS)
*_XCODE32_ARM_PP_FLAGS         = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_XCODE32_ARM_VFRPP_FLAGS      = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h

  DEBUG_XCODE32_ARM_CC_FLAGS   = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -mthumb-interwork -g -Oz -mabi=aapcs -mapcs -fno-short-enums  -save-temps -combine -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -fomit-frame-pointer -c -include AutoGen.h
RELEASE_XCODE32_ARM_CC_FLAGS   = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -mthumb-interwork -Oz    -mabi=aapcs -mapcs -fno-short-enums  -save-temps -combine -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -fomit-frame-pointer -c -include AutoGen.h


####################################################################################
#
# Clang Support for building on Mac OS X
#
####################################################################################
#   CLANG         - clang that produce Mach-O with EFI x86_64 ABI
*_XCLANG_*_*_FAMILY            = GCC
*_XCLANG_*_*_BUILDRULEFAMILY   = XCODE
*_XCLANG_*_*_BUILDRULEORDER    = S s nasm

*_XCLANG_*_ASL_PATH          = /usr/bin/iasl

*_XCLANG_*_MAKE_PATH        = make
*_XCLANG_*_DSYMUTIL_PATH    = /usr/bin/dsymutil

      *_*_*_MTOC_PATH  = /usr/local/bin/mtoc

  DEBUG_XCLANG_*_MTOC_FLAGS = -align 0x20 -d $(DEBUG_DIR)/$(MODULE_NAME).dll
RELEASE_XCLANG_*_MTOC_FLAGS = -align 0x20


*_XCLANG_*_CC_PATH      = ENV(CLANG_BIN)clang
*_XCLANG_*_SLINK_PATH   = libtool
*_XCLANG_*_DLINK_PATH   = ld
*_XCLANG_*_ASM_PATH     = as
*_XCLANG_*_PP_PATH      = ENV(CLANG_BIN)clang
*_XCLANG_*_VFRPP_PATH   = ENV(CLANG_BIN)clang
*_XCLANG_*_ASL_PATH     = iasl
*_XCLANG_*_ASLCC_PATH   = ENV(CLANG_BIN)clang
*_XCLANG_*_ASLPP_PATH   = ENV(CLANG_BIN)clang
*_XCLANG_*_ASLDLINK_PATH  = ld

####################
# IA-32 definitions
####################
  DEBUG_XCLANG_IA32_DLINK_FLAGS      = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
RELEASE_XCLANG_IA32_DLINK_FLAGS      = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x220 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_XCLANG_IA32_SLINK_FLAGS      = -static -o
  DEBUG_XCLANG_IA32_ASM_FLAGS  = -arch i386 -g
RELEASE_XCLANG_IA32_ASM_FLAGS  = -arch i386 
*_XCLANG_IA32_NASM_FLAGS       = -f macho32

  DEBUG_XCLANG_IA32_CC_FLAGS   = -arch i386 -c -g -O0  -Wall -Werror -include AutoGen.h -fno-stack-protector -fno-builtin -fshort-wchar -mdynamic-no-pic -mno-sse -mno-mmx -Wno-empty-body -Wno-pointer-sign -Wno-unused-function -Wno-unused-value -Wno-missing-braces -Wno-tautological-compare -Wreturn-type -Wno-unused-variable  -fasm-blocks  -mms-bitfields -msoft-float -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang
RELEASE_XCLANG_IA32_CC_FLAGS   = -arch i386 -c    -Os  -Wall -Werror -include AutoGen.h -fno-stack-protector -fno-builtin -fshort-wchar -mdynamic-no-pic -mno-sse -mno-mmx -Wno-empty-body -Wno-pointer-sign -Wno-unused-function -Wno-unused-value -Wno-missing-braces -Wno-tautological-compare -Wreturn-type -Wno-unused-variable  -fasm-blocks  -mms-bitfields -msoft-float -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang


##################
# X64 definitions
##################
  DEBUG_XCLANG_X64_DLINK_FLAGS      = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
RELEASE_XCLANG_X64_DLINK_FLAGS      = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x220 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_XCLANG_X64_SLINK_FLAGS      = -static -o
  DEBUG_XCLANG_X64_ASM_FLAGS  = -arch x86_64 -g
RELEASE_XCLANG_X64_ASM_FLAGS  = -arch x86_64 
*_XCLANG_X64_NASM_FLAGS       = -f macho64
*_XCLANG_*_PP_FLAGS         = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h 
*_XCLANG_*_VFRPP_FLAGS      = -x c -E -P -DVFRCOMPILE -include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h 


  DEBUG_XCLANG_X64_CC_FLAGS   = -ccc-host-triple x86_64-pc-win32-macho -c -g -O0  -Wall -Werror -include AutoGen.h -fno-stack-protector -fno-builtin -fshort-wchar -mdynamic-no-pic -Wno-empty-body -Wno-pointer-sign -Wno-unused-function -Wno-unused-value -Wno-missing-braces -Wno-tautological-compare -Wreturn-type -Wno-unused-variable -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang
RELEASE_XCLANG_X64_CC_FLAGS   = -ccc-host-triple x86_64-pc-win32-macho -c    -Os  -Wall -Werror -include AutoGen.h -fno-stack-protector -fno-builtin -fshort-wchar -mdynamic-no-pic -Wno-empty-body -Wno-pointer-sign -Wno-unused-function -Wno-unused-value -Wno-missing-braces -Wno-tautological-compare -Wreturn-type -Wno-unused-variable -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang
*_XCLANG_*_ASLCC_FLAGS      = -x c -save-temps -g -O0 -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -c -include AutoGen.h -mdynamic-no-pic
*_XCLANG_*_ASLDLINK_FLAGS   = -e _main -preload -segalign 0x20  -pie -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_XCLANG_*_ASLPP_FLAGS      = -x c -E -include AutoGen.h
*_XCLANG_*_ASL_FLAGS        =

#
# XCODE5 support
#

*_XCODE5_*_*_FAMILY            = GCC
*_XCODE5_*_*_BUILDRULEFAMILY   = XCODE
*_XCODE5_*_*_BUILDRULEORDER    = S s nasm

#
# use xcode-select to change Xcode version of command line tools
#
*_XCODE5_*_MAKE_PATH     = make
*_XCODE5_*_CC_PATH       = clang
*_XCODE5_*_SLINK_PATH    = libtool
*_XCODE5_*_DLINK_PATH    = ld
*_XCODE5_*_ASM_PATH      = as
*_XCODE5_*_PP_PATH       = clang
*_XCODE5_*_VFRPP_PATH    = clang
*_XCODE5_*_ASL_PATH      = iasl
*_XCODE5_*_ASLCC_PATH    = clang
*_XCODE5_*_ASLPP_PATH    = clang
*_XCODE5_*_ASLDLINK_PATH = ld
*_XCODE5_*_DSYMUTIL_PATH = /usr/bin/dsymutil
*_XCODE5_*_MTOC_PATH     = /usr/local/bin/mtoc

##################
# ASL definitions
##################
*_XCODE5_*_ASLCC_FLAGS      = -x c -save-temps -g -O0 -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -c -include AutoGen.h
*_XCODE5_*_ASLDLINK_FLAGS   = -e _ReferenceAcpiTable -preload -segalign 0x20  -pie -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_XCODE5_*_ASLPP_FLAGS      = -x c -E -include AutoGen.h
*_XCODE5_*_ASL_FLAGS        =
*_XCODE5_*_ASL_OUTFLAGS     = DEF(IASL_OUTFLAGS)

##################
# MTOC definitions
##################

  DEBUG_XCODE5_*_MTOC_FLAGS = -align 0x20 -d $(DEBUG_DIR)/$(MODULE_NAME).dll
  NOOPT_XCODE5_*_MTOC_FLAGS = -align 0x20 -d $(DEBUG_DIR)/$(MODULE_NAME).dll
RELEASE_XCODE5_*_MTOC_FLAGS = -align 0x20 

####################
# IA-32 definitions
####################
  DEBUG_XCODE5_IA32_DLINK_FLAGS      = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
  NOOPT_XCODE5_IA32_DLINK_FLAGS      = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
RELEASE_XCODE5_IA32_DLINK_FLAGS      = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map

*_XCODE5_IA32_SLINK_FLAGS      = -static -o
  DEBUG_XCODE5_IA32_ASM_FLAGS  = -arch i386 -g
  NOOPT_XCODE5_IA32_ASM_FLAGS  = -arch i386 -g
RELEASE_XCODE5_IA32_ASM_FLAGS  = -arch i386 
      *_XCODE5_IA32_NASM_FLAGS = -f macho32


  DEBUG_XCODE5_IA32_CC_FLAGS   = -arch i386 -c -g -Os       -Wall -Werror -include AutoGen.h -funsigned-char -fno-stack-protector -fno-builtin -fshort-wchar -fasm-blocks -mdynamic-no-pic -mno-implicit-float -mms-bitfields -msoft-float -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang $(PLATFORM_FLAGS)
RELEASE_XCODE5_IA32_CC_FLAGS   = -arch i386 -c    -Os       -Wall -Werror -include AutoGen.h -funsigned-char -fno-stack-protector -fno-builtin -fshort-wchar -fasm-blocks -mdynamic-no-pic -mno-implicit-float -mms-bitfields -msoft-float -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang $(PLATFORM_FLAGS)
  NOOPT_XCODE5_IA32_CC_FLAGS   = -arch i386 -c -g -O0       -Wall -Werror -include AutoGen.h -funsigned-char -fno-stack-protector -fno-builtin -fshort-wchar -fasm-blocks -mdynamic-no-pic -mno-implicit-float -mms-bitfields -msoft-float -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang $(PLATFORM_FLAGS)

##################
# X64 definitions
##################
  DEBUG_XCODE5_X64_DLINK_FLAGS      = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
  NOOPT_XCODE5_X64_DLINK_FLAGS      = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
RELEASE_XCODE5_X64_DLINK_FLAGS      = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map

*_XCODE5_X64_SLINK_FLAGS      = -static -o
  DEBUG_XCODE5_X64_ASM_FLAGS  = -arch x86_64 -g
  NOOPT_XCODE5_X64_ASM_FLAGS  = -arch x86_64 -g
RELEASE_XCODE5_X64_ASM_FLAGS  = -arch x86_64 
      *_XCODE5_X64_NASM_FLAGS = -f macho64
*_XCODE5_*_PP_FLAGS         = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h 
*_XCODE5_*_VFRPP_FLAGS      = -x c -E -P -DVFRCOMPILE -include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h 

  DEBUG_XCODE5_X64_CC_FLAGS   = -target x86_64-pc-win32-macho -c -g -Os       -Wall -Werror -Wextra -include AutoGen.h -funsigned-char -fno-ms-extensions -fno-stack-protector -fno-builtin -fshort-wchar -mno-implicit-float -mms-bitfields -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang -D NO_MSABI_VA_FUNCS $(PLATFORM_FLAGS)
  NOOPT_XCODE5_X64_CC_FLAGS   = -target x86_64-pc-win32-macho -c -g -O0       -Wall -Werror -Wextra -include AutoGen.h -funsigned-char -fno-ms-extensions -fno-stack-protector -fno-builtin -fshort-wchar -mno-implicit-float -mms-bitfields -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang -D NO_MSABI_VA_FUNCS $(PLATFORM_FLAGS)
RELEASE_XCODE5_X64_CC_FLAGS   = -target x86_64-pc-win32-macho -c    -Os       -Wall -Werror -Wextra -include AutoGen.h -funsigned-char -fno-ms-extensions -fno-stack-protector -fno-builtin -fshort-wchar -mno-implicit-float -mms-bitfields -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang -D NO_MSABI_VA_FUNCS $(PLATFORM_FLAGS)

####################################################################################
#
# RVCT Common
#
####################################################################################

DEFINE RVCT_ALL_ASM_FLAGS   = --diag_suppress=1786 --diag_error=warning --apcs /interwork
DEFINE RVCT_ALL_CC_FLAGS    = --c90 --no_autoinline --asm --gnu --apcs /interwork --signed_chars --no_unaligned_access --split_sections --enum_is_int --preinclude AutoGen.h --diag_suppress=186,188,1,111,68 --diag_warning 167 --diag_error=warning --diag_style=ide --protect_stack
DEFINE RVCT_ALL_DLINK_FLAGS = --no_scanlib --no_exceptions --datacompressor off --strict --symbols --diag_style=ide --no_legacyalign --scatter $(EDK_TOOLS_PATH)/Scripts/Rvct-Align32.sct

####################################################################################
#
# ARM RealView Tools - Windows
#
####################################################################################
#   RVCT         - Tools from ARM

*_RVCT_*_*_FAMILY          = RVCT

#
# Use default values, or override in DSC file
#
*_RVCT_ARM_ARCHCC_FLAGS    = --thumb --fpu=softvfp
*_RVCT_ARM_ARCHASM_FLAGS   = 
*_RVCT_ARM_ARCHDLINK_FLAGS = 
*_RVCT_ARM_PLATFORM_FLAGS  = --cpu 7-A

  DEBUG_RVCT_ARM_DLINK_FLAGS     = $(ARCHDLINK_FLAGS) DEF(RVCT_ALL_DLINK_FLAGS) --entry $(IMAGE_ENTRY_POINT) --map --list $(DEST_DIR_DEBUG)/$(BASE_NAME).map 
RELEASE_RVCT_ARM_DLINK_FLAGS     = $(ARCHDLINK_FLAGS) DEF(RVCT_ALL_DLINK_FLAGS) --entry $(IMAGE_ENTRY_POINT) --map --list $(DEST_DIR_DEBUG)/$(BASE_NAME).map 


*_RVCT_ARM_ASM_FLAGS       = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) DEF(RVCT_ALL_ASM_FLAGS)
*_RVCT_ARM_PP_FLAGS        = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E --preinclude AutoGen.h
*_RVCT_ARM_VFRPP_FLAGS     = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E  -DVFRCOMPILE --preinclude $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_RVCT_ARM_MAKE_PATH       = nmake /NOLOGO
*_RVCT_ARM_SLINK_FLAGS     = --partial -o
  DEBUG_RVCT_ARM_CC_FLAGS  = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(RVCT_ALL_CC_FLAGS) -O1 -g
RELEASE_RVCT_ARM_CC_FLAGS  = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) --diag_suppress=550 DEF(RVCT_ALL_CC_FLAGS) -O2

##################
# ARM definitions
##################
*_RVCT_ARM_CC_PATH         = ENV(RVCT_TOOLS_PATH)armcc
*_RVCT_ARM_SLINK_PATH      = ENV(RVCT_TOOLS_PATH)armlink
*_RVCT_ARM_DLINK_PATH      = ENV(RVCT_TOOLS_PATH)armlink
*_RVCT_ARM_ASM_PATH        = ENV(RVCT_TOOLS_PATH)armasm
*_RVCT_ARM_PP_PATH         = ENV(RVCT_TOOLS_PATH)armcc
*_RVCT_ARM_VFRPP_PATH      = ENV(RVCT_TOOLS_PATH)armcc
*_RVCT_ARM_FROMELF_PATH    = ENV(RVCT_TOOLS_PATH)fromelf

####################################################################################
#
# ARM RealView Tools - Linux
#
####################################################################################
#   RVCTLINUX         - Tools from ARM in a Cygwin environment
*_RVCTLINUX_*_*_FAMILY               = RVCT
*_RVCTLINUX_*_*_BUILDRULEFAMILY      = RVCTLINUX

*_RVCTLINUX_*_MAKE_PATH       = make

#
# Use default values, or override in DSC file
#
*_RVCTLINUX_ARM_ARCHCC_FLAGS    = --thumb --fpu=softvfp
*_RVCTLINUX_ARM_ARCHASM_FLAGS   = 
*_RVCTLINUX_ARM_ARCHDLINK_FLAGS = 
*_RVCTLINUX_ARM_PLATFORM_FLAGS  = --cpu 7-A

DEBUG_RVCTLINUX_ARM_DLINK_FLAGS     = $(ARCHDLINK_FLAGS) DEF(RVCT_ALL_DLINK_FLAGS) --entry $(IMAGE_ENTRY_POINT) --map --list $(DEST_DIR_DEBUG)/$(BASE_NAME).map 
RELEASE_RVCTLINUX_ARM_DLINK_FLAGS   = $(ARCHDLINK_FLAGS) DEF(RVCT_ALL_DLINK_FLAGS) --entry $(IMAGE_ENTRY_POINT) --map --list $(DEST_DIR_DEBUG)/$(BASE_NAME).map

*_RVCTLINUX_ARM_ASM_FLAGS       = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) DEF(RVCT_ALL_ASM_FLAGS)
*_RVCTLINUX_ARM_PP_FLAGS        = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E
*_RVCTLINUX_ARM_VFRPP_FLAGS     = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E  -DVFRCOMPILE --preinclude $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_RVCTLINUX_ARM_SLINK_FLAGS     = --partial -o
  DEBUG_RVCTLINUX_ARM_CC_FLAGS  = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(RVCT_ALL_CC_FLAGS) -O1 -g
RELEASE_RVCTLINUX_ARM_CC_FLAGS  = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) --diag_suppress=550 DEF(RVCT_ALL_CC_FLAGS) -O2

##################
# ARM definitions
##################
*_RVCTLINUX_ARM_CC_PATH         = ENV(RVCT_TOOLS_PATH)armcc
*_RVCTLINUX_ARM_SLINK_PATH      = ENV(RVCT_TOOLS_PATH)armlink
*_RVCTLINUX_ARM_DLINK_PATH      = ENV(RVCT_TOOLS_PATH)armlink
*_RVCTLINUX_ARM_ASM_PATH        = ENV(RVCT_TOOLS_PATH)armasm
*_RVCTLINUX_ARM_PP_PATH         = ENV(RVCT_TOOLS_PATH)armcc
*_RVCTLINUX_ARM_VFRPP_PATH      = ENV(RVCT_TOOLS_PATH)armcc
*_RVCTLINUX_ARM_FROMELF_PATH    = ENV(RVCT_TOOLS_PATH)fromelf

####################################################################################
#
# ARM RealView Tools - Cygwin
#
####################################################################################
#   ARMCYGWIN         - Tools from ARM in a Cygwin environment

*_RVCTCYGWIN_*_*_FAMILY               = RVCT
*_RVCTCYGWIN_*_*_BUILDRULEFAMILY      = RVCTCYGWIN

*_RVCTCYGWIN_ARM_CCPATH_FLAG         = ENV(RVCT_TOOLS_PATH)armcc
*_RVCTCYGWIN_ARM_SLINKPATH_FLAG      = ENV(RVCT_TOOLS_PATH)armlink
*_RVCTCYGWIN_ARM_DLINKPATH_FLAG      = ENV(RVCT_TOOLS_PATH)armlink
*_RVCTCYGWIN_ARM_ASMPATH_FLAG        = ENV(RVCT_TOOLS_PATH)armasm
*_RVCTCYGWIN_ARM_PPPATH_FLAG         = ENV(RVCT_TOOLS_PATH)armcc
*_RVCTCYGWIN_ARM_VFRPPPATH_FLAG      = ENV(RVCT_TOOLS_PATH)armcc
*_RVCTCYGWIN_ARM_FROMELFPATH_FLAG    = ENV(RVCT_TOOLS_PATH)fromelf

#
# Use default values, or override in DSC file
#
*_RVCTCYGWIN_ARM_ARCHCC_FLAGS    = --thumb --fpu=softvfp
*_RVCTCYGWIN_ARM_ARCHASM_FLAGS   =
*_RVCTCYGWIN_ARM_ARCHDLINK_FLAGS = 
*_RVCTCYGWIN_ARM_PLATFORM_FLAGS  = --cpu 7-A

  DEBUG_RVCTCYGWIN_ARM_DLINK_FLAGS     = "$(DLINKPATH_FLAG)" $(ARCHDLINK_FLAGS) DEF(RVCT_ALL_DLINK_FLAGS) --entry $(IMAGE_ENTRY_POINT) --map --list `cygpath -m $(DEST_DIR_DEBUG)/$(BASE_NAME).map` 
RELEASE_RVCTCYGWIN_ARM_DLINK_FLAGS     = "$(DLINKPATH_FLAG)" $(ARCHDLINK_FLAGS) DEF(RVCT_ALL_DLINK_FLAGS) --entry $(IMAGE_ENTRY_POINT) --map --list `cygpath -m $(DEST_DIR_DEBUG)/$(BASE_NAME).map` 
 
*_RVCTCYGWIN_ARM_ASM_FLAGS       = "$(ASMPATH_FLAG)" $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) DEF(RVCT_ALL_ASM_FLAGS)
*_RVCTCYGWIN_ARM_PP_FLAGS        = "$(CCPATH_FLAG)" $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E
*_RVCTCYGWIN_ARM_VFRPP_FLAGS     = "$(CCPATH_FLAG)" $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E  -DVFRCOMPILE --preinclude `cygpath -m $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h`
*_RVCTCYGWIN_ARM_MAKE_PATH       = make
*_RVCTCYGWIN_ARM_SLINK_FLAGS     = "$(SLINKPATH_FLAG)" --partial -o
  DEBUG_RVCTCYGWIN_ARM_CC_FLAGS  = "$(CCPATH_FLAG)" $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(RVCT_ALL_CC_FLAGS) -O1 -g
RELEASE_RVCTCYGWIN_ARM_CC_FLAGS  = "$(CCPATH_FLAG)" $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) --diag_suppress=550 DEF(RVCT_ALL_CC_FLAGS) -O2

##################
# ARM definitions
##################
*_RVCTCYGWIN_ARM_CC_PATH         = ENV(WORKSPACE)/BaseTools/Bin/CYGWIN_NT-5.1-i686/armcc_wrapper.py
*_RVCTCYGWIN_ARM_SLINK_PATH      = ENV(WORKSPACE)/BaseTools/Bin/CYGWIN_NT-5.1-i686/armcc_wrapper.py
*_RVCTCYGWIN_ARM_DLINK_PATH      = ENV(WORKSPACE)/BaseTools/Bin/CYGWIN_NT-5.1-i686/armcc_wrapper.py
*_RVCTCYGWIN_ARM_ASM_PATH        = ENV(WORKSPACE)/BaseTools/Bin/CYGWIN_NT-5.1-i686/armcc_wrapper.py
*_RVCTCYGWIN_ARM_PP_PATH         = ENV(WORKSPACE)/BaseTools/Bin/CYGWIN_NT-5.1-i686/armcc_wrapper.py
*_RVCTCYGWIN_ARM_VFRPP_PATH      = ENV(WORKSPACE)/BaseTools/Bin/CYGWIN_NT-5.1-i686/armcc_wrapper.py
*_RVCTCYGWIN_ARM_FROMELF_PATH    = ENV(WORKSPACE)/BaseTools/Bin/CYGWIN_NT-5.1-i686/armcc_wrapper.py

#################
# ASM 16 linker definitions
#################
*_*_*_ASMLINK_PATH                 = DEF(WINDDK_BIN16)\link16.exe
*_*_*_ASMLINK_FLAGS                = /nologo /tiny

##################
# VfrCompiler definitions
##################
*_*_*_VFR_PATH                      = VfrCompile
*_*_*_VFR_FLAGS                     = -l -n

##################
# OptionRom tool definitions
##################
*_*_*_OPTROM_PATH                   = EfiRom
*_*_*_OPTROM_FLAGS                  = -e

##################
# GenFw tool definitions
##################
*_*_*_GENFW_PATH                   = GenFw
*_*_*_GENFW_FLAGS                  =

##################
# Asl Compiler definitions
##################
*_*_*_ASLCC_FLAGS                  = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable
*_*_*_ASLDLINK_FLAGS               = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE
*_*_*_ASLPP_FLAGS                  = /nologo /EP /C
*_*_*_ASL_FLAGS                    =

##################
# GenCrc32 tool definitions
##################
*_*_*_CRC32_PATH          = GenCrc32
*_*_*_CRC32_GUID          = FC1BCDB0-7D31-49AA-936A-A4600D9DD083

##################
# Rsa2048Sha256Sign tool definitions
#
# Notes: This tool defintion uses a test signing key for development purposes only.
#        The tool Rsa2048Sha256GenerateKeys can be used to generate a new private/public key
#        and the gEfiSecurityPkgTokenSpaceGuid.PcdRsa2048Sha256PublicKeyBuffer PCD value.
#        A custom tool/script can be implemented using the new private/public key with
#        the Rsa2048Sha256Sign tool and this tool defintiion can be updated to use a
#        custom tool/script.
#
#   Generate new private/public key and gEfiSecurityPkgTokenSpaceGuid.PcdRsa2048Sha256PublicKeyBuffer PCD value
#
#       Rsa2048Sha256GenerateKeys.py -o MyKey.pem --public-key-hash-c MyKey.pcd
#
#   Custom script example (MyRsa2048Sha256Sign.cmd):
#
#       Rsa2048Sha256Sign --private-key MyKey.pem %1 %2 %3 %4 %5 %6 %7 %8 %9
#
#   WARNING: Vendors that uses private keys are responsible for proper management and protection 
#            of private keys.  Vendors may choose to use infrastructure such as signing servers 
#            or signing portals to support the management and protection of private keys.
#
##################
*_*_*_RSA2048SHA256SIGN_PATH = Rsa2048Sha256Sign
*_*_*_RSA2048SHA256SIGN_GUID = A7717414-C616-4977-9420-844712A735BF

##################
# BrotliCompress tool definitions
##################
*_*_*_BROTLI_PATH        = BrotliCompress
*_*_*_BROTLI_GUID        = 3D532050-5CDA-4FD0-879E-0F7F630D5AFB

##################
# LzmaCompress tool definitions
##################
*_*_*_LZMA_PATH          = LzmaCompress
*_*_*_LZMA_GUID          = EE4E5898-3914-4259-9D6E-DC7BD79403CF

##################
# LzmaF86Compress tool definitions with converter for x86 code.
# It can improve the compression ratio if the input file is IA32 or X64 PE image.
# Notes: If X64 PE image is built based on GCC44, it may not get the better compression.
##################
*_*_*_LZMAF86_PATH         = LzmaF86Compress
*_*_*_LZMAF86_GUID         = D42AE6BD-1352-4bfb-909A-CA72A6EAE889

##################
# TianoCompress tool definitions
##################
*_*_*_TIANO_PATH         = TianoCompress
*_*_*_TIANO_GUID         = A31280AD-481E-41B6-95E8-127F4C984779

##################
# BPDG tool definitions
##################
*_*_*_VPDTOOL_PATH         = BPDG
*_*_*_VPDTOOL_GUID         = 8C3D856A-9BE6-468E-850A-24F7A8D38E08

##################
# Pkcs7Sign tool definitions
##################
*_*_*_PKCS7SIGN_PATH       = Pkcs7Sign
*_*_*_PKCS7SIGN_GUID       = 4AAFD29D-68DF-49EE-8AA9-347D375665A7

##################
# NASM tool definitions
##################
*_*_*_NASM_PATH                = ENV(NASM_PREFIX)nasm
# NASMB uses NASM produce a .bin from a .nasmb NASM source file
*_*_*_NASMB_FLAGS              = -f bin

#################
# Build rule order
#################
*_*_*_*_BUILDRULEORDER = nasm asm Asm ASM S s
